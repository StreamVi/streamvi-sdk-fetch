/* tslint:disable */
/* eslint-disable */
/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


// May contain unused imports in some cases
// @ts-ignore
import type { BlogPageSiteResponseId } from './blog-page-site-response-id';

/**
 * 
 * @export
 * @interface HelpPageResponse
 */
export interface HelpPageResponse {
    /**
     * 
     * @type {BlogPageSiteResponseId}
     * @memberof HelpPageResponse
     */
    '_id': BlogPageSiteResponseId;
    /**
     * url
     * @type {string}
     * @memberof HelpPageResponse
     */
    'url': string;
    /**
     * Generated url from root path
     * @type {string}
     * @memberof HelpPageResponse
     */
    'url_inherit': string;
    /**
     * Notion parent id
     * @type {string}
     * @memberof HelpPageResponse
     */
    'notion_parent_id': string;
    /**
     * Page status
     * @type {string}
     * @memberof HelpPageResponse
     */
    'status': HelpPageResponseStatusEnum;
    /**
     * Date last update
     * @type {string}
     * @memberof HelpPageResponse
     */
    'date_update': string;
    /**
     * Date create
     * @type {string}
     * @memberof HelpPageResponse
     */
    'date_create': string;
    /**
     * Page icon
     * @type {object}
     * @memberof HelpPageResponse
     */
    'icon': object | null;
    /**
     * Subject
     * @type {string}
     * @memberof HelpPageResponse
     */
    'title': string;
    /**
     * Language for indexing
     * @type {string}
     * @memberof HelpPageResponse
     */
    'language': HelpPageResponseLanguageEnum;
    /**
     * Language ISO
     * @type {string}
     * @memberof HelpPageResponse
     */
    'language_iso': HelpPageResponseLanguageIsoEnum;
    /**
     * Text
     * @type {string}
     * @memberof HelpPageResponse
     */
    'text': string;
    /**
     * Alternative language (Array of Language ISO)
     * @type {Array<string>}
     * @memberof HelpPageResponse
     */
    'alt_languages': Array<HelpPageResponseAltLanguagesEnum>;
}

export const HelpPageResponseStatusEnum = {
    None: 'None',
    Backlog: 'Backlog',
    Drafting: 'Drafting',
    Reviewing: 'Reviewing',
    Done: 'Done',
    Published: 'Published'
} as const;

export type HelpPageResponseStatusEnum = typeof HelpPageResponseStatusEnum[keyof typeof HelpPageResponseStatusEnum];
export const HelpPageResponseLanguageEnum = {
    Russian: 'russian',
    English: 'english',
    None: 'none'
} as const;

export type HelpPageResponseLanguageEnum = typeof HelpPageResponseLanguageEnum[keyof typeof HelpPageResponseLanguageEnum];
export const HelpPageResponseLanguageIsoEnum = {
    Ru: 'ru',
    En: 'en',
    Cn: 'cn'
} as const;

export type HelpPageResponseLanguageIsoEnum = typeof HelpPageResponseLanguageIsoEnum[keyof typeof HelpPageResponseLanguageIsoEnum];
export const HelpPageResponseAltLanguagesEnum = {
    Ru: 'ru',
    En: 'en',
    Cn: 'cn'
} as const;

export type HelpPageResponseAltLanguagesEnum = typeof HelpPageResponseAltLanguagesEnum[keyof typeof HelpPageResponseAltLanguagesEnum];


