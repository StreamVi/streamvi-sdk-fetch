/* tslint:disable */
/* eslint-disable */
/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ProjectInfoDataResponse
 */
export interface ProjectInfoDataResponse {
    /**
     * Project id
     * @type {number}
     * @memberof ProjectInfoDataResponse
     */
    project_id: number;
    /**
     * Project name
     * @type {string}
     * @memberof ProjectInfoDataResponse
     */
    name: string;
    /**
     * Project fename
     * @type {string}
     * @memberof ProjectInfoDataResponse
     */
    fename: string;
    /**
     * Project photo in 50px size
     * @type {string}
     * @memberof ProjectInfoDataResponse
     */
    photo_50: string;
    /**
     * Project photo in 100px size
     * @type {string}
     * @memberof ProjectInfoDataResponse
     */
    photo_100: string;
    /**
     * External project id
     * @type {string}
     * @memberof ProjectInfoDataResponse
     */
    external_id: string;
    /**
     * Project type
     * @type {number}
     * @memberof ProjectInfoDataResponse
     */
    type: ProjectInfoDataResponseTypeEnum;
    /**
     * Bonus balance
     * @type {number}
     * @memberof ProjectInfoDataResponse
     */
    balance_bonus: number;
    /**
     * Payment balance
     * @type {number}
     * @memberof ProjectInfoDataResponse
     */
    balance_payment: number;
    /**
     * Profit balance
     * @type {number}
     * @memberof ProjectInfoDataResponse
     */
    balance_profit: number;
    /**
     * Currency
     * @type {number}
     * @memberof ProjectInfoDataResponse
     */
    currency: ProjectInfoDataResponseCurrencyEnum | null;
    /**
     * Country id
     * @type {number}
     * @memberof ProjectInfoDataResponse
     */
    country_id: number;
}


/**
 * @export
 */
export const ProjectInfoDataResponseTypeEnum = {
    NUMBER_0: 0,
    NUMBER_1: 1
} as const;
export type ProjectInfoDataResponseTypeEnum = typeof ProjectInfoDataResponseTypeEnum[keyof typeof ProjectInfoDataResponseTypeEnum];

/**
 * @export
 */
export const ProjectInfoDataResponseCurrencyEnum = {
} as const;
export type ProjectInfoDataResponseCurrencyEnum = typeof ProjectInfoDataResponseCurrencyEnum[keyof typeof ProjectInfoDataResponseCurrencyEnum];


/**
 * Check if a given object implements the ProjectInfoDataResponse interface.
 */
export function instanceOfProjectInfoDataResponse(value: object): value is ProjectInfoDataResponse {
    if (!('project_id' in value) || value['project_id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('fename' in value) || value['fename'] === undefined) return false;
    if (!('photo_50' in value) || value['photo_50'] === undefined) return false;
    if (!('photo_100' in value) || value['photo_100'] === undefined) return false;
    if (!('external_id' in value) || value['external_id'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('balance_bonus' in value) || value['balance_bonus'] === undefined) return false;
    if (!('balance_payment' in value) || value['balance_payment'] === undefined) return false;
    if (!('balance_profit' in value) || value['balance_profit'] === undefined) return false;
    if (!('currency' in value) || value['currency'] === undefined) return false;
    if (!('country_id' in value) || value['country_id'] === undefined) return false;
    return true;
}

export function ProjectInfoDataResponseFromJSON(json: any): ProjectInfoDataResponse {
    return ProjectInfoDataResponseFromJSONTyped(json, false);
}

export function ProjectInfoDataResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProjectInfoDataResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'project_id': json['project_id'],
        'name': json['name'],
        'fename': json['fename'],
        'photo_50': json['photo_50'],
        'photo_100': json['photo_100'],
        'external_id': json['external_id'],
        'type': json['type'],
        'balance_bonus': json['balance_bonus'],
        'balance_payment': json['balance_payment'],
        'balance_profit': json['balance_profit'],
        'currency': json['currency'],
        'country_id': json['country_id'],
    };
}

export function ProjectInfoDataResponseToJSON(json: any): ProjectInfoDataResponse {
    return ProjectInfoDataResponseToJSONTyped(json, false);
}

export function ProjectInfoDataResponseToJSONTyped(value?: ProjectInfoDataResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'project_id': value['project_id'],
        'name': value['name'],
        'fename': value['fename'],
        'photo_50': value['photo_50'],
        'photo_100': value['photo_100'],
        'external_id': value['external_id'],
        'type': value['type'],
        'balance_bonus': value['balance_bonus'],
        'balance_payment': value['balance_payment'],
        'balance_profit': value['balance_profit'],
        'currency': value['currency'],
        'country_id': value['country_id'],
    };
}

