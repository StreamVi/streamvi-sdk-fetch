/* tslint:disable */
/* eslint-disable */
/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TranscoderChannelItem } from './TranscoderChannelItem';
import {
    TranscoderChannelItemFromJSON,
    TranscoderChannelItemFromJSONTyped,
    TranscoderChannelItemToJSON,
    TranscoderChannelItemToJSONTyped,
} from './TranscoderChannelItem';

/**
 * 
 * @export
 * @interface TranscoderListItem
 */
export interface TranscoderListItem {
    /**
     * Id
     * @type {number}
     * @memberof TranscoderListItem
     */
    id: number;
    /**
     * Name
     * @type {string}
     * @memberof TranscoderListItem
     */
    name: string;
    /**
     * createdAt
     * @type {string}
     * @memberof TranscoderListItem
     */
    createdAt: string;
    /**
     * fps
     * @type {number}
     * @memberof TranscoderListItem
     */
    fps?: number;
    /**
     * video bitrate
     * @type {number}
     * @memberof TranscoderListItem
     */
    vBitrate?: number;
    /**
     * audio bitrate
     * @type {number}
     * @memberof TranscoderListItem
     */
    aBitrate?: number;
    /**
     * width
     * @type {number}
     * @memberof TranscoderListItem
     */
    width?: number;
    /**
     * height
     * @type {number}
     * @memberof TranscoderListItem
     */
    height?: number;
    /**
     * rotation
     * @type {number}
     * @memberof TranscoderListItem
     */
    rotation?: number;
    /**
     * B-Frames
     * @type {number}
     * @memberof TranscoderListItem
     */
    bFrames?: number;
    /**
     * Status
     * @type {string}
     * @memberof TranscoderListItem
     */
    status: TranscoderListItemStatusEnum;
    /**
     * Video codec
     * @type {string}
     * @memberof TranscoderListItem
     */
    videoCodec: TranscoderListItemVideoCodecEnum;
    /**
     * B-Frames
     * @type {Array<TranscoderChannelItem>}
     * @memberof TranscoderListItem
     */
    channels: Array<TranscoderChannelItem>;
}


/**
 * @export
 */
export const TranscoderListItemStatusEnum = {
    active: 'active',
    inactive: 'inactive'
} as const;
export type TranscoderListItemStatusEnum = typeof TranscoderListItemStatusEnum[keyof typeof TranscoderListItemStatusEnum];

/**
 * @export
 */
export const TranscoderListItemVideoCodecEnum = {
    h264: 'h264',
    hevc: 'hevc'
} as const;
export type TranscoderListItemVideoCodecEnum = typeof TranscoderListItemVideoCodecEnum[keyof typeof TranscoderListItemVideoCodecEnum];


/**
 * Check if a given object implements the TranscoderListItem interface.
 */
export function instanceOfTranscoderListItem(value: object): value is TranscoderListItem {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('videoCodec' in value) || value['videoCodec'] === undefined) return false;
    if (!('channels' in value) || value['channels'] === undefined) return false;
    return true;
}

export function TranscoderListItemFromJSON(json: any): TranscoderListItem {
    return TranscoderListItemFromJSONTyped(json, false);
}

export function TranscoderListItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): TranscoderListItem {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'createdAt': json['createdAt'],
        'fps': json['fps'] == null ? undefined : json['fps'],
        'vBitrate': json['vBitrate'] == null ? undefined : json['vBitrate'],
        'aBitrate': json['aBitrate'] == null ? undefined : json['aBitrate'],
        'width': json['width'] == null ? undefined : json['width'],
        'height': json['height'] == null ? undefined : json['height'],
        'rotation': json['rotation'] == null ? undefined : json['rotation'],
        'bFrames': json['bFrames'] == null ? undefined : json['bFrames'],
        'status': json['status'],
        'videoCodec': json['videoCodec'],
        'channels': ((json['channels'] as Array<any>).map(TranscoderChannelItemFromJSON)),
    };
}

export function TranscoderListItemToJSON(json: any): TranscoderListItem {
    return TranscoderListItemToJSONTyped(json, false);
}

export function TranscoderListItemToJSONTyped(value?: TranscoderListItem | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'createdAt': value['createdAt'],
        'fps': value['fps'],
        'vBitrate': value['vBitrate'],
        'aBitrate': value['aBitrate'],
        'width': value['width'],
        'height': value['height'],
        'rotation': value['rotation'],
        'bFrames': value['bFrames'],
        'status': value['status'],
        'videoCodec': value['videoCodec'],
        'channels': ((value['channels'] as Array<any>).map(TranscoderChannelItemToJSON)),
    };
}

