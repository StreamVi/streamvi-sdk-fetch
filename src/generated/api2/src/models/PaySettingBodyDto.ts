/* tslint:disable */
/* eslint-disable */
/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PaySettingBodyDto
 */
export interface PaySettingBodyDto {
    /**
     * Version
     * @type {string}
     * @memberof PaySettingBodyDto
     */
    v: PaySettingBodyDtoVEnum;
    /**
     * Current language
     * @type {string}
     * @memberof PaySettingBodyDto
     */
    language: PaySettingBodyDtoLanguageEnum;
    /**
     * Project id
     * @type {number}
     * @memberof PaySettingBodyDto
     */
    project_id: number;
    /**
     * Countrie id
     * @type {number}
     * @memberof PaySettingBodyDto
     */
    countrie_id: number;
    /**
     * Organization
     * @type {number}
     * @memberof PaySettingBodyDto
     */
    organization_id?: number | null;
    /**
     * Pay system id
     * @type {number}
     * @memberof PaySettingBodyDto
     */
    pay_system_id: number;
    /**
     * E-mail
     * @type {string}
     * @memberof PaySettingBodyDto
     */
    email: string;
    /**
     * Additional information about the payment
     * @type {string}
     * @memberof PaySettingBodyDto
     */
    description?: string | null;
}


/**
 * @export
 */
export const PaySettingBodyDtoVEnum = {
    _1: '1',
    _2: '2',
    _3: '3'
} as const;
export type PaySettingBodyDtoVEnum = typeof PaySettingBodyDtoVEnum[keyof typeof PaySettingBodyDtoVEnum];

/**
 * @export
 */
export const PaySettingBodyDtoLanguageEnum = {
    ru: 'ru',
    en: 'en',
    cn: 'cn'
} as const;
export type PaySettingBodyDtoLanguageEnum = typeof PaySettingBodyDtoLanguageEnum[keyof typeof PaySettingBodyDtoLanguageEnum];


/**
 * Check if a given object implements the PaySettingBodyDto interface.
 */
export function instanceOfPaySettingBodyDto(value: object): value is PaySettingBodyDto {
    if (!('v' in value) || value['v'] === undefined) return false;
    if (!('language' in value) || value['language'] === undefined) return false;
    if (!('project_id' in value) || value['project_id'] === undefined) return false;
    if (!('countrie_id' in value) || value['countrie_id'] === undefined) return false;
    if (!('pay_system_id' in value) || value['pay_system_id'] === undefined) return false;
    if (!('email' in value) || value['email'] === undefined) return false;
    return true;
}

export function PaySettingBodyDtoFromJSON(json: any): PaySettingBodyDto {
    return PaySettingBodyDtoFromJSONTyped(json, false);
}

export function PaySettingBodyDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): PaySettingBodyDto {
    if (json == null) {
        return json;
    }
    return {
        
        'v': json['v'],
        'language': json['language'],
        'project_id': json['project_id'],
        'countrie_id': json['countrie_id'],
        'organization_id': json['organization_id'] == null ? undefined : json['organization_id'],
        'pay_system_id': json['pay_system_id'],
        'email': json['email'],
        'description': json['description'] == null ? undefined : json['description'],
    };
}

export function PaySettingBodyDtoToJSON(json: any): PaySettingBodyDto {
    return PaySettingBodyDtoToJSONTyped(json, false);
}

export function PaySettingBodyDtoToJSONTyped(value?: PaySettingBodyDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'v': value['v'],
        'language': value['language'],
        'project_id': value['project_id'],
        'countrie_id': value['countrie_id'],
        'organization_id': value['organization_id'],
        'pay_system_id': value['pay_system_id'],
        'email': value['email'],
        'description': value['description'],
    };
}

