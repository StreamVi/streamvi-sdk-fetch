/* tslint:disable */
/* eslint-disable */
/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PlanRestreamCheckV2Response
 */
export interface PlanRestreamCheckV2Response {
    /**
     * Tariff price
     * @type {number}
     * @memberof PlanRestreamCheckV2Response
     */
    tariff_price_month: number;
    /**
     * Tariff price
     * @type {number}
     * @memberof PlanRestreamCheckV2Response
     */
    tariff_price_year: number;
    /**
     * Balance for pay
     * @type {number}
     * @memberof PlanRestreamCheckV2Response
     */
    balance: number;
    /**
     * Sum for pay
     * @type {number}
     * @memberof PlanRestreamCheckV2Response
     */
    sum?: number;
    /**
     * Refund current
     * @type {number}
     * @memberof PlanRestreamCheckV2Response
     */
    refund_current?: number;
    /**
     * Refund after
     * @type {number}
     * @memberof PlanRestreamCheckV2Response
     */
    refund_after?: number;
    /**
     * Refund balance
     * @type {number}
     * @memberof PlanRestreamCheckV2Response
     */
    refund_balance?: number;
    /**
     * Decrease balance
     * @type {number}
     * @memberof PlanRestreamCheckV2Response
     */
    decrease_balance?: number;
    /**
     * Value for total
     * @type {number}
     * @memberof PlanRestreamCheckV2Response
     */
    total?: number;
    /**
     * Name for button
     * @type {string}
     * @memberof PlanRestreamCheckV2Response
     */
    notification?: string;
    /**
     * Date for notification
     * @type {Date}
     * @memberof PlanRestreamCheckV2Response
     */
    notification_date?: Date;
    /**
     * Name for button
     * @type {string}
     * @memberof PlanRestreamCheckV2Response
     */
    button_name: string;
    /**
     * Currency
     * @type {string}
     * @memberof PlanRestreamCheckV2Response
     */
    currency: PlanRestreamCheckV2ResponseCurrencyEnum;
    /**
     * Status for plan
     * @type {string}
     * @memberof PlanRestreamCheckV2Response
     */
    choose_status: PlanRestreamCheckV2ResponseChooseStatusEnum;
    /**
     * Status for plan
     * @type {string}
     * @memberof PlanRestreamCheckV2Response
     */
    status: PlanRestreamCheckV2ResponseStatusEnum;
    /**
     * Current channels
     * @type {number}
     * @memberof PlanRestreamCheckV2Response
     */
    channel?: number;
    /**
     * Current bitrate
     * @type {number}
     * @memberof PlanRestreamCheckV2Response
     */
    bitrate?: number;
}


/**
 * @export
 */
export const PlanRestreamCheckV2ResponseCurrencyEnum = {
    rub: 'rub',
    usd: 'usd'
} as const;
export type PlanRestreamCheckV2ResponseCurrencyEnum = typeof PlanRestreamCheckV2ResponseCurrencyEnum[keyof typeof PlanRestreamCheckV2ResponseCurrencyEnum];

/**
 * @export
 */
export const PlanRestreamCheckV2ResponseChooseStatusEnum = {
    new: 'new',
    prolongate: 'prolongate',
    upgrade: 'upgrade',
    downgrade: 'downgrade'
} as const;
export type PlanRestreamCheckV2ResponseChooseStatusEnum = typeof PlanRestreamCheckV2ResponseChooseStatusEnum[keyof typeof PlanRestreamCheckV2ResponseChooseStatusEnum];

/**
 * @export
 */
export const PlanRestreamCheckV2ResponseStatusEnum = {
    new: 'new',
    current: 'current',
    current_upgrade: 'current_upgrade',
    current_downgrade: 'current_downgrade',
    upgrade: 'upgrade',
    downgrade: 'downgrade'
} as const;
export type PlanRestreamCheckV2ResponseStatusEnum = typeof PlanRestreamCheckV2ResponseStatusEnum[keyof typeof PlanRestreamCheckV2ResponseStatusEnum];


/**
 * Check if a given object implements the PlanRestreamCheckV2Response interface.
 */
export function instanceOfPlanRestreamCheckV2Response(value: object): value is PlanRestreamCheckV2Response {
    if (!('tariff_price_month' in value) || value['tariff_price_month'] === undefined) return false;
    if (!('tariff_price_year' in value) || value['tariff_price_year'] === undefined) return false;
    if (!('balance' in value) || value['balance'] === undefined) return false;
    if (!('button_name' in value) || value['button_name'] === undefined) return false;
    if (!('currency' in value) || value['currency'] === undefined) return false;
    if (!('choose_status' in value) || value['choose_status'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    return true;
}

export function PlanRestreamCheckV2ResponseFromJSON(json: any): PlanRestreamCheckV2Response {
    return PlanRestreamCheckV2ResponseFromJSONTyped(json, false);
}

export function PlanRestreamCheckV2ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): PlanRestreamCheckV2Response {
    if (json == null) {
        return json;
    }
    return {
        
        'tariff_price_month': json['tariff_price_month'],
        'tariff_price_year': json['tariff_price_year'],
        'balance': json['balance'],
        'sum': json['sum'] == null ? undefined : json['sum'],
        'refund_current': json['refund_current'] == null ? undefined : json['refund_current'],
        'refund_after': json['refund_after'] == null ? undefined : json['refund_after'],
        'refund_balance': json['refund_balance'] == null ? undefined : json['refund_balance'],
        'decrease_balance': json['decrease_balance'] == null ? undefined : json['decrease_balance'],
        'total': json['total'] == null ? undefined : json['total'],
        'notification': json['notification'] == null ? undefined : json['notification'],
        'notification_date': json['notification_date'] == null ? undefined : (new Date(json['notification_date'])),
        'button_name': json['button_name'],
        'currency': json['currency'],
        'choose_status': json['choose_status'],
        'status': json['status'],
        'channel': json['channel'] == null ? undefined : json['channel'],
        'bitrate': json['bitrate'] == null ? undefined : json['bitrate'],
    };
}

export function PlanRestreamCheckV2ResponseToJSON(json: any): PlanRestreamCheckV2Response {
    return PlanRestreamCheckV2ResponseToJSONTyped(json, false);
}

export function PlanRestreamCheckV2ResponseToJSONTyped(value?: PlanRestreamCheckV2Response | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'tariff_price_month': value['tariff_price_month'],
        'tariff_price_year': value['tariff_price_year'],
        'balance': value['balance'],
        'sum': value['sum'],
        'refund_current': value['refund_current'],
        'refund_after': value['refund_after'],
        'refund_balance': value['refund_balance'],
        'decrease_balance': value['decrease_balance'],
        'total': value['total'],
        'notification': value['notification'],
        'notification_date': value['notification_date'] == null ? undefined : ((value['notification_date']).toISOString()),
        'button_name': value['button_name'],
        'currency': value['currency'],
        'choose_status': value['choose_status'],
        'status': value['status'],
        'channel': value['channel'],
        'bitrate': value['bitrate'],
    };
}

