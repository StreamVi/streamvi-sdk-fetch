/* tslint:disable */
/* eslint-disable */
/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface StructureHelpPageConnectionsItemLang
 */
export interface StructureHelpPageConnectionsItemLang {
    /**
     * Full language name
     * @type {string}
     * @memberof StructureHelpPageConnectionsItemLang
     */
    language: StructureHelpPageConnectionsItemLangLanguageEnum;
    /**
     * Short language name
     * @type {string}
     * @memberof StructureHelpPageConnectionsItemLang
     */
    language_iso: StructureHelpPageConnectionsItemLangLanguageIsoEnum;
    /**
     * Help menu article title
     * @type {string}
     * @memberof StructureHelpPageConnectionsItemLang
     */
    value: string;
}


/**
 * @export
 */
export const StructureHelpPageConnectionsItemLangLanguageEnum = {
    russian: 'russian',
    english: 'english',
    none: 'none'
} as const;
export type StructureHelpPageConnectionsItemLangLanguageEnum = typeof StructureHelpPageConnectionsItemLangLanguageEnum[keyof typeof StructureHelpPageConnectionsItemLangLanguageEnum];

/**
 * @export
 */
export const StructureHelpPageConnectionsItemLangLanguageIsoEnum = {
    ru: 'ru',
    en: 'en',
    cn: 'cn'
} as const;
export type StructureHelpPageConnectionsItemLangLanguageIsoEnum = typeof StructureHelpPageConnectionsItemLangLanguageIsoEnum[keyof typeof StructureHelpPageConnectionsItemLangLanguageIsoEnum];


/**
 * Check if a given object implements the StructureHelpPageConnectionsItemLang interface.
 */
export function instanceOfStructureHelpPageConnectionsItemLang(value: object): value is StructureHelpPageConnectionsItemLang {
    if (!('language' in value) || value['language'] === undefined) return false;
    if (!('language_iso' in value) || value['language_iso'] === undefined) return false;
    if (!('value' in value) || value['value'] === undefined) return false;
    return true;
}

export function StructureHelpPageConnectionsItemLangFromJSON(json: any): StructureHelpPageConnectionsItemLang {
    return StructureHelpPageConnectionsItemLangFromJSONTyped(json, false);
}

export function StructureHelpPageConnectionsItemLangFromJSONTyped(json: any, ignoreDiscriminator: boolean): StructureHelpPageConnectionsItemLang {
    if (json == null) {
        return json;
    }
    return {
        
        'language': json['language'],
        'language_iso': json['language_iso'],
        'value': json['value'],
    };
}

export function StructureHelpPageConnectionsItemLangToJSON(json: any): StructureHelpPageConnectionsItemLang {
    return StructureHelpPageConnectionsItemLangToJSONTyped(json, false);
}

export function StructureHelpPageConnectionsItemLangToJSONTyped(value?: StructureHelpPageConnectionsItemLang | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'language': value['language'],
        'language_iso': value['language_iso'],
        'value': value['value'],
    };
}

