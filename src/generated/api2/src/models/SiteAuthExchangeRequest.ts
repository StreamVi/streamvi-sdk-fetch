/* tslint:disable */
/* eslint-disable */
/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SiteAuthExchangeRequest
 */
export interface SiteAuthExchangeRequest {
    /**
     * Version
     * @type {string}
     * @memberof SiteAuthExchangeRequest
     */
    v: SiteAuthExchangeRequestVEnum;
    /**
     * Current language
     * @type {string}
     * @memberof SiteAuthExchangeRequest
     */
    language: SiteAuthExchangeRequestLanguageEnum;
    /**
     * Auth code for exchange of token
     * @type {string}
     * @memberof SiteAuthExchangeRequest
     */
    code: string;
    /**
     * userAgent
     * @type {string}
     * @memberof SiteAuthExchangeRequest
     */
    userAgent: string;
    /**
     * Fingerprint
     * @type {string}
     * @memberof SiteAuthExchangeRequest
     */
    fingerprint?: string;
    /**
     * App oauth
     * @type {string}
     * @memberof SiteAuthExchangeRequest
     */
    app: SiteAuthExchangeRequestAppEnum;
}


/**
 * @export
 */
export const SiteAuthExchangeRequestVEnum = {
    _1: '1',
    _2: '2',
    _3: '3'
} as const;
export type SiteAuthExchangeRequestVEnum = typeof SiteAuthExchangeRequestVEnum[keyof typeof SiteAuthExchangeRequestVEnum];

/**
 * @export
 */
export const SiteAuthExchangeRequestLanguageEnum = {
    ru: 'ru',
    en: 'en',
    cn: 'cn'
} as const;
export type SiteAuthExchangeRequestLanguageEnum = typeof SiteAuthExchangeRequestLanguageEnum[keyof typeof SiteAuthExchangeRequestLanguageEnum];

/**
 * @export
 */
export const SiteAuthExchangeRequestAppEnum = {
    site: 'site',
    admin: 'admin',
    mobile: 'mobile',
    desktop: 'desktop'
} as const;
export type SiteAuthExchangeRequestAppEnum = typeof SiteAuthExchangeRequestAppEnum[keyof typeof SiteAuthExchangeRequestAppEnum];


/**
 * Check if a given object implements the SiteAuthExchangeRequest interface.
 */
export function instanceOfSiteAuthExchangeRequest(value: object): value is SiteAuthExchangeRequest {
    if (!('v' in value) || value['v'] === undefined) return false;
    if (!('language' in value) || value['language'] === undefined) return false;
    if (!('code' in value) || value['code'] === undefined) return false;
    if (!('userAgent' in value) || value['userAgent'] === undefined) return false;
    if (!('app' in value) || value['app'] === undefined) return false;
    return true;
}

export function SiteAuthExchangeRequestFromJSON(json: any): SiteAuthExchangeRequest {
    return SiteAuthExchangeRequestFromJSONTyped(json, false);
}

export function SiteAuthExchangeRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): SiteAuthExchangeRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'v': json['v'],
        'language': json['language'],
        'code': json['code'],
        'userAgent': json['userAgent'],
        'fingerprint': json['fingerprint'] == null ? undefined : json['fingerprint'],
        'app': json['app'],
    };
}

export function SiteAuthExchangeRequestToJSON(json: any): SiteAuthExchangeRequest {
    return SiteAuthExchangeRequestToJSONTyped(json, false);
}

export function SiteAuthExchangeRequestToJSONTyped(value?: SiteAuthExchangeRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'v': value['v'],
        'language': value['language'],
        'code': value['code'],
        'userAgent': value['userAgent'],
        'fingerprint': value['fingerprint'],
        'app': value['app'],
    };
}

