/* tslint:disable */
/* eslint-disable */
/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserProject2ProjectResponse } from './UserProject2ProjectResponse';
import {
    UserProject2ProjectResponseFromJSON,
    UserProject2ProjectResponseFromJSONTyped,
    UserProject2ProjectResponseToJSON,
    UserProject2ProjectResponseToJSONTyped,
} from './UserProject2ProjectResponse';

/**
 * 
 * @export
 * @interface UserProjectResponse
 */
export interface UserProjectResponse {
    /**
     * Primary key
     * @type {number}
     * @memberof UserProjectResponse
     */
    id: number;
    /**
     * User id
     * @type {number}
     * @memberof UserProjectResponse
     */
    user_id: number;
    /**
     * Project id
     * @type {number}
     * @memberof UserProjectResponse
     */
    project_id: number;
    /**
     * Access type
     * @type {number}
     * @memberof UserProjectResponse
     */
    access_type: UserProjectResponseAccessTypeEnum;
    /**
     * Project data
     * @type {UserProject2ProjectResponse}
     * @memberof UserProjectResponse
     */
    project: UserProject2ProjectResponse;
    /**
     * Members count
     * @type {number}
     * @memberof UserProjectResponse
     */
    member_count: number;
}


/**
 * @export
 */
export const UserProjectResponseAccessTypeEnum = {
    NUMBER_0: 0,
    NUMBER_1: 1,
    NUMBER_2: 2
} as const;
export type UserProjectResponseAccessTypeEnum = typeof UserProjectResponseAccessTypeEnum[keyof typeof UserProjectResponseAccessTypeEnum];


/**
 * Check if a given object implements the UserProjectResponse interface.
 */
export function instanceOfUserProjectResponse(value: object): value is UserProjectResponse {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('user_id' in value) || value['user_id'] === undefined) return false;
    if (!('project_id' in value) || value['project_id'] === undefined) return false;
    if (!('access_type' in value) || value['access_type'] === undefined) return false;
    if (!('project' in value) || value['project'] === undefined) return false;
    if (!('member_count' in value) || value['member_count'] === undefined) return false;
    return true;
}

export function UserProjectResponseFromJSON(json: any): UserProjectResponse {
    return UserProjectResponseFromJSONTyped(json, false);
}

export function UserProjectResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserProjectResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'user_id': json['user_id'],
        'project_id': json['project_id'],
        'access_type': json['access_type'],
        'project': UserProject2ProjectResponseFromJSON(json['project']),
        'member_count': json['member_count'],
    };
}

export function UserProjectResponseToJSON(json: any): UserProjectResponse {
    return UserProjectResponseToJSONTyped(json, false);
}

export function UserProjectResponseToJSONTyped(value?: UserProjectResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'user_id': value['user_id'],
        'project_id': value['project_id'],
        'access_type': value['access_type'],
        'project': UserProject2ProjectResponseToJSON(value['project']),
        'member_count': value['member_count'],
    };
}

