/* tslint:disable */
/* eslint-disable */
/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AmountItem
 */
export interface AmountItem {
    /**
     * Amount of money
     * @type {number}
     * @memberof AmountItem
     */
    amount: number;
    /**
     * Currency
     * @type {string}
     * @memberof AmountItem
     */
    currency: AmountItemCurrencyEnum;
}


/**
 * @export
 */
export const AmountItemCurrencyEnum = {
    rub: 'rub',
    usd: 'usd'
} as const;
export type AmountItemCurrencyEnum = typeof AmountItemCurrencyEnum[keyof typeof AmountItemCurrencyEnum];


/**
 * Check if a given object implements the AmountItem interface.
 */
export function instanceOfAmountItem(value: object): value is AmountItem {
    if (!('amount' in value) || value['amount'] === undefined) return false;
    if (!('currency' in value) || value['currency'] === undefined) return false;
    return true;
}

export function AmountItemFromJSON(json: any): AmountItem {
    return AmountItemFromJSONTyped(json, false);
}

export function AmountItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): AmountItem {
    if (json == null) {
        return json;
    }
    return {
        
        'amount': json['amount'],
        'currency': json['currency'],
    };
}

export function AmountItemToJSON(json: any): AmountItem {
    return AmountItemToJSONTyped(json, false);
}

export function AmountItemToJSONTyped(value?: AmountItem | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'amount': value['amount'],
        'currency': value['currency'],
    };
}

