/* tslint:disable */
/* eslint-disable */
/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ProjectChannelResponse
 */
export interface ProjectChannelResponse {
    /**
     * Primary key
     * @type {number}
     * @memberof ProjectChannelResponse
     */
    id: number;
    /**
     * User id
     * @type {number}
     * @memberof ProjectChannelResponse
     */
    project_id: number;
    /**
     * Channel id
     * @type {number}
     * @memberof ProjectChannelResponse
     */
    channel_id: number;
    /**
     * Owner id
     * @type {number}
     * @memberof ProjectChannelResponse
     */
    owner_id: number;
    /**
     * usageType
     * @type {number}
     * @memberof ProjectChannelResponse
     */
    usageType: number;
}

/**
 * Check if a given object implements the ProjectChannelResponse interface.
 */
export function instanceOfProjectChannelResponse(value: object): value is ProjectChannelResponse {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('project_id' in value) || value['project_id'] === undefined) return false;
    if (!('channel_id' in value) || value['channel_id'] === undefined) return false;
    if (!('owner_id' in value) || value['owner_id'] === undefined) return false;
    if (!('usageType' in value) || value['usageType'] === undefined) return false;
    return true;
}

export function ProjectChannelResponseFromJSON(json: any): ProjectChannelResponse {
    return ProjectChannelResponseFromJSONTyped(json, false);
}

export function ProjectChannelResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProjectChannelResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'project_id': json['project_id'],
        'channel_id': json['channel_id'],
        'owner_id': json['owner_id'],
        'usageType': json['usageType'],
    };
}

export function ProjectChannelResponseToJSON(json: any): ProjectChannelResponse {
    return ProjectChannelResponseToJSONTyped(json, false);
}

export function ProjectChannelResponseToJSONTyped(value?: ProjectChannelResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'project_id': value['project_id'],
        'channel_id': value['channel_id'],
        'owner_id': value['owner_id'],
        'usageType': value['usageType'],
    };
}

