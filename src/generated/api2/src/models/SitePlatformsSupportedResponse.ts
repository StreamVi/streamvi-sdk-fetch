/* tslint:disable */
/* eslint-disable */
/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PlatformsSupportedItem } from './PlatformsSupportedItem';
import {
    PlatformsSupportedItemFromJSON,
    PlatformsSupportedItemFromJSONTyped,
    PlatformsSupportedItemToJSON,
    PlatformsSupportedItemToJSONTyped,
} from './PlatformsSupportedItem';

/**
 * 
 * @export
 * @interface SitePlatformsSupportedResponse
 */
export interface SitePlatformsSupportedResponse {
    /**
     * Array of items
     * @type {Array<PlatformsSupportedItem>}
     * @memberof SitePlatformsSupportedResponse
     */
    results: Array<PlatformsSupportedItem>;
}

/**
 * Check if a given object implements the SitePlatformsSupportedResponse interface.
 */
export function instanceOfSitePlatformsSupportedResponse(value: object): value is SitePlatformsSupportedResponse {
    if (!('results' in value) || value['results'] === undefined) return false;
    return true;
}

export function SitePlatformsSupportedResponseFromJSON(json: any): SitePlatformsSupportedResponse {
    return SitePlatformsSupportedResponseFromJSONTyped(json, false);
}

export function SitePlatformsSupportedResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): SitePlatformsSupportedResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'results': ((json['results'] as Array<any>).map(PlatformsSupportedItemFromJSON)),
    };
}

export function SitePlatformsSupportedResponseToJSON(json: any): SitePlatformsSupportedResponse {
    return SitePlatformsSupportedResponseToJSONTyped(json, false);
}

export function SitePlatformsSupportedResponseToJSONTyped(value?: SitePlatformsSupportedResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'results': ((value['results'] as Array<any>).map(PlatformsSupportedItemToJSON)),
    };
}

