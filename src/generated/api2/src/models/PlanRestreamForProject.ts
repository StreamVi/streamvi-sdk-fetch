/* tslint:disable */
/* eslint-disable */
/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PlanRestreamItem } from './PlanRestreamItem';
import {
    PlanRestreamItemFromJSON,
    PlanRestreamItemFromJSONTyped,
    PlanRestreamItemToJSON,
    PlanRestreamItemToJSONTyped,
} from './PlanRestreamItem';

/**
 * 
 * @export
 * @interface PlanRestreamForProject
 */
export interface PlanRestreamForProject {
    /**
     * Before tariff restream
     * @type {PlanRestreamItem}
     * @memberof PlanRestreamForProject
     */
    before: PlanRestreamItem;
    /**
     * Current tariff restream
     * @type {PlanRestreamItem}
     * @memberof PlanRestreamForProject
     */
    current: PlanRestreamItem;
    /**
     * Next tariff restream
     * @type {PlanRestreamItem}
     * @memberof PlanRestreamForProject
     */
    next: PlanRestreamItem;
}

/**
 * Check if a given object implements the PlanRestreamForProject interface.
 */
export function instanceOfPlanRestreamForProject(value: object): value is PlanRestreamForProject {
    if (!('before' in value) || value['before'] === undefined) return false;
    if (!('current' in value) || value['current'] === undefined) return false;
    if (!('next' in value) || value['next'] === undefined) return false;
    return true;
}

export function PlanRestreamForProjectFromJSON(json: any): PlanRestreamForProject {
    return PlanRestreamForProjectFromJSONTyped(json, false);
}

export function PlanRestreamForProjectFromJSONTyped(json: any, ignoreDiscriminator: boolean): PlanRestreamForProject {
    if (json == null) {
        return json;
    }
    return {
        
        'before': PlanRestreamItemFromJSON(json['before']),
        'current': PlanRestreamItemFromJSON(json['current']),
        'next': PlanRestreamItemFromJSON(json['next']),
    };
}

export function PlanRestreamForProjectToJSON(json: any): PlanRestreamForProject {
    return PlanRestreamForProjectToJSONTyped(json, false);
}

export function PlanRestreamForProjectToJSONTyped(value?: PlanRestreamForProject | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'before': PlanRestreamItemToJSON(value['before']),
        'current': PlanRestreamItemToJSON(value['current']),
        'next': PlanRestreamItemToJSON(value['next']),
    };
}

