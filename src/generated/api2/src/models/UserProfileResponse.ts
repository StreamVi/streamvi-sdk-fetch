/* tslint:disable */
/* eslint-disable */
/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserProfileResponse
 */
export interface UserProfileResponse {
    /**
     * User id
     * @type {number}
     * @memberof UserProfileResponse
     */
    id: UserProfileResponseIdEnum;
    /**
     * Type profile
     * @type {number}
     * @memberof UserProfileResponse
     */
    type: number;
    /**
     * FirstName
     * @type {string}
     * @memberof UserProfileResponse
     */
    firstName: string;
    /**
     * LastName
     * @type {string}
     * @memberof UserProfileResponse
     */
    lastName: string;
    /**
     * Photo
     * @type {string}
     * @memberof UserProfileResponse
     */
    photo: string;
    /**
     * RefId
     * @type {string}
     * @memberof UserProfileResponse
     */
    refId: string;
    /**
     * Count partners
     * @type {number}
     * @memberof UserProfileResponse
     */
    partners: number;
    /**
     * Referrals income
     * @type {string}
     * @memberof UserProfileResponse
     */
    referralsIncome: string;
    /**
     * Scope
     * @type {number}
     * @memberof UserProfileResponse
     */
    scope: number;
    /**
     * Currency
     * @type {string}
     * @memberof UserProfileResponse
     */
    currency: UserProfileResponseCurrencyEnum;
    /**
     * Country
     * @type {number}
     * @memberof UserProfileResponse
     */
    countrie_id: number;
    /**
     * Language
     * @type {string}
     * @memberof UserProfileResponse
     */
    language: UserProfileResponseLanguageEnum;
    /**
     * Balance
     * @type {number}
     * @memberof UserProfileResponse
     */
    balance: number;
    /**
     * Last select project
     * @type {number}
     * @memberof UserProfileResponse
     */
    lastProjectId: number | null;
}


/**
 * @export
 */
export const UserProfileResponseIdEnum = {
    NUMBER_0: 0,
    NUMBER_1: 1
} as const;
export type UserProfileResponseIdEnum = typeof UserProfileResponseIdEnum[keyof typeof UserProfileResponseIdEnum];

/**
 * @export
 */
export const UserProfileResponseCurrencyEnum = {
    rub: 'rub',
    usd: 'usd'
} as const;
export type UserProfileResponseCurrencyEnum = typeof UserProfileResponseCurrencyEnum[keyof typeof UserProfileResponseCurrencyEnum];

/**
 * @export
 */
export const UserProfileResponseLanguageEnum = {
    ru: 'ru',
    en: 'en',
    cn: 'cn'
} as const;
export type UserProfileResponseLanguageEnum = typeof UserProfileResponseLanguageEnum[keyof typeof UserProfileResponseLanguageEnum];


/**
 * Check if a given object implements the UserProfileResponse interface.
 */
export function instanceOfUserProfileResponse(value: object): value is UserProfileResponse {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('firstName' in value) || value['firstName'] === undefined) return false;
    if (!('lastName' in value) || value['lastName'] === undefined) return false;
    if (!('photo' in value) || value['photo'] === undefined) return false;
    if (!('refId' in value) || value['refId'] === undefined) return false;
    if (!('partners' in value) || value['partners'] === undefined) return false;
    if (!('referralsIncome' in value) || value['referralsIncome'] === undefined) return false;
    if (!('scope' in value) || value['scope'] === undefined) return false;
    if (!('currency' in value) || value['currency'] === undefined) return false;
    if (!('countrie_id' in value) || value['countrie_id'] === undefined) return false;
    if (!('language' in value) || value['language'] === undefined) return false;
    if (!('balance' in value) || value['balance'] === undefined) return false;
    if (!('lastProjectId' in value) || value['lastProjectId'] === undefined) return false;
    return true;
}

export function UserProfileResponseFromJSON(json: any): UserProfileResponse {
    return UserProfileResponseFromJSONTyped(json, false);
}

export function UserProfileResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserProfileResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'type': json['type'],
        'firstName': json['firstName'],
        'lastName': json['lastName'],
        'photo': json['photo'],
        'refId': json['refId'],
        'partners': json['partners'],
        'referralsIncome': json['referralsIncome'],
        'scope': json['scope'],
        'currency': json['currency'],
        'countrie_id': json['countrie_id'],
        'language': json['language'],
        'balance': json['balance'],
        'lastProjectId': json['lastProjectId'],
    };
}

export function UserProfileResponseToJSON(json: any): UserProfileResponse {
    return UserProfileResponseToJSONTyped(json, false);
}

export function UserProfileResponseToJSONTyped(value?: UserProfileResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'type': value['type'],
        'firstName': value['firstName'],
        'lastName': value['lastName'],
        'photo': value['photo'],
        'refId': value['refId'],
        'partners': value['partners'],
        'referralsIncome': value['referralsIncome'],
        'scope': value['scope'],
        'currency': value['currency'],
        'countrie_id': value['countrie_id'],
        'language': value['language'],
        'balance': value['balance'],
        'lastProjectId': value['lastProjectId'],
    };
}

