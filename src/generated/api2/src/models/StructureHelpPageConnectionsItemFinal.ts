/* tslint:disable */
/* eslint-disable */
/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { BlogPageSiteResponseId } from './BlogPageSiteResponseId';
import {
    BlogPageSiteResponseIdFromJSON,
    BlogPageSiteResponseIdFromJSONTyped,
    BlogPageSiteResponseIdToJSON,
    BlogPageSiteResponseIdToJSONTyped,
} from './BlogPageSiteResponseId';
import type { StructureHelpPageConnectionsItemLang } from './StructureHelpPageConnectionsItemLang';
import {
    StructureHelpPageConnectionsItemLangFromJSON,
    StructureHelpPageConnectionsItemLangFromJSONTyped,
    StructureHelpPageConnectionsItemLangToJSON,
    StructureHelpPageConnectionsItemLangToJSONTyped,
} from './StructureHelpPageConnectionsItemLang';

/**
 * 
 * @export
 * @interface StructureHelpPageConnectionsItemFinal
 */
export interface StructureHelpPageConnectionsItemFinal {
    /**
     * 
     * @type {BlogPageSiteResponseId}
     * @memberof StructureHelpPageConnectionsItemFinal
     */
    _id: BlogPageSiteResponseId;
    /**
     * Notion id
     * @type {string}
     * @memberof StructureHelpPageConnectionsItemFinal
     */
    notion_id: string;
    /**
     * Notion parent id
     * @type {string}
     * @memberof StructureHelpPageConnectionsItemFinal
     */
    notion_parent_id: string;
    /**
     * url
     * @type {string}
     * @memberof StructureHelpPageConnectionsItemFinal
     */
    url: string;
    /**
     * Generated url from root path
     * @type {string}
     * @memberof StructureHelpPageConnectionsItemFinal
     */
    url_inherit: string;
    /**
     * Page status
     * @type {string}
     * @memberof StructureHelpPageConnectionsItemFinal
     */
    status: StructureHelpPageConnectionsItemFinalStatusEnum;
    /**
     * Subject
     * @type {Array<StructureHelpPageConnectionsItemLang>}
     * @memberof StructureHelpPageConnectionsItemFinal
     */
    title: Array<StructureHelpPageConnectionsItemLang>;
    /**
     * Page icon
     * @type {object}
     * @memberof StructureHelpPageConnectionsItemFinal
     */
    icon: object | null;
    /**
     * Priority for sorting
     * @type {number}
     * @memberof StructureHelpPageConnectionsItemFinal
     */
    priority: number;
}


/**
 * @export
 */
export const StructureHelpPageConnectionsItemFinalStatusEnum = {
    None: 'None',
    Backlog: 'Backlog',
    Drafting: 'Drafting',
    Reviewing: 'Reviewing',
    Done: 'Done',
    Published: 'Published'
} as const;
export type StructureHelpPageConnectionsItemFinalStatusEnum = typeof StructureHelpPageConnectionsItemFinalStatusEnum[keyof typeof StructureHelpPageConnectionsItemFinalStatusEnum];


/**
 * Check if a given object implements the StructureHelpPageConnectionsItemFinal interface.
 */
export function instanceOfStructureHelpPageConnectionsItemFinal(value: object): value is StructureHelpPageConnectionsItemFinal {
    if (!('_id' in value) || value['_id'] === undefined) return false;
    if (!('notion_id' in value) || value['notion_id'] === undefined) return false;
    if (!('notion_parent_id' in value) || value['notion_parent_id'] === undefined) return false;
    if (!('url' in value) || value['url'] === undefined) return false;
    if (!('url_inherit' in value) || value['url_inherit'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('icon' in value) || value['icon'] === undefined) return false;
    if (!('priority' in value) || value['priority'] === undefined) return false;
    return true;
}

export function StructureHelpPageConnectionsItemFinalFromJSON(json: any): StructureHelpPageConnectionsItemFinal {
    return StructureHelpPageConnectionsItemFinalFromJSONTyped(json, false);
}

export function StructureHelpPageConnectionsItemFinalFromJSONTyped(json: any, ignoreDiscriminator: boolean): StructureHelpPageConnectionsItemFinal {
    if (json == null) {
        return json;
    }
    return {
        
        '_id': BlogPageSiteResponseIdFromJSON(json['_id']),
        'notion_id': json['notion_id'],
        'notion_parent_id': json['notion_parent_id'],
        'url': json['url'],
        'url_inherit': json['url_inherit'],
        'status': json['status'],
        'title': ((json['title'] as Array<any>).map(StructureHelpPageConnectionsItemLangFromJSON)),
        'icon': json['icon'],
        'priority': json['priority'],
    };
}

export function StructureHelpPageConnectionsItemFinalToJSON(json: any): StructureHelpPageConnectionsItemFinal {
    return StructureHelpPageConnectionsItemFinalToJSONTyped(json, false);
}

export function StructureHelpPageConnectionsItemFinalToJSONTyped(value?: StructureHelpPageConnectionsItemFinal | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        '_id': BlogPageSiteResponseIdToJSON(value['_id']),
        'notion_id': value['notion_id'],
        'notion_parent_id': value['notion_parent_id'],
        'url': value['url'],
        'url_inherit': value['url_inherit'],
        'status': value['status'],
        'title': ((value['title'] as Array<any>).map(StructureHelpPageConnectionsItemLangToJSON)),
        'icon': value['icon'],
        'priority': value['priority'],
    };
}

