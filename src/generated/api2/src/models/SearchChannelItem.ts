/* tslint:disable */
/* eslint-disable */
/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SearchChannelCredentialDto } from './SearchChannelCredentialDto';
import {
    SearchChannelCredentialDtoFromJSON,
    SearchChannelCredentialDtoFromJSONTyped,
    SearchChannelCredentialDtoToJSON,
    SearchChannelCredentialDtoToJSONTyped,
} from './SearchChannelCredentialDto';
import type { SearchChannelLiveUserDto } from './SearchChannelLiveUserDto';
import {
    SearchChannelLiveUserDtoFromJSON,
    SearchChannelLiveUserDtoFromJSONTyped,
    SearchChannelLiveUserDtoToJSON,
    SearchChannelLiveUserDtoToJSONTyped,
} from './SearchChannelLiveUserDto';
import type { SearchChannelCredentialsDto } from './SearchChannelCredentialsDto';
import {
    SearchChannelCredentialsDtoFromJSON,
    SearchChannelCredentialsDtoFromJSONTyped,
    SearchChannelCredentialsDtoToJSON,
    SearchChannelCredentialsDtoToJSONTyped,
} from './SearchChannelCredentialsDto';
import type { SearchChannelRtmpDto } from './SearchChannelRtmpDto';
import {
    SearchChannelRtmpDtoFromJSON,
    SearchChannelRtmpDtoFromJSONTyped,
    SearchChannelRtmpDtoToJSON,
    SearchChannelRtmpDtoToJSONTyped,
} from './SearchChannelRtmpDto';
import type { SearchChannelItemStreamInfo } from './SearchChannelItemStreamInfo';
import {
    SearchChannelItemStreamInfoFromJSON,
    SearchChannelItemStreamInfoFromJSONTyped,
    SearchChannelItemStreamInfoToJSON,
    SearchChannelItemStreamInfoToJSONTyped,
} from './SearchChannelItemStreamInfo';
import type { SearchChannelPlatformDto } from './SearchChannelPlatformDto';
import {
    SearchChannelPlatformDtoFromJSON,
    SearchChannelPlatformDtoFromJSONTyped,
    SearchChannelPlatformDtoToJSON,
    SearchChannelPlatformDtoToJSONTyped,
} from './SearchChannelPlatformDto';

/**
 * 
 * @export
 * @interface SearchChannelItem
 */
export interface SearchChannelItem {
    /**
     * name
     * @type {string}
     * @memberof SearchChannelItem
     */
    name: string;
    /**
     * name
     * @type {string}
     * @memberof SearchChannelItem
     */
    id: string;
    /**
     * Transcoder id
     * @type {number}
     * @memberof SearchChannelItem
     */
    transcoderId?: number;
    /**
     * group_id
     * @type {number}
     * @memberof SearchChannelItem
     */
    group_id: number;
    /**
     * type
     * @type {string}
     * @memberof SearchChannelItem
     */
    type: string;
    /**
     * photo_default
     * @type {string}
     * @memberof SearchChannelItem
     */
    photo_default: string;
    /**
     * sell
     * @type {boolean}
     * @memberof SearchChannelItem
     */
    sell: boolean;
    /**
     * price
     * @type {number}
     * @memberof SearchChannelItem
     */
    price: number;
    /**
     * live
     * @type {boolean}
     * @memberof SearchChannelItem
     */
    live: boolean;
    /**
     * status
     * @type {string}
     * @memberof SearchChannelItem
     */
    status: SearchChannelItemStatusEnum;
    /**
     * user_id
     * @type {number}
     * @memberof SearchChannelItem
     */
    user_id: number;
    /**
     * active
     * @type {boolean}
     * @memberof SearchChannelItem
     */
    active: boolean;
    /**
     * guestsNum
     * @type {number}
     * @memberof SearchChannelItem
     */
    guestsNum: number;
    /**
     * guestRights
     * @type {number}
     * @memberof SearchChannelItem
     */
    guestRights: number | null;
    /**
     * usageType
     * @type {number}
     * @memberof SearchChannelItem
     */
    usageType: number;
    /**
     * companyRole
     * @type {number}
     * @memberof SearchChannelItem
     */
    companyRole: number | null;
    /**
     * threads
     * @type {number}
     * @memberof SearchChannelItem
     */
    threads: number;
    /**
     * 
     * @type {SearchChannelItemStreamInfo}
     * @memberof SearchChannelItem
     */
    streamInfo: SearchChannelItemStreamInfo;
    /**
     * rtmp
     * @type {SearchChannelRtmpDto}
     * @memberof SearchChannelItem
     */
    rtmp: SearchChannelRtmpDto | null;
    /**
     * credentials
     * @type {Array<SearchChannelCredentialsDto>}
     * @memberof SearchChannelItem
     */
    credentials: Array<SearchChannelCredentialsDto> | null;
    /**
     * Tokens
     * @type {SearchChannelCredentialDto}
     * @memberof SearchChannelItem
     */
    tokens: SearchChannelCredentialDto;
    /**
     * live_users
     * @type {Array<SearchChannelLiveUserDto>}
     * @memberof SearchChannelItem
     */
    live_users?: Array<SearchChannelLiveUserDto>;
    /**
     * Platform
     * @type {SearchChannelPlatformDto}
     * @memberof SearchChannelItem
     */
    platform: SearchChannelPlatformDto;
}


/**
 * @export
 */
export const SearchChannelItemStatusEnum = {
    init: 'init',
    pending: 'pending',
    error: 'error',
    live: 'live',
    offline: 'offline',
    busy: 'busy'
} as const;
export type SearchChannelItemStatusEnum = typeof SearchChannelItemStatusEnum[keyof typeof SearchChannelItemStatusEnum];


/**
 * Check if a given object implements the SearchChannelItem interface.
 */
export function instanceOfSearchChannelItem(value: object): value is SearchChannelItem {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('group_id' in value) || value['group_id'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('photo_default' in value) || value['photo_default'] === undefined) return false;
    if (!('sell' in value) || value['sell'] === undefined) return false;
    if (!('price' in value) || value['price'] === undefined) return false;
    if (!('live' in value) || value['live'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('user_id' in value) || value['user_id'] === undefined) return false;
    if (!('active' in value) || value['active'] === undefined) return false;
    if (!('guestsNum' in value) || value['guestsNum'] === undefined) return false;
    if (!('guestRights' in value) || value['guestRights'] === undefined) return false;
    if (!('usageType' in value) || value['usageType'] === undefined) return false;
    if (!('companyRole' in value) || value['companyRole'] === undefined) return false;
    if (!('threads' in value) || value['threads'] === undefined) return false;
    if (!('streamInfo' in value) || value['streamInfo'] === undefined) return false;
    if (!('rtmp' in value) || value['rtmp'] === undefined) return false;
    if (!('credentials' in value) || value['credentials'] === undefined) return false;
    if (!('tokens' in value) || value['tokens'] === undefined) return false;
    if (!('platform' in value) || value['platform'] === undefined) return false;
    return true;
}

export function SearchChannelItemFromJSON(json: any): SearchChannelItem {
    return SearchChannelItemFromJSONTyped(json, false);
}

export function SearchChannelItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): SearchChannelItem {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'id': json['id'],
        'transcoderId': json['transcoderId'] == null ? undefined : json['transcoderId'],
        'group_id': json['group_id'],
        'type': json['type'],
        'photo_default': json['photo_default'],
        'sell': json['sell'],
        'price': json['price'],
        'live': json['live'],
        'status': json['status'],
        'user_id': json['user_id'],
        'active': json['active'],
        'guestsNum': json['guestsNum'],
        'guestRights': json['guestRights'],
        'usageType': json['usageType'],
        'companyRole': json['companyRole'],
        'threads': json['threads'],
        'streamInfo': SearchChannelItemStreamInfoFromJSON(json['streamInfo']),
        'rtmp': SearchChannelRtmpDtoFromJSON(json['rtmp']),
        'credentials': (json['credentials'] == null ? null : (json['credentials'] as Array<any>).map(SearchChannelCredentialsDtoFromJSON)),
        'tokens': SearchChannelCredentialDtoFromJSON(json['tokens']),
        'live_users': json['live_users'] == null ? undefined : ((json['live_users'] as Array<any>).map(SearchChannelLiveUserDtoFromJSON)),
        'platform': SearchChannelPlatformDtoFromJSON(json['platform']),
    };
}

export function SearchChannelItemToJSON(json: any): SearchChannelItem {
    return SearchChannelItemToJSONTyped(json, false);
}

export function SearchChannelItemToJSONTyped(value?: SearchChannelItem | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'id': value['id'],
        'transcoderId': value['transcoderId'],
        'group_id': value['group_id'],
        'type': value['type'],
        'photo_default': value['photo_default'],
        'sell': value['sell'],
        'price': value['price'],
        'live': value['live'],
        'status': value['status'],
        'user_id': value['user_id'],
        'active': value['active'],
        'guestsNum': value['guestsNum'],
        'guestRights': value['guestRights'],
        'usageType': value['usageType'],
        'companyRole': value['companyRole'],
        'threads': value['threads'],
        'streamInfo': SearchChannelItemStreamInfoToJSON(value['streamInfo']),
        'rtmp': SearchChannelRtmpDtoToJSON(value['rtmp']),
        'credentials': (value['credentials'] == null ? null : (value['credentials'] as Array<any>).map(SearchChannelCredentialsDtoToJSON)),
        'tokens': SearchChannelCredentialDtoToJSON(value['tokens']),
        'live_users': value['live_users'] == null ? undefined : ((value['live_users'] as Array<any>).map(SearchChannelLiveUserDtoToJSON)),
        'platform': SearchChannelPlatformDtoToJSON(value['platform']),
    };
}

