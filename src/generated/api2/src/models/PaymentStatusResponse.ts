/* tslint:disable */
/* eslint-disable */
/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PaymentStatusResponse
 */
export interface PaymentStatusResponse {
    /**
     * Payment Id
     * @type {number}
     * @memberof PaymentStatusResponse
     */
    payment_id: number;
    /**
     * Amount
     * @type {number}
     * @memberof PaymentStatusResponse
     */
    amount: number;
    /**
     * Currency
     * @type {string}
     * @memberof PaymentStatusResponse
     */
    currency: PaymentStatusResponseCurrencyEnum;
    /**
     * Period
     * @type {string}
     * @memberof PaymentStatusResponse
     */
    plan_period: PaymentStatusResponsePlanPeriodEnum;
    /**
     * Status
     * @type {string}
     * @memberof PaymentStatusResponse
     */
    status: string;
    /**
     * Tariff type
     * @type {string}
     * @memberof PaymentStatusResponse
     */
    type: string;
    /**
     * Tariff title
     * @type {string}
     * @memberof PaymentStatusResponse
     */
    title?: string;
}


/**
 * @export
 */
export const PaymentStatusResponseCurrencyEnum = {
    rub: 'rub',
    usd: 'usd'
} as const;
export type PaymentStatusResponseCurrencyEnum = typeof PaymentStatusResponseCurrencyEnum[keyof typeof PaymentStatusResponseCurrencyEnum];

/**
 * @export
 */
export const PaymentStatusResponsePlanPeriodEnum = {
    month: 'month',
    year: 'year'
} as const;
export type PaymentStatusResponsePlanPeriodEnum = typeof PaymentStatusResponsePlanPeriodEnum[keyof typeof PaymentStatusResponsePlanPeriodEnum];


/**
 * Check if a given object implements the PaymentStatusResponse interface.
 */
export function instanceOfPaymentStatusResponse(value: object): value is PaymentStatusResponse {
    if (!('payment_id' in value) || value['payment_id'] === undefined) return false;
    if (!('amount' in value) || value['amount'] === undefined) return false;
    if (!('currency' in value) || value['currency'] === undefined) return false;
    if (!('plan_period' in value) || value['plan_period'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function PaymentStatusResponseFromJSON(json: any): PaymentStatusResponse {
    return PaymentStatusResponseFromJSONTyped(json, false);
}

export function PaymentStatusResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): PaymentStatusResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'payment_id': json['payment_id'],
        'amount': json['amount'],
        'currency': json['currency'],
        'plan_period': json['plan_period'],
        'status': json['status'],
        'type': json['type'],
        'title': json['title'] == null ? undefined : json['title'],
    };
}

export function PaymentStatusResponseToJSON(json: any): PaymentStatusResponse {
    return PaymentStatusResponseToJSONTyped(json, false);
}

export function PaymentStatusResponseToJSONTyped(value?: PaymentStatusResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'payment_id': value['payment_id'],
        'amount': value['amount'],
        'currency': value['currency'],
        'plan_period': value['plan_period'],
        'status': value['status'],
        'type': value['type'],
        'title': value['title'],
    };
}

