/* tslint:disable */
/* eslint-disable */
/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { NotifyUserChannels } from './NotifyUserChannels';
import {
    NotifyUserChannelsFromJSON,
    NotifyUserChannelsFromJSONTyped,
    NotifyUserChannelsToJSON,
    NotifyUserChannelsToJSONTyped,
} from './NotifyUserChannels';
import type { NotifyUserRelation } from './NotifyUserRelation';
import {
    NotifyUserRelationFromJSON,
    NotifyUserRelationFromJSONTyped,
    NotifyUserRelationToJSON,
    NotifyUserRelationToJSONTyped,
} from './NotifyUserRelation';

/**
 * 
 * @export
 * @interface SiteNotifyUserResponse
 */
export interface SiteNotifyUserResponse {
    /**
     * User id
     * @type {number}
     * @memberof SiteNotifyUserResponse
     */
    user_id: number;
    /**
     * Channels
     * @type {NotifyUserChannels}
     * @memberof SiteNotifyUserResponse
     */
    channels: NotifyUserChannels;
    /**
     * Relation
     * @type {NotifyUserRelation}
     * @memberof SiteNotifyUserResponse
     */
    relation: NotifyUserRelation;
}

/**
 * Check if a given object implements the SiteNotifyUserResponse interface.
 */
export function instanceOfSiteNotifyUserResponse(value: object): value is SiteNotifyUserResponse {
    if (!('user_id' in value) || value['user_id'] === undefined) return false;
    if (!('channels' in value) || value['channels'] === undefined) return false;
    if (!('relation' in value) || value['relation'] === undefined) return false;
    return true;
}

export function SiteNotifyUserResponseFromJSON(json: any): SiteNotifyUserResponse {
    return SiteNotifyUserResponseFromJSONTyped(json, false);
}

export function SiteNotifyUserResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): SiteNotifyUserResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'user_id': json['user_id'],
        'channels': NotifyUserChannelsFromJSON(json['channels']),
        'relation': NotifyUserRelationFromJSON(json['relation']),
    };
}

export function SiteNotifyUserResponseToJSON(json: any): SiteNotifyUserResponse {
    return SiteNotifyUserResponseToJSONTyped(json, false);
}

export function SiteNotifyUserResponseToJSONTyped(value?: SiteNotifyUserResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'user_id': value['user_id'],
        'channels': NotifyUserChannelsToJSON(value['channels']),
        'relation': NotifyUserRelationToJSON(value['relation']),
    };
}

