/* tslint:disable */
/* eslint-disable */
/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MethodProjectLiveStatusInfoRestreamData } from './MethodProjectLiveStatusInfoRestreamData';
import {
    MethodProjectLiveStatusInfoRestreamDataFromJSON,
    MethodProjectLiveStatusInfoRestreamDataFromJSONTyped,
    MethodProjectLiveStatusInfoRestreamDataToJSON,
    MethodProjectLiveStatusInfoRestreamDataToJSONTyped,
} from './MethodProjectLiveStatusInfoRestreamData';

/**
 * 
 * @export
 * @interface MethodProjectLiveStatusInfo
 */
export interface MethodProjectLiveStatusInfo {
    /**
     * Restream data
     * @type {Array<MethodProjectLiveStatusInfoRestreamData>}
     * @memberof MethodProjectLiveStatusInfo
     */
    restream_data?: Array<MethodProjectLiveStatusInfoRestreamData>;
    /**
     * 
     * @type {number}
     * @memberof MethodProjectLiveStatusInfo
     */
    connect_id: number;
    /**
     * 
     * @type {string}
     * @memberof MethodProjectLiveStatusInfo
     */
    connect_id_v2: string;
    /**
     * 
     * @type {number}
     * @memberof MethodProjectLiveStatusInfo
     */
    fps: number;
    /**
     * 
     * @type {number}
     * @memberof MethodProjectLiveStatusInfo
     */
    key_frame: number;
    /**
     * 
     * @type {number}
     * @memberof MethodProjectLiveStatusInfo
     */
    count: number;
    /**
     * 
     * @type {number}
     * @memberof MethodProjectLiveStatusInfo
     */
    speed: number;
    /**
     * 
     * @type {number}
     * @memberof MethodProjectLiveStatusInfo
     */
    quality: number;
    /**
     * 
     * @type {number}
     * @memberof MethodProjectLiveStatusInfo
     */
    bitrate: number;
    /**
     * 
     * @type {number}
     * @memberof MethodProjectLiveStatusInfo
     */
    full_bitrate: number;
    /**
     * 
     * @type {string}
     * @memberof MethodProjectLiveStatusInfo
     */
    status: string;
    /**
     * 
     * @type {number}
     * @memberof MethodProjectLiveStatusInfo
     */
    restrims: number;
}

/**
 * Check if a given object implements the MethodProjectLiveStatusInfo interface.
 */
export function instanceOfMethodProjectLiveStatusInfo(value: object): value is MethodProjectLiveStatusInfo {
    if (!('connect_id' in value) || value['connect_id'] === undefined) return false;
    if (!('connect_id_v2' in value) || value['connect_id_v2'] === undefined) return false;
    if (!('fps' in value) || value['fps'] === undefined) return false;
    if (!('key_frame' in value) || value['key_frame'] === undefined) return false;
    if (!('count' in value) || value['count'] === undefined) return false;
    if (!('speed' in value) || value['speed'] === undefined) return false;
    if (!('quality' in value) || value['quality'] === undefined) return false;
    if (!('bitrate' in value) || value['bitrate'] === undefined) return false;
    if (!('full_bitrate' in value) || value['full_bitrate'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('restrims' in value) || value['restrims'] === undefined) return false;
    return true;
}

export function MethodProjectLiveStatusInfoFromJSON(json: any): MethodProjectLiveStatusInfo {
    return MethodProjectLiveStatusInfoFromJSONTyped(json, false);
}

export function MethodProjectLiveStatusInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): MethodProjectLiveStatusInfo {
    if (json == null) {
        return json;
    }
    return {
        
        'restream_data': json['restream_data'] == null ? undefined : ((json['restream_data'] as Array<any>).map(MethodProjectLiveStatusInfoRestreamDataFromJSON)),
        'connect_id': json['connect_id'],
        'connect_id_v2': json['connect_id_v2'],
        'fps': json['fps'],
        'key_frame': json['key_frame'],
        'count': json['count'],
        'speed': json['speed'],
        'quality': json['quality'],
        'bitrate': json['bitrate'],
        'full_bitrate': json['full_bitrate'],
        'status': json['status'],
        'restrims': json['restrims'],
    };
}

export function MethodProjectLiveStatusInfoToJSON(json: any): MethodProjectLiveStatusInfo {
    return MethodProjectLiveStatusInfoToJSONTyped(json, false);
}

export function MethodProjectLiveStatusInfoToJSONTyped(value?: MethodProjectLiveStatusInfo | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'restream_data': value['restream_data'] == null ? undefined : ((value['restream_data'] as Array<any>).map(MethodProjectLiveStatusInfoRestreamDataToJSON)),
        'connect_id': value['connect_id'],
        'connect_id_v2': value['connect_id_v2'],
        'fps': value['fps'],
        'key_frame': value['key_frame'],
        'count': value['count'],
        'speed': value['speed'],
        'quality': value['quality'],
        'bitrate': value['bitrate'],
        'full_bitrate': value['full_bitrate'],
        'status': value['status'],
        'restrims': value['restrims'],
    };
}

