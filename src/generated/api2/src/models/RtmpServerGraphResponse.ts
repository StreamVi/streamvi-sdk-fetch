/* tslint:disable */
/* eslint-disable */
/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TCountryChartData } from './TCountryChartData';
import {
    TCountryChartDataFromJSON,
    TCountryChartDataFromJSONTyped,
    TCountryChartDataToJSON,
    TCountryChartDataToJSONTyped,
} from './TCountryChartData';

/**
 * 
 * @export
 * @interface RtmpServerGraphResponse
 */
export interface RtmpServerGraphResponse {
    /**
     * Type of graph to display
     * @type {string}
     * @memberof RtmpServerGraphResponse
     */
    type: RtmpServerGraphResponseTypeEnum;
    /**
     * Time line for graph [timestamp]
     * @type {Array<number>}
     * @memberof RtmpServerGraphResponse
     */
    timeLine: Array<number>;
    /**
     * 
     * @type {Array<TCountryChartData>}
     * @memberof RtmpServerGraphResponse
     */
    countries: Array<TCountryChartData>;
}


/**
 * @export
 */
export const RtmpServerGraphResponseTypeEnum = {
    performance: 'performance',
    network: 'network',
    cpu: 'cpu',
    ram: 'ram',
    deliveredPackages: 'deliveredPackages'
} as const;
export type RtmpServerGraphResponseTypeEnum = typeof RtmpServerGraphResponseTypeEnum[keyof typeof RtmpServerGraphResponseTypeEnum];


/**
 * Check if a given object implements the RtmpServerGraphResponse interface.
 */
export function instanceOfRtmpServerGraphResponse(value: object): value is RtmpServerGraphResponse {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('timeLine' in value) || value['timeLine'] === undefined) return false;
    if (!('countries' in value) || value['countries'] === undefined) return false;
    return true;
}

export function RtmpServerGraphResponseFromJSON(json: any): RtmpServerGraphResponse {
    return RtmpServerGraphResponseFromJSONTyped(json, false);
}

export function RtmpServerGraphResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): RtmpServerGraphResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'timeLine': json['timeLine'],
        'countries': ((json['countries'] as Array<any>).map(TCountryChartDataFromJSON)),
    };
}

export function RtmpServerGraphResponseToJSON(json: any): RtmpServerGraphResponse {
    return RtmpServerGraphResponseToJSONTyped(json, false);
}

export function RtmpServerGraphResponseToJSONTyped(value?: RtmpServerGraphResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'timeLine': value['timeLine'],
        'countries': ((value['countries'] as Array<any>).map(TCountryChartDataToJSON)),
    };
}

