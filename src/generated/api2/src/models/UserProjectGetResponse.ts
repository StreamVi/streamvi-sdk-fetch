/* tslint:disable */
/* eslint-disable */
/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserProjectGetResponse
 */
export interface UserProjectGetResponse {
    /**
     * Имя
     * @type {string}
     * @memberof UserProjectGetResponse
     */
    name: string;
    /**
     * Фамилия
     * @type {string}
     * @memberof UserProjectGetResponse
     */
    fename: string;
    /**
     * Аватарка
     * @type {string}
     * @memberof UserProjectGetResponse
     */
    photo_50: string;
    /**
     * Тип 0 - личный проект, 1 - командный проект
     * @type {number}
     * @memberof UserProjectGetResponse
     */
    type: UserProjectGetResponseTypeEnum;
    /**
     * External id
     * @type {string}
     * @memberof UserProjectGetResponse
     */
    external_id: string;
    /**
     * Internal id
     * @type {number}
     * @memberof UserProjectGetResponse
     */
    internal_id: number;
    /**
     * Countrie id
     * @type {number}
     * @memberof UserProjectGetResponse
     */
    countrie_id: number;
    /**
     * Balance bonus
     * @type {number}
     * @memberof UserProjectGetResponse
     */
    balance_bonus: number;
    /**
     * Balance payment
     * @type {number}
     * @memberof UserProjectGetResponse
     */
    balance_payment: number;
    /**
     * Balance profit
     * @type {number}
     * @memberof UserProjectGetResponse
     */
    balance_profit: number;
    /**
     * Currency
     * @type {string}
     * @memberof UserProjectGetResponse
     */
    currency: UserProjectGetResponseCurrencyEnum;
}


/**
 * @export
 */
export const UserProjectGetResponseTypeEnum = {
    NUMBER_0: 0,
    NUMBER_1: 1
} as const;
export type UserProjectGetResponseTypeEnum = typeof UserProjectGetResponseTypeEnum[keyof typeof UserProjectGetResponseTypeEnum];

/**
 * @export
 */
export const UserProjectGetResponseCurrencyEnum = {
    rub: 'rub',
    usd: 'usd'
} as const;
export type UserProjectGetResponseCurrencyEnum = typeof UserProjectGetResponseCurrencyEnum[keyof typeof UserProjectGetResponseCurrencyEnum];


/**
 * Check if a given object implements the UserProjectGetResponse interface.
 */
export function instanceOfUserProjectGetResponse(value: object): value is UserProjectGetResponse {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('fename' in value) || value['fename'] === undefined) return false;
    if (!('photo_50' in value) || value['photo_50'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('external_id' in value) || value['external_id'] === undefined) return false;
    if (!('internal_id' in value) || value['internal_id'] === undefined) return false;
    if (!('countrie_id' in value) || value['countrie_id'] === undefined) return false;
    if (!('balance_bonus' in value) || value['balance_bonus'] === undefined) return false;
    if (!('balance_payment' in value) || value['balance_payment'] === undefined) return false;
    if (!('balance_profit' in value) || value['balance_profit'] === undefined) return false;
    if (!('currency' in value) || value['currency'] === undefined) return false;
    return true;
}

export function UserProjectGetResponseFromJSON(json: any): UserProjectGetResponse {
    return UserProjectGetResponseFromJSONTyped(json, false);
}

export function UserProjectGetResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserProjectGetResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'fename': json['fename'],
        'photo_50': json['photo_50'],
        'type': json['type'],
        'external_id': json['external_id'],
        'internal_id': json['internal_id'],
        'countrie_id': json['countrie_id'],
        'balance_bonus': json['balance_bonus'],
        'balance_payment': json['balance_payment'],
        'balance_profit': json['balance_profit'],
        'currency': json['currency'],
    };
}

export function UserProjectGetResponseToJSON(json: any): UserProjectGetResponse {
    return UserProjectGetResponseToJSONTyped(json, false);
}

export function UserProjectGetResponseToJSONTyped(value?: UserProjectGetResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'fename': value['fename'],
        'photo_50': value['photo_50'],
        'type': value['type'],
        'external_id': value['external_id'],
        'internal_id': value['internal_id'],
        'countrie_id': value['countrie_id'],
        'balance_bonus': value['balance_bonus'],
        'balance_payment': value['balance_payment'],
        'balance_profit': value['balance_profit'],
        'currency': value['currency'],
    };
}

