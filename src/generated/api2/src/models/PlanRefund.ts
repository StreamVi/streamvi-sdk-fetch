/* tslint:disable */
/* eslint-disable */
/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PlanRefund
 */
export interface PlanRefund {
    /**
     * Refund for the current rate
     * @type {number}
     * @memberof PlanRefund
     */
    current: number;
    /**
     * Refund for the next rate
     * @type {number}
     * @memberof PlanRefund
     */
    after: number;
}

/**
 * Check if a given object implements the PlanRefund interface.
 */
export function instanceOfPlanRefund(value: object): value is PlanRefund {
    if (!('current' in value) || value['current'] === undefined) return false;
    if (!('after' in value) || value['after'] === undefined) return false;
    return true;
}

export function PlanRefundFromJSON(json: any): PlanRefund {
    return PlanRefundFromJSONTyped(json, false);
}

export function PlanRefundFromJSONTyped(json: any, ignoreDiscriminator: boolean): PlanRefund {
    if (json == null) {
        return json;
    }
    return {
        
        'current': json['current'],
        'after': json['after'],
    };
}

export function PlanRefundToJSON(json: any): PlanRefund {
    return PlanRefundToJSONTyped(json, false);
}

export function PlanRefundToJSONTyped(value?: PlanRefund | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'current': value['current'],
        'after': value['after'],
    };
}

