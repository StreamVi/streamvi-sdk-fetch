/* tslint:disable */
/* eslint-disable */
/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PlanRestreamBeforeItem } from './PlanRestreamBeforeItem';
import {
    PlanRestreamBeforeItemFromJSON,
    PlanRestreamBeforeItemFromJSONTyped,
    PlanRestreamBeforeItemToJSON,
    PlanRestreamBeforeItemToJSONTyped,
} from './PlanRestreamBeforeItem';
import type { PlanRestreamCurrentItem } from './PlanRestreamCurrentItem';
import {
    PlanRestreamCurrentItemFromJSON,
    PlanRestreamCurrentItemFromJSONTyped,
    PlanRestreamCurrentItemToJSON,
    PlanRestreamCurrentItemToJSONTyped,
} from './PlanRestreamCurrentItem';
import type { PlanRestreamNextItem } from './PlanRestreamNextItem';
import {
    PlanRestreamNextItemFromJSON,
    PlanRestreamNextItemFromJSONTyped,
    PlanRestreamNextItemToJSON,
    PlanRestreamNextItemToJSONTyped,
} from './PlanRestreamNextItem';

/**
 * 
 * @export
 * @interface PlanRestreamForProjectV2
 */
export interface PlanRestreamForProjectV2 {
    /**
     * Before tariff restream
     * @type {PlanRestreamBeforeItem}
     * @memberof PlanRestreamForProjectV2
     */
    before?: PlanRestreamBeforeItem;
    /**
     * Current tariff restream
     * @type {PlanRestreamCurrentItem}
     * @memberof PlanRestreamForProjectV2
     */
    current: PlanRestreamCurrentItem;
    /**
     * Next tariff restream
     * @type {PlanRestreamNextItem}
     * @memberof PlanRestreamForProjectV2
     */
    next?: PlanRestreamNextItem;
}

/**
 * Check if a given object implements the PlanRestreamForProjectV2 interface.
 */
export function instanceOfPlanRestreamForProjectV2(value: object): value is PlanRestreamForProjectV2 {
    if (!('current' in value) || value['current'] === undefined) return false;
    return true;
}

export function PlanRestreamForProjectV2FromJSON(json: any): PlanRestreamForProjectV2 {
    return PlanRestreamForProjectV2FromJSONTyped(json, false);
}

export function PlanRestreamForProjectV2FromJSONTyped(json: any, ignoreDiscriminator: boolean): PlanRestreamForProjectV2 {
    if (json == null) {
        return json;
    }
    return {
        
        'before': json['before'] == null ? undefined : PlanRestreamBeforeItemFromJSON(json['before']),
        'current': PlanRestreamCurrentItemFromJSON(json['current']),
        'next': json['next'] == null ? undefined : PlanRestreamNextItemFromJSON(json['next']),
    };
}

export function PlanRestreamForProjectV2ToJSON(json: any): PlanRestreamForProjectV2 {
    return PlanRestreamForProjectV2ToJSONTyped(json, false);
}

export function PlanRestreamForProjectV2ToJSONTyped(value?: PlanRestreamForProjectV2 | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'before': PlanRestreamBeforeItemToJSON(value['before']),
        'current': PlanRestreamCurrentItemToJSON(value['current']),
        'next': PlanRestreamNextItemToJSON(value['next']),
    };
}

