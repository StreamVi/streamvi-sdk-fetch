/* tslint:disable */
/* eslint-disable */
/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ProjectChannelResponse } from './ProjectChannelResponse';
import {
    ProjectChannelResponseFromJSON,
    ProjectChannelResponseFromJSONTyped,
    ProjectChannelResponseToJSON,
    ProjectChannelResponseToJSONTyped,
} from './ProjectChannelResponse';

/**
 * 
 * @export
 * @interface ListOfProjectChannelResponse
 */
export interface ListOfProjectChannelResponse {
    /**
     * 
     * @type {Array<ProjectChannelResponse>}
     * @memberof ListOfProjectChannelResponse
     */
    results: Array<ProjectChannelResponse>;
}

/**
 * Check if a given object implements the ListOfProjectChannelResponse interface.
 */
export function instanceOfListOfProjectChannelResponse(value: object): value is ListOfProjectChannelResponse {
    if (!('results' in value) || value['results'] === undefined) return false;
    return true;
}

export function ListOfProjectChannelResponseFromJSON(json: any): ListOfProjectChannelResponse {
    return ListOfProjectChannelResponseFromJSONTyped(json, false);
}

export function ListOfProjectChannelResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ListOfProjectChannelResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'results': ((json['results'] as Array<any>).map(ProjectChannelResponseFromJSON)),
    };
}

export function ListOfProjectChannelResponseToJSON(json: any): ListOfProjectChannelResponse {
    return ListOfProjectChannelResponseToJSONTyped(json, false);
}

export function ListOfProjectChannelResponseToJSONTyped(value?: ListOfProjectChannelResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'results': ((value['results'] as Array<any>).map(ProjectChannelResponseToJSON)),
    };
}

