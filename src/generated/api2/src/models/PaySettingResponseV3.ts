/* tslint:disable */
/* eslint-disable */
/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PaySettingResponseV3
 */
export interface PaySettingResponseV3 {
    /**
     * Project id
     * @type {number}
     * @memberof PaySettingResponseV3
     */
    project_id: number;
    /**
     * Currency
     * @type {string}
     * @memberof PaySettingResponseV3
     */
    currency: PaySettingResponseV3CurrencyEnum;
    /**
     * Country
     * @type {number}
     * @memberof PaySettingResponseV3
     */
    countrie_id: number;
    /**
     * Organiztion
     * @type {number}
     * @memberof PaySettingResponseV3
     */
    organization_id: number | null;
    /**
     * Pay system id
     * @type {number}
     * @memberof PaySettingResponseV3
     */
    pay_system_id: number;
    /**
     * E-mail
     * @type {string}
     * @memberof PaySettingResponseV3
     */
    email: string;
    /**
     * Street
     * @type {string}
     * @memberof PaySettingResponseV3
     */
    street?: string | null;
    /**
     * House number
     * @type {string}
     * @memberof PaySettingResponseV3
     */
    house_number?: string | null;
    /**
     * Postal code
     * @type {string}
     * @memberof PaySettingResponseV3
     */
    zip?: string | null;
    /**
     * City
     * @type {string}
     * @memberof PaySettingResponseV3
     */
    city?: string | null;
    /**
     * State ot region
     * @type {string}
     * @memberof PaySettingResponseV3
     */
    state?: string | null;
    /**
     * Company name
     * @type {string}
     * @memberof PaySettingResponseV3
     */
    company_name?: string | null;
    /**
     * Additional information about the payment
     * @type {string}
     * @memberof PaySettingResponseV3
     */
    description?: string | null;
}


/**
 * @export
 */
export const PaySettingResponseV3CurrencyEnum = {
    rub: 'rub',
    usd: 'usd'
} as const;
export type PaySettingResponseV3CurrencyEnum = typeof PaySettingResponseV3CurrencyEnum[keyof typeof PaySettingResponseV3CurrencyEnum];


/**
 * Check if a given object implements the PaySettingResponseV3 interface.
 */
export function instanceOfPaySettingResponseV3(value: object): value is PaySettingResponseV3 {
    if (!('project_id' in value) || value['project_id'] === undefined) return false;
    if (!('currency' in value) || value['currency'] === undefined) return false;
    if (!('countrie_id' in value) || value['countrie_id'] === undefined) return false;
    if (!('organization_id' in value) || value['organization_id'] === undefined) return false;
    if (!('pay_system_id' in value) || value['pay_system_id'] === undefined) return false;
    if (!('email' in value) || value['email'] === undefined) return false;
    return true;
}

export function PaySettingResponseV3FromJSON(json: any): PaySettingResponseV3 {
    return PaySettingResponseV3FromJSONTyped(json, false);
}

export function PaySettingResponseV3FromJSONTyped(json: any, ignoreDiscriminator: boolean): PaySettingResponseV3 {
    if (json == null) {
        return json;
    }
    return {
        
        'project_id': json['project_id'],
        'currency': json['currency'],
        'countrie_id': json['countrie_id'],
        'organization_id': json['organization_id'],
        'pay_system_id': json['pay_system_id'],
        'email': json['email'],
        'street': json['street'] == null ? undefined : json['street'],
        'house_number': json['house_number'] == null ? undefined : json['house_number'],
        'zip': json['zip'] == null ? undefined : json['zip'],
        'city': json['city'] == null ? undefined : json['city'],
        'state': json['state'] == null ? undefined : json['state'],
        'company_name': json['company_name'] == null ? undefined : json['company_name'],
        'description': json['description'] == null ? undefined : json['description'],
    };
}

export function PaySettingResponseV3ToJSON(json: any): PaySettingResponseV3 {
    return PaySettingResponseV3ToJSONTyped(json, false);
}

export function PaySettingResponseV3ToJSONTyped(value?: PaySettingResponseV3 | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'project_id': value['project_id'],
        'currency': value['currency'],
        'countrie_id': value['countrie_id'],
        'organization_id': value['organization_id'],
        'pay_system_id': value['pay_system_id'],
        'email': value['email'],
        'street': value['street'],
        'house_number': value['house_number'],
        'zip': value['zip'],
        'city': value['city'],
        'state': value['state'],
        'company_name': value['company_name'],
        'description': value['description'],
    };
}

