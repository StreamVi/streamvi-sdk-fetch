/* tslint:disable */
/* eslint-disable */
/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SearchChannelRtmpDto
 */
export interface SearchChannelRtmpDto {
    /**
     * 
     * @type {string}
     * @memberof SearchChannelRtmpDto
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof SearchChannelRtmpDto
     */
    path?: string | null;
    /**
     * 
     * @type {number}
     * @memberof SearchChannelRtmpDto
     */
    port?: number | null;
    /**
     * 
     * @type {string}
     * @memberof SearchChannelRtmpDto
     */
    query?: string | null;
    /**
     * 
     * @type {string}
     * @memberof SearchChannelRtmpDto
     */
    domain: string;
    /**
     * 
     * @type {string}
     * @memberof SearchChannelRtmpDto
     */
    protocol: string;
}

/**
 * Check if a given object implements the SearchChannelRtmpDto interface.
 */
export function instanceOfSearchChannelRtmpDto(value: object): value is SearchChannelRtmpDto {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('domain' in value) || value['domain'] === undefined) return false;
    if (!('protocol' in value) || value['protocol'] === undefined) return false;
    return true;
}

export function SearchChannelRtmpDtoFromJSON(json: any): SearchChannelRtmpDto {
    return SearchChannelRtmpDtoFromJSONTyped(json, false);
}

export function SearchChannelRtmpDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): SearchChannelRtmpDto {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'path': json['path'] == null ? undefined : json['path'],
        'port': json['port'] == null ? undefined : json['port'],
        'query': json['query'] == null ? undefined : json['query'],
        'domain': json['domain'],
        'protocol': json['protocol'],
    };
}

export function SearchChannelRtmpDtoToJSON(json: any): SearchChannelRtmpDto {
    return SearchChannelRtmpDtoToJSONTyped(json, false);
}

export function SearchChannelRtmpDtoToJSONTyped(value?: SearchChannelRtmpDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'path': value['path'],
        'port': value['port'],
        'query': value['query'],
        'domain': value['domain'],
        'protocol': value['protocol'],
    };
}

