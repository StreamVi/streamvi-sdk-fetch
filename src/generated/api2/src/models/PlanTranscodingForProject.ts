/* tslint:disable */
/* eslint-disable */
/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PlanTranscodingItem } from './PlanTranscodingItem';
import {
    PlanTranscodingItemFromJSON,
    PlanTranscodingItemFromJSONTyped,
    PlanTranscodingItemToJSON,
    PlanTranscodingItemToJSONTyped,
} from './PlanTranscodingItem';

/**
 * 
 * @export
 * @interface PlanTranscodingForProject
 */
export interface PlanTranscodingForProject {
    /**
     * Before tariff transcoding
     * @type {PlanTranscodingItem}
     * @memberof PlanTranscodingForProject
     */
    before: PlanTranscodingItem;
    /**
     * Current tariff transcoding
     * @type {PlanTranscodingItem}
     * @memberof PlanTranscodingForProject
     */
    current: PlanTranscodingItem;
    /**
     * Next tariff transcoding
     * @type {PlanTranscodingItem}
     * @memberof PlanTranscodingForProject
     */
    next: PlanTranscodingItem;
}

/**
 * Check if a given object implements the PlanTranscodingForProject interface.
 */
export function instanceOfPlanTranscodingForProject(value: object): value is PlanTranscodingForProject {
    if (!('before' in value) || value['before'] === undefined) return false;
    if (!('current' in value) || value['current'] === undefined) return false;
    if (!('next' in value) || value['next'] === undefined) return false;
    return true;
}

export function PlanTranscodingForProjectFromJSON(json: any): PlanTranscodingForProject {
    return PlanTranscodingForProjectFromJSONTyped(json, false);
}

export function PlanTranscodingForProjectFromJSONTyped(json: any, ignoreDiscriminator: boolean): PlanTranscodingForProject {
    if (json == null) {
        return json;
    }
    return {
        
        'before': PlanTranscodingItemFromJSON(json['before']),
        'current': PlanTranscodingItemFromJSON(json['current']),
        'next': PlanTranscodingItemFromJSON(json['next']),
    };
}

export function PlanTranscodingForProjectToJSON(json: any): PlanTranscodingForProject {
    return PlanTranscodingForProjectToJSONTyped(json, false);
}

export function PlanTranscodingForProjectToJSONTyped(value?: PlanTranscodingForProject | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'before': PlanTranscodingItemToJSON(value['before']),
        'current': PlanTranscodingItemToJSON(value['current']),
        'next': PlanTranscodingItemToJSON(value['next']),
    };
}

