/* tslint:disable */
/* eslint-disable */
/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ProjectInfoAccessResponse } from './ProjectInfoAccessResponse';
import {
    ProjectInfoAccessResponseFromJSON,
    ProjectInfoAccessResponseFromJSONTyped,
    ProjectInfoAccessResponseToJSON,
    ProjectInfoAccessResponseToJSONTyped,
} from './ProjectInfoAccessResponse';
import type { ProjectInfoStorageResponse } from './ProjectInfoStorageResponse';
import {
    ProjectInfoStorageResponseFromJSON,
    ProjectInfoStorageResponseFromJSONTyped,
    ProjectInfoStorageResponseToJSON,
    ProjectInfoStorageResponseToJSONTyped,
} from './ProjectInfoStorageResponse';
import type { ProjectInfoTranscodingResponse } from './ProjectInfoTranscodingResponse';
import {
    ProjectInfoTranscodingResponseFromJSON,
    ProjectInfoTranscodingResponseFromJSONTyped,
    ProjectInfoTranscodingResponseToJSON,
    ProjectInfoTranscodingResponseToJSONTyped,
} from './ProjectInfoTranscodingResponse';
import type { ProjectInfoDataResponse } from './ProjectInfoDataResponse';
import {
    ProjectInfoDataResponseFromJSON,
    ProjectInfoDataResponseFromJSONTyped,
    ProjectInfoDataResponseToJSON,
    ProjectInfoDataResponseToJSONTyped,
} from './ProjectInfoDataResponse';
import type { ProjectInfoRestreamResponse } from './ProjectInfoRestreamResponse';
import {
    ProjectInfoRestreamResponseFromJSON,
    ProjectInfoRestreamResponseFromJSONTyped,
    ProjectInfoRestreamResponseToJSON,
    ProjectInfoRestreamResponseToJSONTyped,
} from './ProjectInfoRestreamResponse';

/**
 * 
 * @export
 * @interface ProjectInfoResponse
 */
export interface ProjectInfoResponse {
    /**
     * Version
     * @type {string}
     * @memberof ProjectInfoResponse
     */
    v: ProjectInfoResponseVEnum;
    /**
     * Current language
     * @type {string}
     * @memberof ProjectInfoResponse
     */
    language: ProjectInfoResponseLanguageEnum;
    /**
     * Project info
     * @type {ProjectInfoDataResponse}
     * @memberof ProjectInfoResponse
     */
    data: ProjectInfoDataResponse;
    /**
     * Restream tariff
     * @type {ProjectInfoRestreamResponse}
     * @memberof ProjectInfoResponse
     */
    restream: ProjectInfoRestreamResponse;
    /**
     * Transcoding tariff
     * @type {ProjectInfoTranscodingResponse}
     * @memberof ProjectInfoResponse
     */
    transcoding: ProjectInfoTranscodingResponse | null;
    /**
     * Storage tariff
     * @type {ProjectInfoStorageResponse}
     * @memberof ProjectInfoResponse
     */
    storage: ProjectInfoStorageResponse | null;
    /**
     * Project info access
     * @type {ProjectInfoAccessResponse}
     * @memberof ProjectInfoResponse
     */
    access: ProjectInfoAccessResponse;
}


/**
 * @export
 */
export const ProjectInfoResponseVEnum = {
    _1: '1',
    _2: '2',
    _3: '3'
} as const;
export type ProjectInfoResponseVEnum = typeof ProjectInfoResponseVEnum[keyof typeof ProjectInfoResponseVEnum];

/**
 * @export
 */
export const ProjectInfoResponseLanguageEnum = {
    ru: 'ru',
    en: 'en',
    cn: 'cn'
} as const;
export type ProjectInfoResponseLanguageEnum = typeof ProjectInfoResponseLanguageEnum[keyof typeof ProjectInfoResponseLanguageEnum];


/**
 * Check if a given object implements the ProjectInfoResponse interface.
 */
export function instanceOfProjectInfoResponse(value: object): value is ProjectInfoResponse {
    if (!('v' in value) || value['v'] === undefined) return false;
    if (!('language' in value) || value['language'] === undefined) return false;
    if (!('data' in value) || value['data'] === undefined) return false;
    if (!('restream' in value) || value['restream'] === undefined) return false;
    if (!('transcoding' in value) || value['transcoding'] === undefined) return false;
    if (!('storage' in value) || value['storage'] === undefined) return false;
    if (!('access' in value) || value['access'] === undefined) return false;
    return true;
}

export function ProjectInfoResponseFromJSON(json: any): ProjectInfoResponse {
    return ProjectInfoResponseFromJSONTyped(json, false);
}

export function ProjectInfoResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProjectInfoResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'v': json['v'],
        'language': json['language'],
        'data': ProjectInfoDataResponseFromJSON(json['data']),
        'restream': ProjectInfoRestreamResponseFromJSON(json['restream']),
        'transcoding': ProjectInfoTranscodingResponseFromJSON(json['transcoding']),
        'storage': ProjectInfoStorageResponseFromJSON(json['storage']),
        'access': ProjectInfoAccessResponseFromJSON(json['access']),
    };
}

export function ProjectInfoResponseToJSON(json: any): ProjectInfoResponse {
    return ProjectInfoResponseToJSONTyped(json, false);
}

export function ProjectInfoResponseToJSONTyped(value?: ProjectInfoResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'v': value['v'],
        'language': value['language'],
        'data': ProjectInfoDataResponseToJSON(value['data']),
        'restream': ProjectInfoRestreamResponseToJSON(value['restream']),
        'transcoding': ProjectInfoTranscodingResponseToJSON(value['transcoding']),
        'storage': ProjectInfoStorageResponseToJSON(value['storage']),
        'access': ProjectInfoAccessResponseToJSON(value['access']),
    };
}

