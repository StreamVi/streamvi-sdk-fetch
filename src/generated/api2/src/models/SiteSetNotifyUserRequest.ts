/* tslint:disable */
/* eslint-disable */
/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SiteSetNotifyUserRequest
 */
export interface SiteSetNotifyUserRequest {
    /**
     * Project id
     * @type {number}
     * @memberof SiteSetNotifyUserRequest
     */
    project_id: number;
    /**
     * Notify channel
     * @type {string}
     * @memberof SiteSetNotifyUserRequest
     */
    notify_channel: SiteSetNotifyUserRequestNotifyChannelEnum;
    /**
     * Notify category
     * @type {string}
     * @memberof SiteSetNotifyUserRequest
     */
    notify_category: SiteSetNotifyUserRequestNotifyCategoryEnum;
    /**
     * Set status
     * @type {string}
     * @memberof SiteSetNotifyUserRequest
     */
    status: SiteSetNotifyUserRequestStatusEnum;
}


/**
 * @export
 */
export const SiteSetNotifyUserRequestNotifyChannelEnum = {
    telegram: 'telegram',
    cabinet: 'cabinet',
    mobile: 'mobile'
} as const;
export type SiteSetNotifyUserRequestNotifyChannelEnum = typeof SiteSetNotifyUserRequestNotifyChannelEnum[keyof typeof SiteSetNotifyUserRequestNotifyChannelEnum];

/**
 * @export
 */
export const SiteSetNotifyUserRequestNotifyCategoryEnum = {
    important: 'important',
    stream: 'stream'
} as const;
export type SiteSetNotifyUserRequestNotifyCategoryEnum = typeof SiteSetNotifyUserRequestNotifyCategoryEnum[keyof typeof SiteSetNotifyUserRequestNotifyCategoryEnum];

/**
 * @export
 */
export const SiteSetNotifyUserRequestStatusEnum = {
    enable: 'enable',
    disable: 'disable'
} as const;
export type SiteSetNotifyUserRequestStatusEnum = typeof SiteSetNotifyUserRequestStatusEnum[keyof typeof SiteSetNotifyUserRequestStatusEnum];


/**
 * Check if a given object implements the SiteSetNotifyUserRequest interface.
 */
export function instanceOfSiteSetNotifyUserRequest(value: object): value is SiteSetNotifyUserRequest {
    if (!('project_id' in value) || value['project_id'] === undefined) return false;
    if (!('notify_channel' in value) || value['notify_channel'] === undefined) return false;
    if (!('notify_category' in value) || value['notify_category'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    return true;
}

export function SiteSetNotifyUserRequestFromJSON(json: any): SiteSetNotifyUserRequest {
    return SiteSetNotifyUserRequestFromJSONTyped(json, false);
}

export function SiteSetNotifyUserRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): SiteSetNotifyUserRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'project_id': json['project_id'],
        'notify_channel': json['notify_channel'],
        'notify_category': json['notify_category'],
        'status': json['status'],
    };
}

export function SiteSetNotifyUserRequestToJSON(json: any): SiteSetNotifyUserRequest {
    return SiteSetNotifyUserRequestToJSONTyped(json, false);
}

export function SiteSetNotifyUserRequestToJSONTyped(value?: SiteSetNotifyUserRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'project_id': value['project_id'],
        'notify_channel': value['notify_channel'],
        'notify_category': value['notify_category'],
        'status': value['status'],
    };
}

