/* tslint:disable */
/* eslint-disable */
/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PlanRestreamPrice } from './PlanRestreamPrice';
import {
    PlanRestreamPriceFromJSON,
    PlanRestreamPriceFromJSONTyped,
    PlanRestreamPriceToJSON,
    PlanRestreamPriceToJSONTyped,
} from './PlanRestreamPrice';
import type { PlanRestreamFeatureItemV2 } from './PlanRestreamFeatureItemV2';
import {
    PlanRestreamFeatureItemV2FromJSON,
    PlanRestreamFeatureItemV2FromJSONTyped,
    PlanRestreamFeatureItemV2ToJSON,
    PlanRestreamFeatureItemV2ToJSONTyped,
} from './PlanRestreamFeatureItemV2';
import type { PlanRestreamForProjectV2 } from './PlanRestreamForProjectV2';
import {
    PlanRestreamForProjectV2FromJSON,
    PlanRestreamForProjectV2FromJSONTyped,
    PlanRestreamForProjectV2ToJSON,
    PlanRestreamForProjectV2ToJSONTyped,
} from './PlanRestreamForProjectV2';

/**
 * 
 * @export
 * @interface PlanRestreamProjectResponse
 */
export interface PlanRestreamProjectResponse {
    /**
     * Unique ID
     * @type {number}
     * @memberof PlanRestreamProjectResponse
     */
    plan_restream_id: number;
    /**
     * Title
     * @type {string}
     * @memberof PlanRestreamProjectResponse
     */
    title: string;
    /**
     * Active
     * @type {boolean}
     * @memberof PlanRestreamProjectResponse
     */
    active: boolean;
    /**
     * Minimum channel count
     * @type {number}
     * @memberof PlanRestreamProjectResponse
     */
    count_channel_min?: number;
    /**
     * Maximum channel count
     * @type {number}
     * @memberof PlanRestreamProjectResponse
     */
    count_channel_max: number;
    /**
     * Step channel
     * @type {number}
     * @memberof PlanRestreamProjectResponse
     */
    count_channel_step?: number;
    /**
     * Type
     * @type {string}
     * @memberof PlanRestreamProjectResponse
     */
    type: PlanRestreamProjectResponseTypeEnum;
    /**
     * Maximum bitrate, kbps
     * @type {number}
     * @memberof PlanRestreamProjectResponse
     */
    bitrate_max: number | null;
    /**
     * Minimum bitrate, kbps
     * @type {number}
     * @memberof PlanRestreamProjectResponse
     */
    bitrate_min?: number;
    /**
     * Step bitrate
     * @type {number}
     * @memberof PlanRestreamProjectResponse
     */
    bitrate_step?: number;
    /**
     * Field for sort
     * @type {number}
     * @memberof PlanRestreamProjectResponse
     */
    index: number;
    /**
     * Price
     * @type {PlanRestreamPrice}
     * @memberof PlanRestreamProjectResponse
     */
    price: PlanRestreamPrice;
    /**
     * Status
     * @type {string}
     * @memberof PlanRestreamProjectResponse
     */
    status: PlanRestreamProjectResponseStatusEnum;
    /**
     * Features
     * @type {Array<PlanRestreamFeatureItemV2>}
     * @memberof PlanRestreamProjectResponse
     */
    feature: Array<PlanRestreamFeatureItemV2>;
    /**
     * Tariff project
     * @type {PlanRestreamForProjectV2}
     * @memberof PlanRestreamProjectResponse
     */
    own_tariff: PlanRestreamForProjectV2;
}


/**
 * @export
 */
export const PlanRestreamProjectResponseTypeEnum = {
    free: 'free',
    paid_fix: 'paid_fix',
    paid_flex: 'paid_flex',
    custom: 'custom'
} as const;
export type PlanRestreamProjectResponseTypeEnum = typeof PlanRestreamProjectResponseTypeEnum[keyof typeof PlanRestreamProjectResponseTypeEnum];

/**
 * @export
 */
export const PlanRestreamProjectResponseStatusEnum = {
    current: 'current',
    upgrade: 'upgrade',
    downgrade: 'downgrade'
} as const;
export type PlanRestreamProjectResponseStatusEnum = typeof PlanRestreamProjectResponseStatusEnum[keyof typeof PlanRestreamProjectResponseStatusEnum];


/**
 * Check if a given object implements the PlanRestreamProjectResponse interface.
 */
export function instanceOfPlanRestreamProjectResponse(value: object): value is PlanRestreamProjectResponse {
    if (!('plan_restream_id' in value) || value['plan_restream_id'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('active' in value) || value['active'] === undefined) return false;
    if (!('count_channel_max' in value) || value['count_channel_max'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('bitrate_max' in value) || value['bitrate_max'] === undefined) return false;
    if (!('index' in value) || value['index'] === undefined) return false;
    if (!('price' in value) || value['price'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('feature' in value) || value['feature'] === undefined) return false;
    if (!('own_tariff' in value) || value['own_tariff'] === undefined) return false;
    return true;
}

export function PlanRestreamProjectResponseFromJSON(json: any): PlanRestreamProjectResponse {
    return PlanRestreamProjectResponseFromJSONTyped(json, false);
}

export function PlanRestreamProjectResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): PlanRestreamProjectResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'plan_restream_id': json['plan_restream_id'],
        'title': json['title'],
        'active': json['active'],
        'count_channel_min': json['count_channel_min'] == null ? undefined : json['count_channel_min'],
        'count_channel_max': json['count_channel_max'],
        'count_channel_step': json['count_channel_step'] == null ? undefined : json['count_channel_step'],
        'type': json['type'],
        'bitrate_max': json['bitrate_max'],
        'bitrate_min': json['bitrate_min'] == null ? undefined : json['bitrate_min'],
        'bitrate_step': json['bitrate_step'] == null ? undefined : json['bitrate_step'],
        'index': json['index'],
        'price': PlanRestreamPriceFromJSON(json['price']),
        'status': json['status'],
        'feature': ((json['feature'] as Array<any>).map(PlanRestreamFeatureItemV2FromJSON)),
        'own_tariff': PlanRestreamForProjectV2FromJSON(json['own_tariff']),
    };
}

export function PlanRestreamProjectResponseToJSON(json: any): PlanRestreamProjectResponse {
    return PlanRestreamProjectResponseToJSONTyped(json, false);
}

export function PlanRestreamProjectResponseToJSONTyped(value?: PlanRestreamProjectResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'plan_restream_id': value['plan_restream_id'],
        'title': value['title'],
        'active': value['active'],
        'count_channel_min': value['count_channel_min'],
        'count_channel_max': value['count_channel_max'],
        'count_channel_step': value['count_channel_step'],
        'type': value['type'],
        'bitrate_max': value['bitrate_max'],
        'bitrate_min': value['bitrate_min'],
        'bitrate_step': value['bitrate_step'],
        'index': value['index'],
        'price': PlanRestreamPriceToJSON(value['price']),
        'status': value['status'],
        'feature': ((value['feature'] as Array<any>).map(PlanRestreamFeatureItemV2ToJSON)),
        'own_tariff': PlanRestreamForProjectV2ToJSON(value['own_tariff']),
    };
}

