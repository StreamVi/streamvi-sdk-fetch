/* tslint:disable */
/* eslint-disable */
/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SearchChannelLiveUserDto
 */
export interface SearchChannelLiveUserDto {
    /**
     * 
     * @type {number}
     * @memberof SearchChannelLiveUserDto
     */
    restreamId: number;
    /**
     * 
     * @type {number}
     * @memberof SearchChannelLiveUserDto
     */
    userId: number;
    /**
     * 
     * @type {string}
     * @memberof SearchChannelLiveUserDto
     */
    video?: string | null;
    /**
     * 
     * @type {string}
     * @memberof SearchChannelLiveUserDto
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof SearchChannelLiveUserDto
     */
    photo: string;
}

/**
 * Check if a given object implements the SearchChannelLiveUserDto interface.
 */
export function instanceOfSearchChannelLiveUserDto(value: object): value is SearchChannelLiveUserDto {
    if (!('restreamId' in value) || value['restreamId'] === undefined) return false;
    if (!('userId' in value) || value['userId'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('photo' in value) || value['photo'] === undefined) return false;
    return true;
}

export function SearchChannelLiveUserDtoFromJSON(json: any): SearchChannelLiveUserDto {
    return SearchChannelLiveUserDtoFromJSONTyped(json, false);
}

export function SearchChannelLiveUserDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): SearchChannelLiveUserDto {
    if (json == null) {
        return json;
    }
    return {
        
        'restreamId': json['restreamId'],
        'userId': json['userId'],
        'video': json['video'] == null ? undefined : json['video'],
        'name': json['name'],
        'photo': json['photo'],
    };
}

export function SearchChannelLiveUserDtoToJSON(json: any): SearchChannelLiveUserDto {
    return SearchChannelLiveUserDtoToJSONTyped(json, false);
}

export function SearchChannelLiveUserDtoToJSONTyped(value?: SearchChannelLiveUserDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'restreamId': value['restreamId'],
        'userId': value['userId'],
        'video': value['video'],
        'name': value['name'],
        'photo': value['photo'],
    };
}

