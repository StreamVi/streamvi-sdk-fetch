/* tslint:disable */
/* eslint-disable */
/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PlanTranscodingItem
 */
export interface PlanTranscodingItem {
    /**
     * Plan transcoding id
     * @type {number}
     * @memberof PlanTranscodingItem
     */
    id: number;
    /**
     * Count flows
     * @type {number}
     * @memberof PlanTranscodingItem
     */
    count: number;
    /**
     * Date end tariff
     * @type {Date}
     * @memberof PlanTranscodingItem
     */
    date_end: Date;
    /**
     * Plan title
     * @type {string}
     * @memberof PlanTranscodingItem
     */
    title: string;
    /**
     * Prolongation
     * @type {number}
     * @memberof PlanTranscodingItem
     */
    prolongation?: number;
}

/**
 * Check if a given object implements the PlanTranscodingItem interface.
 */
export function instanceOfPlanTranscodingItem(value: object): value is PlanTranscodingItem {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('count' in value) || value['count'] === undefined) return false;
    if (!('date_end' in value) || value['date_end'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    return true;
}

export function PlanTranscodingItemFromJSON(json: any): PlanTranscodingItem {
    return PlanTranscodingItemFromJSONTyped(json, false);
}

export function PlanTranscodingItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): PlanTranscodingItem {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'count': json['count'],
        'date_end': (new Date(json['date_end'])),
        'title': json['title'],
        'prolongation': json['prolongation'] == null ? undefined : json['prolongation'],
    };
}

export function PlanTranscodingItemToJSON(json: any): PlanTranscodingItem {
    return PlanTranscodingItemToJSONTyped(json, false);
}

export function PlanTranscodingItemToJSONTyped(value?: PlanTranscodingItem | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'count': value['count'],
        'date_end': ((value['date_end']).toISOString()),
        'title': value['title'],
        'prolongation': value['prolongation'],
    };
}

