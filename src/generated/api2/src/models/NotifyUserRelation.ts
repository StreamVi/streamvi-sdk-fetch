/* tslint:disable */
/* eslint-disable */
/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface NotifyUserRelation
 */
export interface NotifyUserRelation {
    /**
     * Category of user notify in cabinet
     * @type {Array<string>}
     * @memberof NotifyUserRelation
     */
    cabinet: Array<NotifyUserRelationCabinetEnum>;
    /**
     * Category of user notify in telegram
     * @type {Array<string>}
     * @memberof NotifyUserRelation
     */
    telegram: Array<NotifyUserRelationTelegramEnum>;
    /**
     * Category of user notify in mobile
     * @type {Array<string>}
     * @memberof NotifyUserRelation
     */
    mobile: Array<NotifyUserRelationMobileEnum>;
    /**
     * Project
     * @type {number}
     * @memberof NotifyUserRelation
     */
    project_id: number;
}


/**
 * @export
 */
export const NotifyUserRelationCabinetEnum = {
    important: 'important',
    stream: 'stream'
} as const;
export type NotifyUserRelationCabinetEnum = typeof NotifyUserRelationCabinetEnum[keyof typeof NotifyUserRelationCabinetEnum];

/**
 * @export
 */
export const NotifyUserRelationTelegramEnum = {
    important: 'important',
    stream: 'stream'
} as const;
export type NotifyUserRelationTelegramEnum = typeof NotifyUserRelationTelegramEnum[keyof typeof NotifyUserRelationTelegramEnum];

/**
 * @export
 */
export const NotifyUserRelationMobileEnum = {
    important: 'important',
    stream: 'stream'
} as const;
export type NotifyUserRelationMobileEnum = typeof NotifyUserRelationMobileEnum[keyof typeof NotifyUserRelationMobileEnum];


/**
 * Check if a given object implements the NotifyUserRelation interface.
 */
export function instanceOfNotifyUserRelation(value: object): value is NotifyUserRelation {
    if (!('cabinet' in value) || value['cabinet'] === undefined) return false;
    if (!('telegram' in value) || value['telegram'] === undefined) return false;
    if (!('mobile' in value) || value['mobile'] === undefined) return false;
    if (!('project_id' in value) || value['project_id'] === undefined) return false;
    return true;
}

export function NotifyUserRelationFromJSON(json: any): NotifyUserRelation {
    return NotifyUserRelationFromJSONTyped(json, false);
}

export function NotifyUserRelationFromJSONTyped(json: any, ignoreDiscriminator: boolean): NotifyUserRelation {
    if (json == null) {
        return json;
    }
    return {
        
        'cabinet': json['cabinet'],
        'telegram': json['telegram'],
        'mobile': json['mobile'],
        'project_id': json['project_id'],
    };
}

export function NotifyUserRelationToJSON(json: any): NotifyUserRelation {
    return NotifyUserRelationToJSONTyped(json, false);
}

export function NotifyUserRelationToJSONTyped(value?: NotifyUserRelation | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'cabinet': value['cabinet'],
        'telegram': value['telegram'],
        'mobile': value['mobile'],
        'project_id': value['project_id'],
    };
}

