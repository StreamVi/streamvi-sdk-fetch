/* tslint:disable */
/* eslint-disable */
/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TranscoderCreateDto
 */
export interface TranscoderCreateDto {
    /**
     * Version
     * @type {string}
     * @memberof TranscoderCreateDto
     */
    v: TranscoderCreateDtoVEnum;
    /**
     * Current language
     * @type {string}
     * @memberof TranscoderCreateDto
     */
    language: TranscoderCreateDtoLanguageEnum;
    /**
     * Project id
     * @type {number}
     * @memberof TranscoderCreateDto
     */
    project_id: number;
    /**
     * Width
     * @type {number}
     * @memberof TranscoderCreateDto
     */
    width?: number;
    /**
     * Height
     * @type {number}
     * @memberof TranscoderCreateDto
     */
    height?: number;
    /**
     * Fps
     * @type {number}
     * @memberof TranscoderCreateDto
     */
    fps?: number;
    /**
     * Video bitrate, kbps
     * @type {number}
     * @memberof TranscoderCreateDto
     */
    vBitrate?: number;
    /**
     * Audio bitrate, kbps
     * @type {number}
     * @memberof TranscoderCreateDto
     */
    aBitrate?: number;
    /**
     * Name
     * @type {string}
     * @memberof TranscoderCreateDto
     */
    name: string;
    /**
     * Rotation
     * @type {number}
     * @memberof TranscoderCreateDto
     */
    rotation?: number;
    /**
     * Rotation
     * @type {number}
     * @memberof TranscoderCreateDto
     */
    bFrames?: number;
    /**
     * ChannelIds
     * @type {number}
     * @memberof TranscoderCreateDto
     */
    channelIds?: number;
    /**
     * Video codec id
     * @type {number}
     * @memberof TranscoderCreateDto
     */
    videoCodecId: number;
}


/**
 * @export
 */
export const TranscoderCreateDtoVEnum = {
    _1: '1',
    _2: '2',
    _3: '3'
} as const;
export type TranscoderCreateDtoVEnum = typeof TranscoderCreateDtoVEnum[keyof typeof TranscoderCreateDtoVEnum];

/**
 * @export
 */
export const TranscoderCreateDtoLanguageEnum = {
    ru: 'ru',
    en: 'en',
    cn: 'cn'
} as const;
export type TranscoderCreateDtoLanguageEnum = typeof TranscoderCreateDtoLanguageEnum[keyof typeof TranscoderCreateDtoLanguageEnum];


/**
 * Check if a given object implements the TranscoderCreateDto interface.
 */
export function instanceOfTranscoderCreateDto(value: object): value is TranscoderCreateDto {
    if (!('v' in value) || value['v'] === undefined) return false;
    if (!('language' in value) || value['language'] === undefined) return false;
    if (!('project_id' in value) || value['project_id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('videoCodecId' in value) || value['videoCodecId'] === undefined) return false;
    return true;
}

export function TranscoderCreateDtoFromJSON(json: any): TranscoderCreateDto {
    return TranscoderCreateDtoFromJSONTyped(json, false);
}

export function TranscoderCreateDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): TranscoderCreateDto {
    if (json == null) {
        return json;
    }
    return {
        
        'v': json['v'],
        'language': json['language'],
        'project_id': json['project_id'],
        'width': json['width'] == null ? undefined : json['width'],
        'height': json['height'] == null ? undefined : json['height'],
        'fps': json['fps'] == null ? undefined : json['fps'],
        'vBitrate': json['vBitrate'] == null ? undefined : json['vBitrate'],
        'aBitrate': json['aBitrate'] == null ? undefined : json['aBitrate'],
        'name': json['name'],
        'rotation': json['rotation'] == null ? undefined : json['rotation'],
        'bFrames': json['bFrames'] == null ? undefined : json['bFrames'],
        'channelIds': json['channelIds'] == null ? undefined : json['channelIds'],
        'videoCodecId': json['videoCodecId'],
    };
}

export function TranscoderCreateDtoToJSON(json: any): TranscoderCreateDto {
    return TranscoderCreateDtoToJSONTyped(json, false);
}

export function TranscoderCreateDtoToJSONTyped(value?: TranscoderCreateDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'v': value['v'],
        'language': value['language'],
        'project_id': value['project_id'],
        'width': value['width'],
        'height': value['height'],
        'fps': value['fps'],
        'vBitrate': value['vBitrate'],
        'aBitrate': value['aBitrate'],
        'name': value['name'],
        'rotation': value['rotation'],
        'bFrames': value['bFrames'],
        'channelIds': value['channelIds'],
        'videoCodecId': value['videoCodecId'],
    };
}

