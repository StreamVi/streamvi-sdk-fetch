/* tslint:disable */
/* eslint-disable */
/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SiteUpdateOptionsYoutubeRequest
 */
export interface SiteUpdateOptionsYoutubeRequest {
    /**
     * Version
     * @type {string}
     * @memberof SiteUpdateOptionsYoutubeRequest
     */
    v: SiteUpdateOptionsYoutubeRequestVEnum;
    /**
     * Current language
     * @type {string}
     * @memberof SiteUpdateOptionsYoutubeRequest
     */
    language: SiteUpdateOptionsYoutubeRequestLanguageEnum;
    /**
     * Project id
     * @type {number}
     * @memberof SiteUpdateOptionsYoutubeRequest
     */
    project_id: number;
    /**
     * Channel id
     * @type {number}
     * @memberof SiteUpdateOptionsYoutubeRequest
     */
    channel_id: number;
    /**
     * 
     * @type {string}
     * @memberof SiteUpdateOptionsYoutubeRequest
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof SiteUpdateOptionsYoutubeRequest
     */
    description: string;
    /**
     * category id
     * @type {string}
     * @memberof SiteUpdateOptionsYoutubeRequest
     */
    category_id?: string;
    /**
     * category name
     * @type {string}
     * @memberof SiteUpdateOptionsYoutubeRequest
     */
    category_name?: string;
    /**
     * playlist id
     * @type {string}
     * @memberof SiteUpdateOptionsYoutubeRequest
     */
    playlist_id?: string;
    /**
     * 
     * @type {string}
     * @memberof SiteUpdateOptionsYoutubeRequest
     */
    audience?: SiteUpdateOptionsYoutubeRequestAudienceEnum;
    /**
     * 
     * @type {string}
     * @memberof SiteUpdateOptionsYoutubeRequest
     */
    latency?: SiteUpdateOptionsYoutubeRequestLatencyEnum;
    /**
     * 
     * @type {string}
     * @memberof SiteUpdateOptionsYoutubeRequest
     */
    privacy_video?: SiteUpdateOptionsYoutubeRequestPrivacyVideoEnum;
    /**
     * 
     * @type {string}
     * @memberof SiteUpdateOptionsYoutubeRequest
     */
    image?: string;
    /**
     * 
     * @type {string}
     * @memberof SiteUpdateOptionsYoutubeRequest
     */
    lang?: SiteUpdateOptionsYoutubeRequestLangEnum;
    /**
     * 
     * @type {Set<string>}
     * @memberof SiteUpdateOptionsYoutubeRequest
     */
    tags?: Set<string>;
}


/**
 * @export
 */
export const SiteUpdateOptionsYoutubeRequestVEnum = {
    _1: '1',
    _2: '2',
    _3: '3'
} as const;
export type SiteUpdateOptionsYoutubeRequestVEnum = typeof SiteUpdateOptionsYoutubeRequestVEnum[keyof typeof SiteUpdateOptionsYoutubeRequestVEnum];

/**
 * @export
 */
export const SiteUpdateOptionsYoutubeRequestLanguageEnum = {
    ru: 'ru',
    en: 'en',
    cn: 'cn'
} as const;
export type SiteUpdateOptionsYoutubeRequestLanguageEnum = typeof SiteUpdateOptionsYoutubeRequestLanguageEnum[keyof typeof SiteUpdateOptionsYoutubeRequestLanguageEnum];

/**
 * @export
 */
export const SiteUpdateOptionsYoutubeRequestAudienceEnum = {
    mark_for_kids: 'mark_for_kids',
    mark_for_nokids: 'mark_for_nokids'
} as const;
export type SiteUpdateOptionsYoutubeRequestAudienceEnum = typeof SiteUpdateOptionsYoutubeRequestAudienceEnum[keyof typeof SiteUpdateOptionsYoutubeRequestAudienceEnum];

/**
 * @export
 */
export const SiteUpdateOptionsYoutubeRequestLatencyEnum = {
    normal: 'normal',
    low: 'low',
    ultraLow: 'ultraLow'
} as const;
export type SiteUpdateOptionsYoutubeRequestLatencyEnum = typeof SiteUpdateOptionsYoutubeRequestLatencyEnum[keyof typeof SiteUpdateOptionsYoutubeRequestLatencyEnum];

/**
 * @export
 */
export const SiteUpdateOptionsYoutubeRequestPrivacyVideoEnum = {
    private: 'private',
    public: 'public',
    unlisted: 'unlisted'
} as const;
export type SiteUpdateOptionsYoutubeRequestPrivacyVideoEnum = typeof SiteUpdateOptionsYoutubeRequestPrivacyVideoEnum[keyof typeof SiteUpdateOptionsYoutubeRequestPrivacyVideoEnum];

/**
 * @export
 */
export const SiteUpdateOptionsYoutubeRequestLangEnum = {
    ru: 'ru',
    en: 'en'
} as const;
export type SiteUpdateOptionsYoutubeRequestLangEnum = typeof SiteUpdateOptionsYoutubeRequestLangEnum[keyof typeof SiteUpdateOptionsYoutubeRequestLangEnum];


/**
 * Check if a given object implements the SiteUpdateOptionsYoutubeRequest interface.
 */
export function instanceOfSiteUpdateOptionsYoutubeRequest(value: object): value is SiteUpdateOptionsYoutubeRequest {
    if (!('v' in value) || value['v'] === undefined) return false;
    if (!('language' in value) || value['language'] === undefined) return false;
    if (!('project_id' in value) || value['project_id'] === undefined) return false;
    if (!('channel_id' in value) || value['channel_id'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    return true;
}

export function SiteUpdateOptionsYoutubeRequestFromJSON(json: any): SiteUpdateOptionsYoutubeRequest {
    return SiteUpdateOptionsYoutubeRequestFromJSONTyped(json, false);
}

export function SiteUpdateOptionsYoutubeRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): SiteUpdateOptionsYoutubeRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'v': json['v'],
        'language': json['language'],
        'project_id': json['project_id'],
        'channel_id': json['channel_id'],
        'title': json['title'],
        'description': json['description'],
        'category_id': json['category_id'] == null ? undefined : json['category_id'],
        'category_name': json['category_name'] == null ? undefined : json['category_name'],
        'playlist_id': json['playlist_id'] == null ? undefined : json['playlist_id'],
        'audience': json['audience'] == null ? undefined : json['audience'],
        'latency': json['latency'] == null ? undefined : json['latency'],
        'privacy_video': json['privacy_video'] == null ? undefined : json['privacy_video'],
        'image': json['image'] == null ? undefined : json['image'],
        'lang': json['lang'] == null ? undefined : json['lang'],
        'tags': json['tags'] == null ? undefined : new Set(json['tags']),
    };
}

export function SiteUpdateOptionsYoutubeRequestToJSON(json: any): SiteUpdateOptionsYoutubeRequest {
    return SiteUpdateOptionsYoutubeRequestToJSONTyped(json, false);
}

export function SiteUpdateOptionsYoutubeRequestToJSONTyped(value?: SiteUpdateOptionsYoutubeRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'v': value['v'],
        'language': value['language'],
        'project_id': value['project_id'],
        'channel_id': value['channel_id'],
        'title': value['title'],
        'description': value['description'],
        'category_id': value['category_id'],
        'category_name': value['category_name'],
        'playlist_id': value['playlist_id'],
        'audience': value['audience'],
        'latency': value['latency'],
        'privacy_video': value['privacy_video'],
        'image': value['image'],
        'lang': value['lang'],
        'tags': value['tags'] == null ? undefined : Array.from(value['tags'] as Set<any>),
    };
}

