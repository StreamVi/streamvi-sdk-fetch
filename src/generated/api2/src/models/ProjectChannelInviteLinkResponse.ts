/* tslint:disable */
/* eslint-disable */
/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ProjectChannelInviteChannelLinkResponse } from './ProjectChannelInviteChannelLinkResponse';
import {
    ProjectChannelInviteChannelLinkResponseFromJSON,
    ProjectChannelInviteChannelLinkResponseFromJSONTyped,
    ProjectChannelInviteChannelLinkResponseToJSON,
    ProjectChannelInviteChannelLinkResponseToJSONTyped,
} from './ProjectChannelInviteChannelLinkResponse';

/**
 * 
 * @export
 * @interface ProjectChannelInviteLinkResponse
 */
export interface ProjectChannelInviteLinkResponse {
    /**
     * Unique id
     * @type {number}
     * @memberof ProjectChannelInviteLinkResponse
     */
    project_channel_invite_id: number;
    /**
     * Channel id
     * @type {number}
     * @memberof ProjectChannelInviteLinkResponse
     */
    channel_id: number;
    /**
     * Project id (in invite for project id)
     * @type {number}
     * @memberof ProjectChannelInviteLinkResponse
     */
    to_project_id: number | null;
    /**
     * Access type
     * @type {number}
     * @memberof ProjectChannelInviteLinkResponse
     */
    access_type: number;
    /**
     * Date create
     * @type {Date}
     * @memberof ProjectChannelInviteLinkResponse
     */
    date: Date;
    /**
     * Secret key for link
     * @type {string}
     * @memberof ProjectChannelInviteLinkResponse
     */
    secret: string;
    /**
     * Email
     * @type {string}
     * @memberof ProjectChannelInviteLinkResponse
     */
    email: string | null;
    /**
     * If rejected then true
     * @type {boolean}
     * @memberof ProjectChannelInviteLinkResponse
     */
    reject: boolean | null;
    /**
     * The user who granted access
     * @type {number}
     * @memberof ProjectChannelInviteLinkResponse
     */
    from_user_id: number | null;
    /**
     * Project info
     * @type {ProjectChannelInviteChannelLinkResponse}
     * @memberof ProjectChannelInviteLinkResponse
     */
    channel_?: ProjectChannelInviteChannelLinkResponse;
}

/**
 * Check if a given object implements the ProjectChannelInviteLinkResponse interface.
 */
export function instanceOfProjectChannelInviteLinkResponse(value: object): value is ProjectChannelInviteLinkResponse {
    if (!('project_channel_invite_id' in value) || value['project_channel_invite_id'] === undefined) return false;
    if (!('channel_id' in value) || value['channel_id'] === undefined) return false;
    if (!('to_project_id' in value) || value['to_project_id'] === undefined) return false;
    if (!('access_type' in value) || value['access_type'] === undefined) return false;
    if (!('date' in value) || value['date'] === undefined) return false;
    if (!('secret' in value) || value['secret'] === undefined) return false;
    if (!('email' in value) || value['email'] === undefined) return false;
    if (!('reject' in value) || value['reject'] === undefined) return false;
    if (!('from_user_id' in value) || value['from_user_id'] === undefined) return false;
    return true;
}

export function ProjectChannelInviteLinkResponseFromJSON(json: any): ProjectChannelInviteLinkResponse {
    return ProjectChannelInviteLinkResponseFromJSONTyped(json, false);
}

export function ProjectChannelInviteLinkResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProjectChannelInviteLinkResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'project_channel_invite_id': json['project_channel_invite_id'],
        'channel_id': json['channel_id'],
        'to_project_id': json['to_project_id'],
        'access_type': json['access_type'],
        'date': (new Date(json['date'])),
        'secret': json['secret'],
        'email': json['email'],
        'reject': json['reject'],
        'from_user_id': json['from_user_id'],
        'channel_': json['channel_'] == null ? undefined : ProjectChannelInviteChannelLinkResponseFromJSON(json['channel_']),
    };
}

export function ProjectChannelInviteLinkResponseToJSON(json: any): ProjectChannelInviteLinkResponse {
    return ProjectChannelInviteLinkResponseToJSONTyped(json, false);
}

export function ProjectChannelInviteLinkResponseToJSONTyped(value?: ProjectChannelInviteLinkResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'project_channel_invite_id': value['project_channel_invite_id'],
        'channel_id': value['channel_id'],
        'to_project_id': value['to_project_id'],
        'access_type': value['access_type'],
        'date': ((value['date']).toISOString()),
        'secret': value['secret'],
        'email': value['email'],
        'reject': value['reject'],
        'from_user_id': value['from_user_id'],
        'channel_': ProjectChannelInviteChannelLinkResponseToJSON(value['channel_']),
    };
}

