/* tslint:disable */
/* eslint-disable */
/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PlanTranscodingDiscountResponse } from './PlanTranscodingDiscountResponse';
import {
    PlanTranscodingDiscountResponseFromJSON,
    PlanTranscodingDiscountResponseFromJSONTyped,
    PlanTranscodingDiscountResponseToJSON,
    PlanTranscodingDiscountResponseToJSONTyped,
} from './PlanTranscodingDiscountResponse';

/**
 * 
 * @export
 * @interface PlanTranscodingResponse
 */
export interface PlanTranscodingResponse {
    /**
     * Unique id
     * @type {number}
     * @memberof PlanTranscodingResponse
     */
    plan_transcoding_id: number;
    /**
     * Title
     * @type {string}
     * @memberof PlanTranscodingResponse
     */
    title: string;
    /**
     * Type
     * @type {string}
     * @memberof PlanTranscodingResponse
     */
    type: PlanTranscodingResponseTypeEnum;
    /**
     * Price (RUB)
     * @type {number}
     * @memberof PlanTranscodingResponse
     */
    price_rub: number;
    /**
     * Price (USD)
     * @type {number}
     * @memberof PlanTranscodingResponse
     */
    price_usd: number;
    /**
     * Maximum resolution
     * @type {string}
     * @memberof PlanTranscodingResponse
     */
    resolution: PlanTranscodingResponseResolutionEnum | null;
    /**
     * Maximum fps
     * @type {string}
     * @memberof PlanTranscodingResponse
     */
    fps: PlanTranscodingResponseFpsEnum;
    /**
     * Server load weight
     * @type {number}
     * @memberof PlanTranscodingResponse
     */
    weight: number;
    /**
     * Active
     * @type {boolean}
     * @memberof PlanTranscodingResponse
     */
    active: boolean;
    /**
     * Field for sort
     * @type {number}
     * @memberof PlanTranscodingResponse
     */
    index: number;
    /**
     * Free spaces slot
     * @type {number}
     * @memberof PlanTranscodingResponse
     */
    space: number;
    /**
     * Discount
     * @type {PlanTranscodingDiscountResponse}
     * @memberof PlanTranscodingResponse
     */
    discount: PlanTranscodingDiscountResponse;
}


/**
 * @export
 */
export const PlanTranscodingResponseTypeEnum = {
    free: 'free',
    paid_month: 'paid_month',
    paid_minute: 'paid_minute',
    custom: 'custom'
} as const;
export type PlanTranscodingResponseTypeEnum = typeof PlanTranscodingResponseTypeEnum[keyof typeof PlanTranscodingResponseTypeEnum];

/**
 * @export
 */
export const PlanTranscodingResponseResolutionEnum = {
    _720p: '720p',
    _1080p: '1080p',
    _2K: '2K',
    UW: 'UW',
    _4K: '4K',
    _8K: '8K'
} as const;
export type PlanTranscodingResponseResolutionEnum = typeof PlanTranscodingResponseResolutionEnum[keyof typeof PlanTranscodingResponseResolutionEnum];

/**
 * @export
 */
export const PlanTranscodingResponseFpsEnum = {
    _30: '30',
    _60: '60'
} as const;
export type PlanTranscodingResponseFpsEnum = typeof PlanTranscodingResponseFpsEnum[keyof typeof PlanTranscodingResponseFpsEnum];


/**
 * Check if a given object implements the PlanTranscodingResponse interface.
 */
export function instanceOfPlanTranscodingResponse(value: object): value is PlanTranscodingResponse {
    if (!('plan_transcoding_id' in value) || value['plan_transcoding_id'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('price_rub' in value) || value['price_rub'] === undefined) return false;
    if (!('price_usd' in value) || value['price_usd'] === undefined) return false;
    if (!('resolution' in value) || value['resolution'] === undefined) return false;
    if (!('fps' in value) || value['fps'] === undefined) return false;
    if (!('weight' in value) || value['weight'] === undefined) return false;
    if (!('active' in value) || value['active'] === undefined) return false;
    if (!('index' in value) || value['index'] === undefined) return false;
    if (!('space' in value) || value['space'] === undefined) return false;
    if (!('discount' in value) || value['discount'] === undefined) return false;
    return true;
}

export function PlanTranscodingResponseFromJSON(json: any): PlanTranscodingResponse {
    return PlanTranscodingResponseFromJSONTyped(json, false);
}

export function PlanTranscodingResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): PlanTranscodingResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'plan_transcoding_id': json['plan_transcoding_id'],
        'title': json['title'],
        'type': json['type'],
        'price_rub': json['price_rub'],
        'price_usd': json['price_usd'],
        'resolution': json['resolution'],
        'fps': json['fps'],
        'weight': json['weight'],
        'active': json['active'],
        'index': json['index'],
        'space': json['space'],
        'discount': PlanTranscodingDiscountResponseFromJSON(json['discount']),
    };
}

export function PlanTranscodingResponseToJSON(json: any): PlanTranscodingResponse {
    return PlanTranscodingResponseToJSONTyped(json, false);
}

export function PlanTranscodingResponseToJSONTyped(value?: PlanTranscodingResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'plan_transcoding_id': value['plan_transcoding_id'],
        'title': value['title'],
        'type': value['type'],
        'price_rub': value['price_rub'],
        'price_usd': value['price_usd'],
        'resolution': value['resolution'],
        'fps': value['fps'],
        'weight': value['weight'],
        'active': value['active'],
        'index': value['index'],
        'space': value['space'],
        'discount': PlanTranscodingDiscountResponseToJSON(value['discount']),
    };
}

