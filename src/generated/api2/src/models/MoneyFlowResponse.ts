/* tslint:disable */
/* eslint-disable */
/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MoneyFlowDetails } from './MoneyFlowDetails';
import {
    MoneyFlowDetailsFromJSON,
    MoneyFlowDetailsFromJSONTyped,
    MoneyFlowDetailsToJSON,
    MoneyFlowDetailsToJSONTyped,
} from './MoneyFlowDetails';

/**
 * 
 * @export
 * @interface MoneyFlowResponse
 */
export interface MoneyFlowResponse {
    /**
     * id
     * @type {number}
     * @memberof MoneyFlowResponse
     */
    money_flow_id: number;
    /**
     * Amount
     * @type {number}
     * @memberof MoneyFlowResponse
     */
    amount: number;
    /**
     * Currency
     * @type {string}
     * @memberof MoneyFlowResponse
     */
    currency: MoneyFlowResponseCurrencyEnum | null;
    /**
     * Date
     * @type {Date}
     * @memberof MoneyFlowResponse
     */
    date: Date;
    /**
     * Type
     * @type {string}
     * @memberof MoneyFlowResponse
     */
    type: MoneyFlowResponseTypeEnum;
    /**
     * Current balance before transaction
     * @type {number}
     * @memberof MoneyFlowResponse
     */
    balance: number;
    /**
     * Details
     * @type {MoneyFlowDetails}
     * @memberof MoneyFlowResponse
     */
    details: MoneyFlowDetails | null;
}


/**
 * @export
 */
export const MoneyFlowResponseCurrencyEnum = {
    rub: 'rub',
    usd: 'usd'
} as const;
export type MoneyFlowResponseCurrencyEnum = typeof MoneyFlowResponseCurrencyEnum[keyof typeof MoneyFlowResponseCurrencyEnum];

/**
 * @export
 */
export const MoneyFlowResponseTypeEnum = {
    registration_bonus: 'registration_bonus',
    plan_restream_buy: 'plan_restream_buy',
    plan_transcoding_buy: 'plan_transcoding_buy',
    plan_storage_buy: 'plan_storage_buy',
    channel_story_buy: 'channel_story_buy',
    channel_shop_sell: 'channel_shop_sell',
    referral_profit: 'referral_profit',
    payment: 'payment',
    payment_cancel: 'payment_cancel',
    payout: 'payout',
    payout_cancel: 'payout_cancel',
    refund: 'refund',
    conversion: 'conversion',
    withdrawal: 'withdrawal',
    transferred_of_old_site: 'transferred_of_old_site',
    accrued_admin: 'accrued_admin',
    reduced_admin: 'reduced_admin',
    promo_topup_1: 'promo_topup_1',
    promo_topup_2: 'promo_topup_2',
    promo_create_plan_restream_1: 'promo_create_plan_restream_1',
    promo_create_plan_restream_2: 'promo_create_plan_restream_2'
} as const;
export type MoneyFlowResponseTypeEnum = typeof MoneyFlowResponseTypeEnum[keyof typeof MoneyFlowResponseTypeEnum];


/**
 * Check if a given object implements the MoneyFlowResponse interface.
 */
export function instanceOfMoneyFlowResponse(value: object): value is MoneyFlowResponse {
    if (!('money_flow_id' in value) || value['money_flow_id'] === undefined) return false;
    if (!('amount' in value) || value['amount'] === undefined) return false;
    if (!('currency' in value) || value['currency'] === undefined) return false;
    if (!('date' in value) || value['date'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('balance' in value) || value['balance'] === undefined) return false;
    if (!('details' in value) || value['details'] === undefined) return false;
    return true;
}

export function MoneyFlowResponseFromJSON(json: any): MoneyFlowResponse {
    return MoneyFlowResponseFromJSONTyped(json, false);
}

export function MoneyFlowResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): MoneyFlowResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'money_flow_id': json['money_flow_id'],
        'amount': json['amount'],
        'currency': json['currency'],
        'date': (new Date(json['date'])),
        'type': json['type'],
        'balance': json['balance'],
        'details': MoneyFlowDetailsFromJSON(json['details']),
    };
}

export function MoneyFlowResponseToJSON(json: any): MoneyFlowResponse {
    return MoneyFlowResponseToJSONTyped(json, false);
}

export function MoneyFlowResponseToJSONTyped(value?: MoneyFlowResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'money_flow_id': value['money_flow_id'],
        'amount': value['amount'],
        'currency': value['currency'],
        'date': ((value['date']).toISOString()),
        'type': value['type'],
        'balance': value['balance'],
        'details': MoneyFlowDetailsToJSON(value['details']),
    };
}

