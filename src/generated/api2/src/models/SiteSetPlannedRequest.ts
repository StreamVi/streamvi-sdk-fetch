/* tslint:disable */
/* eslint-disable */
/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SiteSetPlannedRequest
 */
export interface SiteSetPlannedRequest {
    /**
     * Version
     * @type {string}
     * @memberof SiteSetPlannedRequest
     */
    v: SiteSetPlannedRequestVEnum;
    /**
     * Current language
     * @type {string}
     * @memberof SiteSetPlannedRequest
     */
    language: SiteSetPlannedRequestLanguageEnum;
    /**
     * Project id
     * @type {number}
     * @memberof SiteSetPlannedRequest
     */
    project_id: number;
    /**
     * Channel id
     * @type {number}
     * @memberof SiteSetPlannedRequest
     */
    channel_id: number;
    /**
     * 
     * @type {string}
     * @memberof SiteSetPlannedRequest
     */
    id?: string;
}


/**
 * @export
 */
export const SiteSetPlannedRequestVEnum = {
    _1: '1',
    _2: '2',
    _3: '3'
} as const;
export type SiteSetPlannedRequestVEnum = typeof SiteSetPlannedRequestVEnum[keyof typeof SiteSetPlannedRequestVEnum];

/**
 * @export
 */
export const SiteSetPlannedRequestLanguageEnum = {
    ru: 'ru',
    en: 'en',
    cn: 'cn'
} as const;
export type SiteSetPlannedRequestLanguageEnum = typeof SiteSetPlannedRequestLanguageEnum[keyof typeof SiteSetPlannedRequestLanguageEnum];


/**
 * Check if a given object implements the SiteSetPlannedRequest interface.
 */
export function instanceOfSiteSetPlannedRequest(value: object): value is SiteSetPlannedRequest {
    if (!('v' in value) || value['v'] === undefined) return false;
    if (!('language' in value) || value['language'] === undefined) return false;
    if (!('project_id' in value) || value['project_id'] === undefined) return false;
    if (!('channel_id' in value) || value['channel_id'] === undefined) return false;
    return true;
}

export function SiteSetPlannedRequestFromJSON(json: any): SiteSetPlannedRequest {
    return SiteSetPlannedRequestFromJSONTyped(json, false);
}

export function SiteSetPlannedRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): SiteSetPlannedRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'v': json['v'],
        'language': json['language'],
        'project_id': json['project_id'],
        'channel_id': json['channel_id'],
        'id': json['id'] == null ? undefined : json['id'],
    };
}

export function SiteSetPlannedRequestToJSON(json: any): SiteSetPlannedRequest {
    return SiteSetPlannedRequestToJSONTyped(json, false);
}

export function SiteSetPlannedRequestToJSONTyped(value?: SiteSetPlannedRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'v': value['v'],
        'language': value['language'],
        'project_id': value['project_id'],
        'channel_id': value['channel_id'],
        'id': value['id'],
    };
}

