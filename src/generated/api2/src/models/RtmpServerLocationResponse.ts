/* tslint:disable */
/* eslint-disable */
/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface RtmpServerLocationResponse
 */
export interface RtmpServerLocationResponse {
    /**
     * Location name
     * @type {string}
     * @memberof RtmpServerLocationResponse
     */
    name: string;
    /**
     * Host
     * @type {string}
     * @memberof RtmpServerLocationResponse
     */
    host: string;
    /**
     * Url for connect
     * @type {string}
     * @memberof RtmpServerLocationResponse
     */
    url: string;
}

/**
 * Check if a given object implements the RtmpServerLocationResponse interface.
 */
export function instanceOfRtmpServerLocationResponse(value: object): value is RtmpServerLocationResponse {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('host' in value) || value['host'] === undefined) return false;
    if (!('url' in value) || value['url'] === undefined) return false;
    return true;
}

export function RtmpServerLocationResponseFromJSON(json: any): RtmpServerLocationResponse {
    return RtmpServerLocationResponseFromJSONTyped(json, false);
}

export function RtmpServerLocationResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): RtmpServerLocationResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'host': json['host'],
        'url': json['url'],
    };
}

export function RtmpServerLocationResponseToJSON(json: any): RtmpServerLocationResponse {
    return RtmpServerLocationResponseToJSONTyped(json, false);
}

export function RtmpServerLocationResponseToJSONTyped(value?: RtmpServerLocationResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'host': value['host'],
        'url': value['url'],
    };
}

