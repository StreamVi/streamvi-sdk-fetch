/* tslint:disable */
/* eslint-disable */
/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ErrorResponse,
  GetVersionAppResponse,
} from '../models/index';
import {
    ErrorResponseFromJSON,
    ErrorResponseToJSON,
    GetVersionAppResponseFromJSON,
    GetVersionAppResponseToJSON,
} from '../models/index';

export interface ReleaseAppCabinetV1Request {
    language: ReleaseAppCabinetV1LanguageEnum;
    v?: ReleaseAppCabinetV1VEnum;
    app?: ReleaseAppCabinetV1AppEnum;
}

/**
 * ReleaseApi - interface
 * 
 * @export
 * @interface ReleaseApiInterface
 */
export interface ReleaseApiInterface {
    /**
     * 
     * @summary Get current version app
     * @param {'ru' | 'en' | 'cn'} language Current language
     * @param {'1' | '2' | '3'} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {'cabinet'} [app] Apps
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ReleaseApiInterface
     */
    releaseAppCabinetV1Raw(requestParameters: ReleaseAppCabinetV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetVersionAppResponse>>;

    /**
     * Get current version app
     */
    releaseAppCabinetV1(requestParameters: ReleaseAppCabinetV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetVersionAppResponse>;

}

/**
 * 
 */
export class ReleaseApi extends runtime.BaseAPI implements ReleaseApiInterface {

    /**
     * Get current version app
     */
    async releaseAppCabinetV1Raw(requestParameters: ReleaseAppCabinetV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetVersionAppResponse>> {
        if (requestParameters['language'] == null) {
            throw new runtime.RequiredError(
                'language',
                'Required parameter "language" was null or undefined when calling releaseAppCabinetV1().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['v'] != null) {
            queryParameters['v'] = requestParameters['v'];
        } else {
            queryParameters['v'] = '1';
        }

        if (requestParameters['language'] != null) {
            queryParameters['language'] = requestParameters['language'];
        }

        if (requestParameters['app'] != null) {
            queryParameters['app'] = requestParameters['app'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/method/release-app`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GetVersionAppResponseFromJSON(jsonValue));
    }

    /**
     * Get current version app
     */
    async releaseAppCabinetV1(requestParameters: ReleaseAppCabinetV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetVersionAppResponse> {
        const response = await this.releaseAppCabinetV1Raw(requestParameters, initOverrides);
        return await response.value();
    }

}

/**
 * @export
 */
export const ReleaseAppCabinetV1LanguageEnum = {
    ru: 'ru',
    en: 'en',
    cn: 'cn'
} as const;
export type ReleaseAppCabinetV1LanguageEnum = typeof ReleaseAppCabinetV1LanguageEnum[keyof typeof ReleaseAppCabinetV1LanguageEnum];
/**
 * @export
 */
export const ReleaseAppCabinetV1VEnum = {
    _1: '1',
    _2: '2',
    _3: '3'
} as const;
export type ReleaseAppCabinetV1VEnum = typeof ReleaseAppCabinetV1VEnum[keyof typeof ReleaseAppCabinetV1VEnum];
/**
 * @export
 */
export const ReleaseAppCabinetV1AppEnum = {
    cabinet: 'cabinet'
} as const;
export type ReleaseAppCabinetV1AppEnum = typeof ReleaseAppCabinetV1AppEnum[keyof typeof ReleaseAppCabinetV1AppEnum];
