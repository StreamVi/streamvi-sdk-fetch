/* tslint:disable */
/* eslint-disable */
/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ErrorResponse,
  SitePromoApplyResponse,
  SitePromoCheckResponse,
} from '../models/index';
import {
    ErrorResponseFromJSON,
    ErrorResponseToJSON,
    SitePromoApplyResponseFromJSON,
    SitePromoApplyResponseToJSON,
    SitePromoCheckResponseFromJSON,
    SitePromoCheckResponseToJSON,
} from '../models/index';

export interface PromoApplyV1Request {
    language: PromoApplyV1LanguageEnum;
    project_id: number;
    code: number;
    v?: PromoApplyV1VEnum;
}

export interface PromoCheckV1Request {
    language: PromoCheckV1LanguageEnum;
    project_id: number;
    code: number;
    v?: PromoCheckV1VEnum;
}

/**
 * PromoApi - interface
 * 
 * @export
 * @interface PromoApiInterface
 */
export interface PromoApiInterface {
    /**
     * 
     * @summary Apply code
     * @param {'ru' | 'en' | 'cn'} language Current language
     * @param {number} project_id Project id
     * @param {number} code Code
     * @param {'1' | '2' | '3'} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PromoApiInterface
     */
    promoApplyV1Raw(requestParameters: PromoApplyV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SitePromoApplyResponse>>;

    /**
     * Apply code
     */
    promoApplyV1(requestParameters: PromoApplyV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SitePromoApplyResponse>;

    /**
     * 
     * @summary Check code
     * @param {'ru' | 'en' | 'cn'} language Current language
     * @param {number} project_id Project id
     * @param {number} code Code
     * @param {'1' | '2' | '3'} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PromoApiInterface
     */
    promoCheckV1Raw(requestParameters: PromoCheckV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SitePromoCheckResponse>>;

    /**
     * Check code
     */
    promoCheckV1(requestParameters: PromoCheckV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SitePromoCheckResponse>;

}

/**
 * 
 */
export class PromoApi extends runtime.BaseAPI implements PromoApiInterface {

    /**
     * Apply code
     */
    async promoApplyV1Raw(requestParameters: PromoApplyV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SitePromoApplyResponse>> {
        if (requestParameters['language'] == null) {
            throw new runtime.RequiredError(
                'language',
                'Required parameter "language" was null or undefined when calling promoApplyV1().'
            );
        }

        if (requestParameters['project_id'] == null) {
            throw new runtime.RequiredError(
                'project_id',
                'Required parameter "project_id" was null or undefined when calling promoApplyV1().'
            );
        }

        if (requestParameters['code'] == null) {
            throw new runtime.RequiredError(
                'code',
                'Required parameter "code" was null or undefined when calling promoApplyV1().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['v'] != null) {
            queryParameters['v'] = requestParameters['v'];
        } else {
            queryParameters['v'] = '1';
        }

        if (requestParameters['language'] != null) {
            queryParameters['language'] = requestParameters['language'];
        }

        if (requestParameters['project_id'] != null) {
            queryParameters['project_id'] = requestParameters['project_id'];
        }

        if (requestParameters['code'] != null) {
            queryParameters['code'] = requestParameters['code'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/method/promo/apply`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => SitePromoApplyResponseFromJSON(jsonValue));
    }

    /**
     * Apply code
     */
    async promoApplyV1(requestParameters: PromoApplyV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SitePromoApplyResponse> {
        const response = await this.promoApplyV1Raw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Check code
     */
    async promoCheckV1Raw(requestParameters: PromoCheckV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SitePromoCheckResponse>> {
        if (requestParameters['language'] == null) {
            throw new runtime.RequiredError(
                'language',
                'Required parameter "language" was null or undefined when calling promoCheckV1().'
            );
        }

        if (requestParameters['project_id'] == null) {
            throw new runtime.RequiredError(
                'project_id',
                'Required parameter "project_id" was null or undefined when calling promoCheckV1().'
            );
        }

        if (requestParameters['code'] == null) {
            throw new runtime.RequiredError(
                'code',
                'Required parameter "code" was null or undefined when calling promoCheckV1().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['v'] != null) {
            queryParameters['v'] = requestParameters['v'];
        } else {
            queryParameters['v'] = '1';
        }

        if (requestParameters['language'] != null) {
            queryParameters['language'] = requestParameters['language'];
        }

        if (requestParameters['project_id'] != null) {
            queryParameters['project_id'] = requestParameters['project_id'];
        }

        if (requestParameters['code'] != null) {
            queryParameters['code'] = requestParameters['code'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/method/promo/check`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => SitePromoCheckResponseFromJSON(jsonValue));
    }

    /**
     * Check code
     */
    async promoCheckV1(requestParameters: PromoCheckV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SitePromoCheckResponse> {
        const response = await this.promoCheckV1Raw(requestParameters, initOverrides);
        return await response.value();
    }

}

/**
 * @export
 */
export const PromoApplyV1LanguageEnum = {
    ru: 'ru',
    en: 'en',
    cn: 'cn'
} as const;
export type PromoApplyV1LanguageEnum = typeof PromoApplyV1LanguageEnum[keyof typeof PromoApplyV1LanguageEnum];
/**
 * @export
 */
export const PromoApplyV1VEnum = {
    _1: '1',
    _2: '2',
    _3: '3'
} as const;
export type PromoApplyV1VEnum = typeof PromoApplyV1VEnum[keyof typeof PromoApplyV1VEnum];
/**
 * @export
 */
export const PromoCheckV1LanguageEnum = {
    ru: 'ru',
    en: 'en',
    cn: 'cn'
} as const;
export type PromoCheckV1LanguageEnum = typeof PromoCheckV1LanguageEnum[keyof typeof PromoCheckV1LanguageEnum];
/**
 * @export
 */
export const PromoCheckV1VEnum = {
    _1: '1',
    _2: '2',
    _3: '3'
} as const;
export type PromoCheckV1VEnum = typeof PromoCheckV1VEnum[keyof typeof PromoCheckV1VEnum];
