/* tslint:disable */
/* eslint-disable */
/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ErrorResponse,
  MethodProjectLiveStatusResponse,
} from '../models/index';
import {
    ErrorResponseFromJSON,
    ErrorResponseToJSON,
    MethodProjectLiveStatusResponseFromJSON,
    MethodProjectLiveStatusResponseToJSON,
} from '../models/index';

/**
 * ProjectApi - interface
 * 
 * @export
 * @interface ProjectApiInterface
 */
export interface ProjectApiInterface {
    /**
     * 
     * @summary Get live status
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProjectApiInterface
     */
    methodLiveStatusV1Raw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MethodProjectLiveStatusResponse>>;

    /**
     * Get live status
     */
    methodLiveStatusV1(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MethodProjectLiveStatusResponse>;

}

/**
 * 
 */
export class ProjectApi extends runtime.BaseAPI implements ProjectApiInterface {

    /**
     * Get live status
     */
    async methodLiveStatusV1Raw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MethodProjectLiveStatusResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["X-API-KEY"] = await this.configuration.apiKey("X-API-KEY"); // X-API-KEY authentication
        }

        const response = await this.request({
            path: `/method/project/live-status`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => MethodProjectLiveStatusResponseFromJSON(jsonValue));
    }

    /**
     * Get live status
     */
    async methodLiveStatusV1(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MethodProjectLiveStatusResponse> {
        const response = await this.methodLiveStatusV1Raw(initOverrides);
        return await response.value();
    }

}
