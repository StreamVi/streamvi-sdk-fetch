/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { BlogPageSiteResponseId } from './blog-page-site-response-id';
/**
 *
 * @export
 * @interface HelpPageResponse
 */
export interface HelpPageResponse {
    /**
     *
     * @type {BlogPageSiteResponseId}
     * @memberof HelpPageResponse
     */
    '_id': BlogPageSiteResponseId;
    /**
     * url
     * @type {string}
     * @memberof HelpPageResponse
     */
    'url': string;
    /**
     * Generated url from root path
     * @type {string}
     * @memberof HelpPageResponse
     */
    'url_inherit': string;
    /**
     * Notion parent id
     * @type {string}
     * @memberof HelpPageResponse
     */
    'notion_parent_id': string;
    /**
     * Page status
     * @type {string}
     * @memberof HelpPageResponse
     */
    'status': HelpPageResponseStatusEnum;
    /**
     * Date last update
     * @type {string}
     * @memberof HelpPageResponse
     */
    'date_update': string;
    /**
     * Date create
     * @type {string}
     * @memberof HelpPageResponse
     */
    'date_create': string;
    /**
     * Page icon
     * @type {object}
     * @memberof HelpPageResponse
     */
    'icon': object | null;
    /**
     * Subject
     * @type {string}
     * @memberof HelpPageResponse
     */
    'title': string;
    /**
     * Language for indexing
     * @type {string}
     * @memberof HelpPageResponse
     */
    'language': HelpPageResponseLanguageEnum;
    /**
     * Language ISO
     * @type {string}
     * @memberof HelpPageResponse
     */
    'language_iso': HelpPageResponseLanguageIsoEnum;
    /**
     * Text
     * @type {string}
     * @memberof HelpPageResponse
     */
    'text': string;
    /**
     * Alternative language (Array of Language ISO)
     * @type {Array<string>}
     * @memberof HelpPageResponse
     */
    'alt_languages': Array<HelpPageResponseAltLanguagesEnum>;
}
export declare const HelpPageResponseStatusEnum: {
    readonly None: "None";
    readonly Backlog: "Backlog";
    readonly Drafting: "Drafting";
    readonly Reviewing: "Reviewing";
    readonly Done: "Done";
    readonly Published: "Published";
};
export type HelpPageResponseStatusEnum = typeof HelpPageResponseStatusEnum[keyof typeof HelpPageResponseStatusEnum];
export declare const HelpPageResponseLanguageEnum: {
    readonly Russian: "russian";
    readonly English: "english";
    readonly None: "none";
};
export type HelpPageResponseLanguageEnum = typeof HelpPageResponseLanguageEnum[keyof typeof HelpPageResponseLanguageEnum];
export declare const HelpPageResponseLanguageIsoEnum: {
    readonly Ru: "ru";
    readonly En: "en";
    readonly Cn: "cn";
};
export type HelpPageResponseLanguageIsoEnum = typeof HelpPageResponseLanguageIsoEnum[keyof typeof HelpPageResponseLanguageIsoEnum];
export declare const HelpPageResponseAltLanguagesEnum: {
    readonly Ru: "ru";
    readonly En: "en";
    readonly Cn: "cn";
};
export type HelpPageResponseAltLanguagesEnum = typeof HelpPageResponseAltLanguagesEnum[keyof typeof HelpPageResponseAltLanguagesEnum];
//# sourceMappingURL=help-page-response.d.ts.map