"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProjectChannelResponseToJSONTyped = exports.ProjectChannelResponseToJSON = exports.ProjectChannelResponseFromJSONTyped = exports.ProjectChannelResponseFromJSON = exports.instanceOfProjectChannelResponse = void 0;
/**
 * Check if a given object implements the ProjectChannelResponse interface.
 */
function instanceOfProjectChannelResponse(value) {
    if (!('id' in value) || value['id'] === undefined)
        return false;
    if (!('projectId' in value) || value['projectId'] === undefined)
        return false;
    if (!('channelId' in value) || value['channelId'] === undefined)
        return false;
    if (!('ownerId' in value) || value['ownerId'] === undefined)
        return false;
    if (!('usageType' in value) || value['usageType'] === undefined)
        return false;
    return true;
}
exports.instanceOfProjectChannelResponse = instanceOfProjectChannelResponse;
function ProjectChannelResponseFromJSON(json) {
    return ProjectChannelResponseFromJSONTyped(json, false);
}
exports.ProjectChannelResponseFromJSON = ProjectChannelResponseFromJSON;
function ProjectChannelResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'id': json['id'],
        'projectId': json['project_id'],
        'channelId': json['channel_id'],
        'ownerId': json['owner_id'],
        'usageType': json['usageType'],
    };
}
exports.ProjectChannelResponseFromJSONTyped = ProjectChannelResponseFromJSONTyped;
function ProjectChannelResponseToJSON(json) {
    return ProjectChannelResponseToJSONTyped(json, false);
}
exports.ProjectChannelResponseToJSON = ProjectChannelResponseToJSON;
function ProjectChannelResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'id': value['id'],
        'project_id': value['projectId'],
        'channel_id': value['channelId'],
        'owner_id': value['ownerId'],
        'usageType': value['usageType'],
    };
}
exports.ProjectChannelResponseToJSONTyped = ProjectChannelResponseToJSONTyped;
