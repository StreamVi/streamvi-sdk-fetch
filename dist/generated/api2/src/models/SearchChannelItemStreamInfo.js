"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SearchChannelItemStreamInfoToJSONTyped = exports.SearchChannelItemStreamInfoToJSON = exports.SearchChannelItemStreamInfoFromJSONTyped = exports.SearchChannelItemStreamInfoFromJSON = void 0;
const ChannelDefaultInfoDto_1 = require("./ChannelDefaultInfoDto");
const ChannelOkInfoDto_1 = require("./ChannelOkInfoDto");
const ChannelTrovoInfoDto_1 = require("./ChannelTrovoInfoDto");
const ChannelTwitchInfoDto_1 = require("./ChannelTwitchInfoDto");
const ChannelVkInfoDto_1 = require("./ChannelVkInfoDto");
const ChannelYoutubeInfoDto_1 = require("./ChannelYoutubeInfoDto");
function SearchChannelItemStreamInfoFromJSON(json) {
    return SearchChannelItemStreamInfoFromJSONTyped(json, false);
}
exports.SearchChannelItemStreamInfoFromJSON = SearchChannelItemStreamInfoFromJSON;
function SearchChannelItemStreamInfoFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    if (typeof json !== 'object') {
        return json;
    }
    if ((0, ChannelDefaultInfoDto_1.instanceOfChannelDefaultInfoDto)(json)) {
        return (0, ChannelDefaultInfoDto_1.ChannelDefaultInfoDtoFromJSONTyped)(json, true);
    }
    if ((0, ChannelOkInfoDto_1.instanceOfChannelOkInfoDto)(json)) {
        return (0, ChannelOkInfoDto_1.ChannelOkInfoDtoFromJSONTyped)(json, true);
    }
    if ((0, ChannelTrovoInfoDto_1.instanceOfChannelTrovoInfoDto)(json)) {
        return (0, ChannelTrovoInfoDto_1.ChannelTrovoInfoDtoFromJSONTyped)(json, true);
    }
    if ((0, ChannelTwitchInfoDto_1.instanceOfChannelTwitchInfoDto)(json)) {
        return (0, ChannelTwitchInfoDto_1.ChannelTwitchInfoDtoFromJSONTyped)(json, true);
    }
    if ((0, ChannelVkInfoDto_1.instanceOfChannelVkInfoDto)(json)) {
        return (0, ChannelVkInfoDto_1.ChannelVkInfoDtoFromJSONTyped)(json, true);
    }
    if ((0, ChannelYoutubeInfoDto_1.instanceOfChannelYoutubeInfoDto)(json)) {
        return (0, ChannelYoutubeInfoDto_1.ChannelYoutubeInfoDtoFromJSONTyped)(json, true);
    }
    return {};
}
exports.SearchChannelItemStreamInfoFromJSONTyped = SearchChannelItemStreamInfoFromJSONTyped;
function SearchChannelItemStreamInfoToJSON(json) {
    return SearchChannelItemStreamInfoToJSONTyped(json, false);
}
exports.SearchChannelItemStreamInfoToJSON = SearchChannelItemStreamInfoToJSON;
function SearchChannelItemStreamInfoToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    if (typeof value !== 'object') {
        return value;
    }
    if ((0, ChannelDefaultInfoDto_1.instanceOfChannelDefaultInfoDto)(value)) {
        return (0, ChannelDefaultInfoDto_1.ChannelDefaultInfoDtoToJSON)(value);
    }
    if ((0, ChannelOkInfoDto_1.instanceOfChannelOkInfoDto)(value)) {
        return (0, ChannelOkInfoDto_1.ChannelOkInfoDtoToJSON)(value);
    }
    if ((0, ChannelTrovoInfoDto_1.instanceOfChannelTrovoInfoDto)(value)) {
        return (0, ChannelTrovoInfoDto_1.ChannelTrovoInfoDtoToJSON)(value);
    }
    if ((0, ChannelTwitchInfoDto_1.instanceOfChannelTwitchInfoDto)(value)) {
        return (0, ChannelTwitchInfoDto_1.ChannelTwitchInfoDtoToJSON)(value);
    }
    if ((0, ChannelVkInfoDto_1.instanceOfChannelVkInfoDto)(value)) {
        return (0, ChannelVkInfoDto_1.ChannelVkInfoDtoToJSON)(value);
    }
    if ((0, ChannelYoutubeInfoDto_1.instanceOfChannelYoutubeInfoDto)(value)) {
        return (0, ChannelYoutubeInfoDto_1.ChannelYoutubeInfoDtoToJSON)(value);
    }
    return {};
}
exports.SearchChannelItemStreamInfoToJSONTyped = SearchChannelItemStreamInfoToJSONTyped;
