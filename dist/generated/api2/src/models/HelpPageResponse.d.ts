/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { BlogPageSiteResponseId } from './BlogPageSiteResponseId';
/**
 *
 * @export
 * @interface HelpPageResponse
 */
export interface HelpPageResponse {
    /**
     *
     * @type {BlogPageSiteResponseId}
     * @memberof HelpPageResponse
     */
    id: BlogPageSiteResponseId;
    /**
     * url
     * @type {string}
     * @memberof HelpPageResponse
     */
    url: string;
    /**
     * Generated url from root path
     * @type {string}
     * @memberof HelpPageResponse
     */
    urlInherit: string;
    /**
     * Notion parent id
     * @type {string}
     * @memberof HelpPageResponse
     */
    notionParentId: string;
    /**
     * Page status
     * @type {string}
     * @memberof HelpPageResponse
     */
    status: HelpPageResponseStatusEnum;
    /**
     * Date last update
     * @type {Date}
     * @memberof HelpPageResponse
     */
    dateUpdate: Date;
    /**
     * Date create
     * @type {Date}
     * @memberof HelpPageResponse
     */
    dateCreate: Date;
    /**
     * Page icon
     * @type {object}
     * @memberof HelpPageResponse
     */
    icon: object | null;
    /**
     * Subject
     * @type {string}
     * @memberof HelpPageResponse
     */
    title: string;
    /**
     * Language for indexing
     * @type {string}
     * @memberof HelpPageResponse
     */
    language: HelpPageResponseLanguageEnum;
    /**
     * Language ISO
     * @type {string}
     * @memberof HelpPageResponse
     */
    languageIso: HelpPageResponseLanguageIsoEnum;
    /**
     * Text
     * @type {string}
     * @memberof HelpPageResponse
     */
    text: string;
    /**
     * Alternative language (Array of Language ISO)
     * @type {Array<string>}
     * @memberof HelpPageResponse
     */
    altLanguages: Array<HelpPageResponseAltLanguagesEnum>;
}
/**
 * @export
 */
export declare const HelpPageResponseStatusEnum: {
    readonly None: "None";
    readonly Backlog: "Backlog";
    readonly Drafting: "Drafting";
    readonly Reviewing: "Reviewing";
    readonly Done: "Done";
    readonly Published: "Published";
};
export type HelpPageResponseStatusEnum = typeof HelpPageResponseStatusEnum[keyof typeof HelpPageResponseStatusEnum];
/**
 * @export
 */
export declare const HelpPageResponseLanguageEnum: {
    readonly Russian: "russian";
    readonly English: "english";
    readonly None: "none";
};
export type HelpPageResponseLanguageEnum = typeof HelpPageResponseLanguageEnum[keyof typeof HelpPageResponseLanguageEnum];
/**
 * @export
 */
export declare const HelpPageResponseLanguageIsoEnum: {
    readonly Ru: "ru";
    readonly En: "en";
    readonly Cn: "cn";
};
export type HelpPageResponseLanguageIsoEnum = typeof HelpPageResponseLanguageIsoEnum[keyof typeof HelpPageResponseLanguageIsoEnum];
/**
 * @export
 */
export declare const HelpPageResponseAltLanguagesEnum: {
    readonly Ru: "ru";
    readonly En: "en";
    readonly Cn: "cn";
};
export type HelpPageResponseAltLanguagesEnum = typeof HelpPageResponseAltLanguagesEnum[keyof typeof HelpPageResponseAltLanguagesEnum];
/**
 * Check if a given object implements the HelpPageResponse interface.
 */
export declare function instanceOfHelpPageResponse(value: object): value is HelpPageResponse;
export declare function HelpPageResponseFromJSON(json: any): HelpPageResponse;
export declare function HelpPageResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): HelpPageResponse;
export declare function HelpPageResponseToJSON(json: any): HelpPageResponse;
export declare function HelpPageResponseToJSONTyped(value?: HelpPageResponse | null, ignoreDiscriminator?: boolean): any;
//# sourceMappingURL=HelpPageResponse.d.ts.map