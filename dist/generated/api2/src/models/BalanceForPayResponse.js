"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.BalanceForPayResponseToJSONTyped = exports.BalanceForPayResponseToJSON = exports.BalanceForPayResponseFromJSONTyped = exports.BalanceForPayResponseFromJSON = exports.instanceOfBalanceForPayResponse = exports.BalanceForPayResponseBalancesAllowEnum = exports.BalanceForPayResponseCurrencyEnum = void 0;
const MoneyFlowBalanceTypeValuesResponse_1 = require("./MoneyFlowBalanceTypeValuesResponse");
/**
 * @export
 */
exports.BalanceForPayResponseCurrencyEnum = {
    Rub: 'rub',
    Usd: 'usd'
};
/**
 * @export
 */
exports.BalanceForPayResponseBalancesAllowEnum = {
    Bonus: 'bonus',
    Payment: 'payment',
    Profit: 'profit'
};
/**
 * Check if a given object implements the BalanceForPayResponse interface.
 */
function instanceOfBalanceForPayResponse(value) {
    if (!('balance' in value) || value['balance'] === undefined)
        return false;
    if (!('currency' in value) || value['currency'] === undefined)
        return false;
    if (!('balancesAllow' in value) || value['balancesAllow'] === undefined)
        return false;
    if (!('balancesValues' in value) || value['balancesValues'] === undefined)
        return false;
    return true;
}
exports.instanceOfBalanceForPayResponse = instanceOfBalanceForPayResponse;
function BalanceForPayResponseFromJSON(json) {
    return BalanceForPayResponseFromJSONTyped(json, false);
}
exports.BalanceForPayResponseFromJSON = BalanceForPayResponseFromJSON;
function BalanceForPayResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'balance': json['balance'],
        'currency': json['currency'],
        'balancesAllow': json['balances_allow'],
        'balancesValues': (0, MoneyFlowBalanceTypeValuesResponse_1.MoneyFlowBalanceTypeValuesResponseFromJSON)(json['balances_values']),
    };
}
exports.BalanceForPayResponseFromJSONTyped = BalanceForPayResponseFromJSONTyped;
function BalanceForPayResponseToJSON(json) {
    return BalanceForPayResponseToJSONTyped(json, false);
}
exports.BalanceForPayResponseToJSON = BalanceForPayResponseToJSON;
function BalanceForPayResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'balance': value['balance'],
        'currency': value['currency'],
        'balances_allow': value['balancesAllow'],
        'balances_values': (0, MoneyFlowBalanceTypeValuesResponse_1.MoneyFlowBalanceTypeValuesResponseToJSON)(value['balancesValues']),
    };
}
exports.BalanceForPayResponseToJSONTyped = BalanceForPayResponseToJSONTyped;
