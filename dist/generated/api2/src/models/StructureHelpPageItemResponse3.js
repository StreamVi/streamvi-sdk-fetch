"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.StructureHelpPageItemResponse3ToJSONTyped = exports.StructureHelpPageItemResponse3ToJSON = exports.StructureHelpPageItemResponse3FromJSONTyped = exports.StructureHelpPageItemResponse3FromJSON = exports.instanceOfStructureHelpPageItemResponse3 = exports.StructureHelpPageItemResponse3StatusEnum = void 0;
const BlogPageSiteResponseId_1 = require("./BlogPageSiteResponseId");
const StructureHelpPageConnectionsItemFinal_1 = require("./StructureHelpPageConnectionsItemFinal");
const StructureHelpPageConnectionsItemLang_1 = require("./StructureHelpPageConnectionsItemLang");
/**
 * @export
 */
exports.StructureHelpPageItemResponse3StatusEnum = {
    None: 'None',
    Backlog: 'Backlog',
    Drafting: 'Drafting',
    Reviewing: 'Reviewing',
    Done: 'Done',
    Published: 'Published'
};
/**
 * Check if a given object implements the StructureHelpPageItemResponse3 interface.
 */
function instanceOfStructureHelpPageItemResponse3(value) {
    if (!('id' in value) || value['id'] === undefined)
        return false;
    if (!('notionId' in value) || value['notionId'] === undefined)
        return false;
    if (!('notionParentId' in value) || value['notionParentId'] === undefined)
        return false;
    if (!('url' in value) || value['url'] === undefined)
        return false;
    if (!('urlInherit' in value) || value['urlInherit'] === undefined)
        return false;
    if (!('status' in value) || value['status'] === undefined)
        return false;
    if (!('title' in value) || value['title'] === undefined)
        return false;
    if (!('icon' in value) || value['icon'] === undefined)
        return false;
    if (!('priority' in value) || value['priority'] === undefined)
        return false;
    if (!('connections' in value) || value['connections'] === undefined)
        return false;
    return true;
}
exports.instanceOfStructureHelpPageItemResponse3 = instanceOfStructureHelpPageItemResponse3;
function StructureHelpPageItemResponse3FromJSON(json) {
    return StructureHelpPageItemResponse3FromJSONTyped(json, false);
}
exports.StructureHelpPageItemResponse3FromJSON = StructureHelpPageItemResponse3FromJSON;
function StructureHelpPageItemResponse3FromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'id': (0, BlogPageSiteResponseId_1.BlogPageSiteResponseIdFromJSON)(json['_id']),
        'notionId': json['notion_id'],
        'notionParentId': json['notion_parent_id'],
        'url': json['url'],
        'urlInherit': json['url_inherit'],
        'status': json['status'],
        'title': (json['title'].map(StructureHelpPageConnectionsItemLang_1.StructureHelpPageConnectionsItemLangFromJSON)),
        'icon': json['icon'],
        'priority': json['priority'],
        'connections': (json['connections'].map(StructureHelpPageConnectionsItemFinal_1.StructureHelpPageConnectionsItemFinalFromJSON)),
    };
}
exports.StructureHelpPageItemResponse3FromJSONTyped = StructureHelpPageItemResponse3FromJSONTyped;
function StructureHelpPageItemResponse3ToJSON(json) {
    return StructureHelpPageItemResponse3ToJSONTyped(json, false);
}
exports.StructureHelpPageItemResponse3ToJSON = StructureHelpPageItemResponse3ToJSON;
function StructureHelpPageItemResponse3ToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        '_id': (0, BlogPageSiteResponseId_1.BlogPageSiteResponseIdToJSON)(value['id']),
        'notion_id': value['notionId'],
        'notion_parent_id': value['notionParentId'],
        'url': value['url'],
        'url_inherit': value['urlInherit'],
        'status': value['status'],
        'title': (value['title'].map(StructureHelpPageConnectionsItemLang_1.StructureHelpPageConnectionsItemLangToJSON)),
        'icon': value['icon'],
        'priority': value['priority'],
        'connections': (value['connections'].map(StructureHelpPageConnectionsItemFinal_1.StructureHelpPageConnectionsItemFinalToJSON)),
    };
}
exports.StructureHelpPageItemResponse3ToJSONTyped = StructureHelpPageItemResponse3ToJSONTyped;
