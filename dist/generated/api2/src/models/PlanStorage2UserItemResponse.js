"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PlanStorage2UserItemResponseToJSONTyped = exports.PlanStorage2UserItemResponseToJSON = exports.PlanStorage2UserItemResponseFromJSONTyped = exports.PlanStorage2UserItemResponseFromJSON = exports.instanceOfPlanStorage2UserItemResponse = exports.PlanStorage2UserItemResponsePeriodEnum = void 0;
/**
 * @export
 */
exports.PlanStorage2UserItemResponsePeriodEnum = {
    month: 'month',
    year: 'year'
};
/**
 * Check if a given object implements the PlanStorage2UserItemResponse interface.
 */
function instanceOfPlanStorage2UserItemResponse(value) {
    if (!('plan_storage2user_id' in value) || value['plan_storage2user_id'] === undefined)
        return false;
    if (!('plan_storage_id' in value) || value['plan_storage_id'] === undefined)
        return false;
    if (!('size' in value) || value['size'] === undefined)
        return false;
    if (!('date_start' in value) || value['date_start'] === undefined)
        return false;
    if (!('date_end' in value) || value['date_end'] === undefined)
        return false;
    if (!('date_create' in value) || value['date_create'] === undefined)
        return false;
    if (!('period' in value) || value['period'] === undefined)
        return false;
    if (!('period_uuid' in value) || value['period_uuid'] === undefined)
        return false;
    if (!('status' in value) || value['status'] === undefined)
        return false;
    if (!('money_flow_uuid' in value) || value['money_flow_uuid'] === undefined)
        return false;
    return true;
}
exports.instanceOfPlanStorage2UserItemResponse = instanceOfPlanStorage2UserItemResponse;
function PlanStorage2UserItemResponseFromJSON(json) {
    return PlanStorage2UserItemResponseFromJSONTyped(json, false);
}
exports.PlanStorage2UserItemResponseFromJSON = PlanStorage2UserItemResponseFromJSON;
function PlanStorage2UserItemResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'plan_storage2user_id': json['plan_storage2user_id'],
        'plan_storage_id': json['plan_storage_id'],
        'size': json['size'],
        'date_start': (new Date(json['date_start'])),
        'date_end': (new Date(json['date_end'])),
        'date_create': (new Date(json['date_create'])),
        'period': json['period'],
        'period_uuid': json['period_uuid'],
        'status': json['status'],
        'prolongation': json['prolongation'] == null ? undefined : json['prolongation'],
        'money_flow_uuid': json['money_flow_uuid'],
    };
}
exports.PlanStorage2UserItemResponseFromJSONTyped = PlanStorage2UserItemResponseFromJSONTyped;
function PlanStorage2UserItemResponseToJSON(json) {
    return PlanStorage2UserItemResponseToJSONTyped(json, false);
}
exports.PlanStorage2UserItemResponseToJSON = PlanStorage2UserItemResponseToJSON;
function PlanStorage2UserItemResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'plan_storage2user_id': value['plan_storage2user_id'],
        'plan_storage_id': value['plan_storage_id'],
        'size': value['size'],
        'date_start': ((value['date_start']).toISOString()),
        'date_end': ((value['date_end']).toISOString()),
        'date_create': ((value['date_create']).toISOString()),
        'period': value['period'],
        'period_uuid': value['period_uuid'],
        'status': value['status'],
        'prolongation': value['prolongation'],
        'money_flow_uuid': value['money_flow_uuid'],
    };
}
exports.PlanStorage2UserItemResponseToJSONTyped = PlanStorage2UserItemResponseToJSONTyped;
