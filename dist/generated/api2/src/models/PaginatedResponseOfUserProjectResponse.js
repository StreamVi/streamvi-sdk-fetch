"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PaginatedResponseOfUserProjectResponseToJSONTyped = exports.PaginatedResponseOfUserProjectResponseToJSON = exports.PaginatedResponseOfUserProjectResponseFromJSONTyped = exports.PaginatedResponseOfUserProjectResponseFromJSON = exports.instanceOfPaginatedResponseOfUserProjectResponse = void 0;
const UserProjectResponse_1 = require("./UserProjectResponse");
/**
 * Check if a given object implements the PaginatedResponseOfUserProjectResponse interface.
 */
function instanceOfPaginatedResponseOfUserProjectResponse(value) {
    if (!('total' in value) || value['total'] === undefined)
        return false;
    if (!('limit' in value) || value['limit'] === undefined)
        return false;
    if (!('offset' in value) || value['offset'] === undefined)
        return false;
    if (!('results' in value) || value['results'] === undefined)
        return false;
    return true;
}
exports.instanceOfPaginatedResponseOfUserProjectResponse = instanceOfPaginatedResponseOfUserProjectResponse;
function PaginatedResponseOfUserProjectResponseFromJSON(json) {
    return PaginatedResponseOfUserProjectResponseFromJSONTyped(json, false);
}
exports.PaginatedResponseOfUserProjectResponseFromJSON = PaginatedResponseOfUserProjectResponseFromJSON;
function PaginatedResponseOfUserProjectResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'total': json['total'],
        'limit': json['limit'],
        'offset': json['offset'],
        'results': (json['results'].map(UserProjectResponse_1.UserProjectResponseFromJSON)),
    };
}
exports.PaginatedResponseOfUserProjectResponseFromJSONTyped = PaginatedResponseOfUserProjectResponseFromJSONTyped;
function PaginatedResponseOfUserProjectResponseToJSON(json) {
    return PaginatedResponseOfUserProjectResponseToJSONTyped(json, false);
}
exports.PaginatedResponseOfUserProjectResponseToJSON = PaginatedResponseOfUserProjectResponseToJSON;
function PaginatedResponseOfUserProjectResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'total': value['total'],
        'limit': value['limit'],
        'offset': value['offset'],
        'results': (value['results'].map(UserProjectResponse_1.UserProjectResponseToJSON)),
    };
}
exports.PaginatedResponseOfUserProjectResponseToJSONTyped = PaginatedResponseOfUserProjectResponseToJSONTyped;
