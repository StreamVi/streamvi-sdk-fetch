"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PlanRestreamProjectResponseToJSONTyped = exports.PlanRestreamProjectResponseToJSON = exports.PlanRestreamProjectResponseFromJSONTyped = exports.PlanRestreamProjectResponseFromJSON = exports.instanceOfPlanRestreamProjectResponse = exports.PlanRestreamProjectResponseStatusEnum = exports.PlanRestreamProjectResponseTypeEnum = void 0;
const PlanRestreamPrice_1 = require("./PlanRestreamPrice");
const PlanRestreamFeatureItemV2_1 = require("./PlanRestreamFeatureItemV2");
const PlanRestreamForProjectV2_1 = require("./PlanRestreamForProjectV2");
/**
 * @export
 */
exports.PlanRestreamProjectResponseTypeEnum = {
    Free: 'free',
    PaidFix: 'paid_fix',
    PaidFlex: 'paid_flex',
    Custom: 'custom'
};
/**
 * @export
 */
exports.PlanRestreamProjectResponseStatusEnum = {
    Current: 'current',
    Upgrade: 'upgrade',
    Downgrade: 'downgrade'
};
/**
 * Check if a given object implements the PlanRestreamProjectResponse interface.
 */
function instanceOfPlanRestreamProjectResponse(value) {
    if (!('planRestreamId' in value) || value['planRestreamId'] === undefined)
        return false;
    if (!('title' in value) || value['title'] === undefined)
        return false;
    if (!('active' in value) || value['active'] === undefined)
        return false;
    if (!('countChannelMax' in value) || value['countChannelMax'] === undefined)
        return false;
    if (!('type' in value) || value['type'] === undefined)
        return false;
    if (!('bitrateMax' in value) || value['bitrateMax'] === undefined)
        return false;
    if (!('index' in value) || value['index'] === undefined)
        return false;
    if (!('price' in value) || value['price'] === undefined)
        return false;
    if (!('status' in value) || value['status'] === undefined)
        return false;
    if (!('feature' in value) || value['feature'] === undefined)
        return false;
    if (!('ownTariff' in value) || value['ownTariff'] === undefined)
        return false;
    return true;
}
exports.instanceOfPlanRestreamProjectResponse = instanceOfPlanRestreamProjectResponse;
function PlanRestreamProjectResponseFromJSON(json) {
    return PlanRestreamProjectResponseFromJSONTyped(json, false);
}
exports.PlanRestreamProjectResponseFromJSON = PlanRestreamProjectResponseFromJSON;
function PlanRestreamProjectResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'planRestreamId': json['plan_restream_id'],
        'title': json['title'],
        'active': json['active'],
        'countChannelMin': json['count_channel_min'] == null ? undefined : json['count_channel_min'],
        'countChannelMax': json['count_channel_max'],
        'countChannelStep': json['count_channel_step'] == null ? undefined : json['count_channel_step'],
        'type': json['type'],
        'bitrateMax': json['bitrate_max'],
        'bitrateMin': json['bitrate_min'] == null ? undefined : json['bitrate_min'],
        'bitrateStep': json['bitrate_step'] == null ? undefined : json['bitrate_step'],
        'index': json['index'],
        'price': (0, PlanRestreamPrice_1.PlanRestreamPriceFromJSON)(json['price']),
        'status': json['status'],
        'feature': (json['feature'].map(PlanRestreamFeatureItemV2_1.PlanRestreamFeatureItemV2FromJSON)),
        'ownTariff': (0, PlanRestreamForProjectV2_1.PlanRestreamForProjectV2FromJSON)(json['own_tariff']),
    };
}
exports.PlanRestreamProjectResponseFromJSONTyped = PlanRestreamProjectResponseFromJSONTyped;
function PlanRestreamProjectResponseToJSON(json) {
    return PlanRestreamProjectResponseToJSONTyped(json, false);
}
exports.PlanRestreamProjectResponseToJSON = PlanRestreamProjectResponseToJSON;
function PlanRestreamProjectResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'plan_restream_id': value['planRestreamId'],
        'title': value['title'],
        'active': value['active'],
        'count_channel_min': value['countChannelMin'],
        'count_channel_max': value['countChannelMax'],
        'count_channel_step': value['countChannelStep'],
        'type': value['type'],
        'bitrate_max': value['bitrateMax'],
        'bitrate_min': value['bitrateMin'],
        'bitrate_step': value['bitrateStep'],
        'index': value['index'],
        'price': (0, PlanRestreamPrice_1.PlanRestreamPriceToJSON)(value['price']),
        'status': value['status'],
        'feature': (value['feature'].map(PlanRestreamFeatureItemV2_1.PlanRestreamFeatureItemV2ToJSON)),
        'own_tariff': (0, PlanRestreamForProjectV2_1.PlanRestreamForProjectV2ToJSON)(value['ownTariff']),
    };
}
exports.PlanRestreamProjectResponseToJSONTyped = PlanRestreamProjectResponseToJSONTyped;
