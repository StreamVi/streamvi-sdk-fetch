"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PlanStorageForProjectToJSONTyped = exports.PlanStorageForProjectToJSON = exports.PlanStorageForProjectFromJSONTyped = exports.PlanStorageForProjectFromJSON = exports.instanceOfPlanStorageForProject = void 0;
const PlanStorageItem_1 = require("./PlanStorageItem");
/**
 * Check if a given object implements the PlanStorageForProject interface.
 */
function instanceOfPlanStorageForProject(value) {
    if (!('before' in value) || value['before'] === undefined)
        return false;
    if (!('current' in value) || value['current'] === undefined)
        return false;
    if (!('next' in value) || value['next'] === undefined)
        return false;
    return true;
}
exports.instanceOfPlanStorageForProject = instanceOfPlanStorageForProject;
function PlanStorageForProjectFromJSON(json) {
    return PlanStorageForProjectFromJSONTyped(json, false);
}
exports.PlanStorageForProjectFromJSON = PlanStorageForProjectFromJSON;
function PlanStorageForProjectFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'before': (0, PlanStorageItem_1.PlanStorageItemFromJSON)(json['before']),
        'current': (0, PlanStorageItem_1.PlanStorageItemFromJSON)(json['current']),
        'next': (0, PlanStorageItem_1.PlanStorageItemFromJSON)(json['next']),
    };
}
exports.PlanStorageForProjectFromJSONTyped = PlanStorageForProjectFromJSONTyped;
function PlanStorageForProjectToJSON(json) {
    return PlanStorageForProjectToJSONTyped(json, false);
}
exports.PlanStorageForProjectToJSON = PlanStorageForProjectToJSON;
function PlanStorageForProjectToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'before': (0, PlanStorageItem_1.PlanStorageItemToJSON)(value['before']),
        'current': (0, PlanStorageItem_1.PlanStorageItemToJSON)(value['current']),
        'next': (0, PlanStorageItem_1.PlanStorageItemToJSON)(value['next']),
    };
}
exports.PlanStorageForProjectToJSONTyped = PlanStorageForProjectToJSONTyped;
