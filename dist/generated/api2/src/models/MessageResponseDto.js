"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.MessageResponseDtoToJSONTyped = exports.MessageResponseDtoToJSON = exports.MessageResponseDtoFromJSONTyped = exports.MessageResponseDtoFromJSON = exports.instanceOfMessageResponseDto = void 0;
const MessageRestreamResponseDto_1 = require("./MessageRestreamResponseDto");
/**
 * Check if a given object implements the MessageResponseDto interface.
 */
function instanceOfMessageResponseDto(value) {
    if (!('eventId' in value) || value['eventId'] === undefined)
        return false;
    if (!('restreams' in value) || value['restreams'] === undefined)
        return false;
    if (!('entities' in value) || value['entities'] === undefined)
        return false;
    if (!('text' in value) || value['text'] === undefined)
        return false;
    if (!('sender' in value) || value['sender'] === undefined)
        return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined)
        return false;
    if (!('broadcastId' in value) || value['broadcastId'] === undefined)
        return false;
    if (!('isOutgoing' in value) || value['isOutgoing'] === undefined)
        return false;
    return true;
}
exports.instanceOfMessageResponseDto = instanceOfMessageResponseDto;
function MessageResponseDtoFromJSON(json) {
    return MessageResponseDtoFromJSONTyped(json, false);
}
exports.MessageResponseDtoFromJSON = MessageResponseDtoFromJSON;
function MessageResponseDtoFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'eventId': json['event_id'],
        'restreams': (json['restreams'].map(MessageRestreamResponseDto_1.MessageRestreamResponseDtoFromJSON)),
        'entities': json['entities'],
        'text': json['text'],
        'sender': json['sender'],
        'createdAt': (new Date(json['created_at'])),
        'broadcastId': json['broadcast_id'],
        'isOutgoing': json['is_outgoing'],
    };
}
exports.MessageResponseDtoFromJSONTyped = MessageResponseDtoFromJSONTyped;
function MessageResponseDtoToJSON(json) {
    return MessageResponseDtoToJSONTyped(json, false);
}
exports.MessageResponseDtoToJSON = MessageResponseDtoToJSON;
function MessageResponseDtoToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'event_id': value['eventId'],
        'restreams': (value['restreams'].map(MessageRestreamResponseDto_1.MessageRestreamResponseDtoToJSON)),
        'entities': value['entities'],
        'text': value['text'],
        'sender': value['sender'],
        'created_at': ((value['createdAt']).toISOString()),
        'broadcast_id': value['broadcastId'],
        'is_outgoing': value['isOutgoing'],
    };
}
exports.MessageResponseDtoToJSONTyped = MessageResponseDtoToJSONTyped;
