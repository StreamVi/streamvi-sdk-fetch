"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PlatformsSupportedItemToJSONTyped = exports.PlatformsSupportedItemToJSON = exports.PlatformsSupportedItemFromJSONTyped = exports.PlatformsSupportedItemFromJSON = exports.instanceOfPlatformsSupportedItem = exports.PlatformsSupportedItemExtensionEnum = void 0;
/**
 * @export
 */
exports.PlatformsSupportedItemExtensionEnum = {
    png: 'png',
    svg: 'svg'
};
/**
 * Check if a given object implements the PlatformsSupportedItem interface.
 */
function instanceOfPlatformsSupportedItem(value) {
    if (!('id' in value) || value['id'] === undefined)
        return false;
    if (!('is_adding' in value) || value['is_adding'] === undefined)
        return false;
    if (!('title' in value) || value['title'] === undefined)
        return false;
    if (!('extension' in value) || value['extension'] === undefined)
        return false;
    if (!('url' in value) || value['url'] === undefined)
        return false;
    if (!('type' in value) || value['type'] === undefined)
        return false;
    if (!('oauth' in value) || value['oauth'] === undefined)
        return false;
    if (!('read_chat' in value) || value['read_chat'] === undefined)
        return false;
    if (!('write_chat' in value) || value['write_chat'] === undefined)
        return false;
    if (!('edit_name' in value) || value['edit_name'] === undefined)
        return false;
    if (!('set_title' in value) || value['set_title'] === undefined)
        return false;
    if (!('set_description' in value) || value['set_description'] === undefined)
        return false;
    if (!('created_stream' in value) || value['created_stream'] === undefined)
        return false;
    if (!('rtmp_url' in value) || value['rtmp_url'] === undefined)
        return false;
    if (!('rtmp_key' in value) || value['rtmp_key'] === undefined)
        return false;
    if (!('planned' in value) || value['planned'] === undefined)
        return false;
    if (!('options' in value) || value['options'] === undefined)
        return false;
    if (!('url_stream' in value) || value['url_stream'] === undefined)
        return false;
    if (!('viewers' in value) || value['viewers'] === undefined)
        return false;
    if (!('messages' in value) || value['messages'] === undefined)
        return false;
    if (!('like' in value) || value['like'] === undefined)
        return false;
    return true;
}
exports.instanceOfPlatformsSupportedItem = instanceOfPlatformsSupportedItem;
function PlatformsSupportedItemFromJSON(json) {
    return PlatformsSupportedItemFromJSONTyped(json, false);
}
exports.PlatformsSupportedItemFromJSON = PlatformsSupportedItemFromJSON;
function PlatformsSupportedItemFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'id': json['id'],
        'is_adding': json['is_adding'],
        'title': json['title'],
        'extension': json['extension'],
        'url': json['url'],
        'type': json['type'],
        'oauth': json['oauth'],
        'read_chat': json['read_chat'],
        'write_chat': json['write_chat'],
        'edit_name': json['edit_name'],
        'set_title': json['set_title'],
        'set_description': json['set_description'],
        'created_stream': json['created_stream'],
        'rtmp_url': json['rtmp_url'],
        'rtmp_key': json['rtmp_key'],
        'planned': json['planned'],
        'options': json['options'],
        'url_stream': json['url_stream'],
        'viewers': json['viewers'],
        'messages': json['messages'],
        'like': json['like'],
    };
}
exports.PlatformsSupportedItemFromJSONTyped = PlatformsSupportedItemFromJSONTyped;
function PlatformsSupportedItemToJSON(json) {
    return PlatformsSupportedItemToJSONTyped(json, false);
}
exports.PlatformsSupportedItemToJSON = PlatformsSupportedItemToJSON;
function PlatformsSupportedItemToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'id': value['id'],
        'is_adding': value['is_adding'],
        'title': value['title'],
        'extension': value['extension'],
        'url': value['url'],
        'type': value['type'],
        'oauth': value['oauth'],
        'read_chat': value['read_chat'],
        'write_chat': value['write_chat'],
        'edit_name': value['edit_name'],
        'set_title': value['set_title'],
        'set_description': value['set_description'],
        'created_stream': value['created_stream'],
        'rtmp_url': value['rtmp_url'],
        'rtmp_key': value['rtmp_key'],
        'planned': value['planned'],
        'options': value['options'],
        'url_stream': value['url_stream'],
        'viewers': value['viewers'],
        'messages': value['messages'],
        'like': value['like'],
    };
}
exports.PlatformsSupportedItemToJSONTyped = PlatformsSupportedItemToJSONTyped;
