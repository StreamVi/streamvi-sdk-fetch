"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SiteSearchChannelResponseToJSONTyped = exports.SiteSearchChannelResponseToJSON = exports.SiteSearchChannelResponseFromJSONTyped = exports.SiteSearchChannelResponseFromJSON = exports.instanceOfSiteSearchChannelResponse = void 0;
const SearchChannelPlatformsDto_1 = require("./SearchChannelPlatformsDto");
const SearchChannelItem_1 = require("./SearchChannelItem");
/**
 * Check if a given object implements the SiteSearchChannelResponse interface.
 */
function instanceOfSiteSearchChannelResponse(value) {
    if (!('results' in value) || value['results'] === undefined)
        return false;
    if (!('platforms' in value) || value['platforms'] === undefined)
        return false;
    if (!('limit' in value) || value['limit'] === undefined)
        return false;
    if (!('offset' in value) || value['offset'] === undefined)
        return false;
    if (!('total' in value) || value['total'] === undefined)
        return false;
    return true;
}
exports.instanceOfSiteSearchChannelResponse = instanceOfSiteSearchChannelResponse;
function SiteSearchChannelResponseFromJSON(json) {
    return SiteSearchChannelResponseFromJSONTyped(json, false);
}
exports.SiteSearchChannelResponseFromJSON = SiteSearchChannelResponseFromJSON;
function SiteSearchChannelResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'results': (json['results'].map(SearchChannelItem_1.SearchChannelItemFromJSON)),
        'platforms': (json['platforms'].map(SearchChannelPlatformsDto_1.SearchChannelPlatformsDtoFromJSON)),
        'limit': json['limit'],
        'offset': json['offset'],
        'total': json['total'],
    };
}
exports.SiteSearchChannelResponseFromJSONTyped = SiteSearchChannelResponseFromJSONTyped;
function SiteSearchChannelResponseToJSON(json) {
    return SiteSearchChannelResponseToJSONTyped(json, false);
}
exports.SiteSearchChannelResponseToJSON = SiteSearchChannelResponseToJSON;
function SiteSearchChannelResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'results': (value['results'].map(SearchChannelItem_1.SearchChannelItemToJSON)),
        'platforms': (value['platforms'].map(SearchChannelPlatformsDto_1.SearchChannelPlatformsDtoToJSON)),
        'limit': value['limit'],
        'offset': value['offset'],
        'total': value['total'],
    };
}
exports.SiteSearchChannelResponseToJSONTyped = SiteSearchChannelResponseToJSONTyped;
