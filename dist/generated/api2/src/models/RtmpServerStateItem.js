"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.RtmpServerStateItemToJSONTyped = exports.RtmpServerStateItemToJSON = exports.RtmpServerStateItemFromJSONTyped = exports.RtmpServerStateItemFromJSON = exports.instanceOfRtmpServerStateItem = exports.RtmpServerStateItemServerStatusEnum = void 0;
const RtmpServerPlatformQuality_1 = require("./RtmpServerPlatformQuality");
const CountryItem_1 = require("./CountryItem");
const RtmpServerLoading_1 = require("./RtmpServerLoading");
/**
 * @export
 */
exports.RtmpServerStateItemServerStatusEnum = {
    good: 'good',
    problem: 'problem',
    bad: 'bad'
};
/**
 * Check if a given object implements the RtmpServerStateItem interface.
 */
function instanceOfRtmpServerStateItem(value) {
    if (!('city' in value) || value['city'] === undefined)
        return false;
    if (!('country' in value) || value['country'] === undefined)
        return false;
    if (!('lat' in value) || value['lat'] === undefined)
        return false;
    if (!('_long' in value) || value['_long'] === undefined)
        return false;
    if (!('network' in value) || value['network'] === undefined)
        return false;
    if (!('cpu' in value) || value['cpu'] === undefined)
        return false;
    if (!('ram' in value) || value['ram'] === undefined)
        return false;
    if (!('quality' in value) || value['quality'] === undefined)
        return false;
    if (!('serverStatus' in value) || value['serverStatus'] === undefined)
        return false;
    if (!('platforms' in value) || value['platforms'] === undefined)
        return false;
    return true;
}
exports.instanceOfRtmpServerStateItem = instanceOfRtmpServerStateItem;
function RtmpServerStateItemFromJSON(json) {
    return RtmpServerStateItemFromJSONTyped(json, false);
}
exports.RtmpServerStateItemFromJSON = RtmpServerStateItemFromJSON;
function RtmpServerStateItemFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'city': json['city'],
        'country': (0, CountryItem_1.CountryItemFromJSON)(json['country']),
        'lat': json['lat'],
        '_long': json['long'],
        'network': (0, RtmpServerLoading_1.RtmpServerLoadingFromJSON)(json['network']),
        'cpu': (0, RtmpServerLoading_1.RtmpServerLoadingFromJSON)(json['cpu']),
        'ram': (0, RtmpServerLoading_1.RtmpServerLoadingFromJSON)(json['ram']),
        'quality': json['quality'],
        'serverStatus': json['serverStatus'],
        'platforms': (json['platforms'].map(RtmpServerPlatformQuality_1.RtmpServerPlatformQualityFromJSON)),
    };
}
exports.RtmpServerStateItemFromJSONTyped = RtmpServerStateItemFromJSONTyped;
function RtmpServerStateItemToJSON(json) {
    return RtmpServerStateItemToJSONTyped(json, false);
}
exports.RtmpServerStateItemToJSON = RtmpServerStateItemToJSON;
function RtmpServerStateItemToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'city': value['city'],
        'country': (0, CountryItem_1.CountryItemToJSON)(value['country']),
        'lat': value['lat'],
        'long': value['_long'],
        'network': (0, RtmpServerLoading_1.RtmpServerLoadingToJSON)(value['network']),
        'cpu': (0, RtmpServerLoading_1.RtmpServerLoadingToJSON)(value['cpu']),
        'ram': (0, RtmpServerLoading_1.RtmpServerLoadingToJSON)(value['ram']),
        'quality': value['quality'],
        'serverStatus': value['serverStatus'],
        'platforms': (value['platforms'].map(RtmpServerPlatformQuality_1.RtmpServerPlatformQualityToJSON)),
    };
}
exports.RtmpServerStateItemToJSONTyped = RtmpServerStateItemToJSONTyped;
