"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PlanRestreamResponseToJSONTyped = exports.PlanRestreamResponseToJSON = exports.PlanRestreamResponseFromJSONTyped = exports.PlanRestreamResponseFromJSON = exports.instanceOfPlanRestreamResponse = exports.PlanRestreamResponseFpsEnum = exports.PlanRestreamResponseResolutionEnum = exports.PlanRestreamResponseTypeEnum = void 0;
const PlanRestreamDiscountResponse_1 = require("./PlanRestreamDiscountResponse");
/**
 * @export
 */
exports.PlanRestreamResponseTypeEnum = {
    Free: 'free',
    PaidFix: 'paid_fix',
    PaidFlex: 'paid_flex',
    Custom: 'custom'
};
/**
 * @export
 */
exports.PlanRestreamResponseResolutionEnum = {
    _720p: '720p',
    _1080p: '1080p',
    _2K: '2K',
    Uw: 'UW',
    _4K: '4K',
    _8K: '8K'
};
/**
 * @export
 */
exports.PlanRestreamResponseFpsEnum = {
    _30: '30',
    _60: '60'
};
/**
 * Check if a given object implements the PlanRestreamResponse interface.
 */
function instanceOfPlanRestreamResponse(value) {
    if (!('planRestreamId' in value) || value['planRestreamId'] === undefined)
        return false;
    if (!('title' in value) || value['title'] === undefined)
        return false;
    if (!('active' in value) || value['active'] === undefined)
        return false;
    if (!('countChannelMin' in value) || value['countChannelMin'] === undefined)
        return false;
    if (!('countChannelMax' in value) || value['countChannelMax'] === undefined)
        return false;
    if (!('type' in value) || value['type'] === undefined)
        return false;
    if (!('priceRub' in value) || value['priceRub'] === undefined)
        return false;
    if (!('priceUsd' in value) || value['priceUsd'] === undefined)
        return false;
    if (!('bitrateMax' in value) || value['bitrateMax'] === undefined)
        return false;
    if (!('bitrateMin' in value) || value['bitrateMin'] === undefined)
        return false;
    if (!('resolution' in value) || value['resolution'] === undefined)
        return false;
    if (!('fps' in value) || value['fps'] === undefined)
        return false;
    if (!('createProjects' in value) || value['createProjects'] === undefined)
        return false;
    if (!('chat' in value) || value['chat'] === undefined)
        return false;
    if (!('video' in value) || value['video'] === undefined)
        return false;
    if (!('videoStorage' in value) || value['videoStorage'] === undefined)
        return false;
    if (!('changeSubject' in value) || value['changeSubject'] === undefined)
        return false;
    if (!('backgroundChat' in value) || value['backgroundChat'] === undefined)
        return false;
    if (!('dedicatedServer' in value) || value['dedicatedServer'] === undefined)
        return false;
    if (!('personalManager' in value) || value['personalManager'] === undefined)
        return false;
    if (!('pullLinkLimit' in value) || value['pullLinkLimit'] === undefined)
        return false;
    if (!('index' in value) || value['index'] === undefined)
        return false;
    if (!('discount' in value) || value['discount'] === undefined)
        return false;
    return true;
}
exports.instanceOfPlanRestreamResponse = instanceOfPlanRestreamResponse;
function PlanRestreamResponseFromJSON(json) {
    return PlanRestreamResponseFromJSONTyped(json, false);
}
exports.PlanRestreamResponseFromJSON = PlanRestreamResponseFromJSON;
function PlanRestreamResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'planRestreamId': json['plan_restream_id'],
        'title': json['title'],
        'active': json['active'],
        'countChannelMin': json['count_channel_min'],
        'countChannelMax': json['count_channel_max'],
        'type': json['type'],
        'priceRub': json['price_rub'],
        'priceUsd': json['price_usd'],
        'bitrateMax': json['bitrate_max'],
        'bitrateMin': json['bitrate_min'],
        'resolution': json['resolution'],
        'fps': json['fps'],
        'createProjects': json['create_projects'],
        'chat': json['chat'],
        'video': json['video'],
        'videoStorage': json['video_storage'],
        'changeSubject': json['change_subject'],
        'backgroundChat': json['background_chat'],
        'dedicatedServer': json['dedicated_server'],
        'personalManager': json['personal_manager'],
        'pullLinkLimit': json['pull_link_limit'],
        'index': json['index'],
        'discount': (0, PlanRestreamDiscountResponse_1.PlanRestreamDiscountResponseFromJSON)(json['discount']),
    };
}
exports.PlanRestreamResponseFromJSONTyped = PlanRestreamResponseFromJSONTyped;
function PlanRestreamResponseToJSON(json) {
    return PlanRestreamResponseToJSONTyped(json, false);
}
exports.PlanRestreamResponseToJSON = PlanRestreamResponseToJSON;
function PlanRestreamResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'plan_restream_id': value['planRestreamId'],
        'title': value['title'],
        'active': value['active'],
        'count_channel_min': value['countChannelMin'],
        'count_channel_max': value['countChannelMax'],
        'type': value['type'],
        'price_rub': value['priceRub'],
        'price_usd': value['priceUsd'],
        'bitrate_max': value['bitrateMax'],
        'bitrate_min': value['bitrateMin'],
        'resolution': value['resolution'],
        'fps': value['fps'],
        'create_projects': value['createProjects'],
        'chat': value['chat'],
        'video': value['video'],
        'video_storage': value['videoStorage'],
        'change_subject': value['changeSubject'],
        'background_chat': value['backgroundChat'],
        'dedicated_server': value['dedicatedServer'],
        'personal_manager': value['personalManager'],
        'pull_link_limit': value['pullLinkLimit'],
        'index': value['index'],
        'discount': (0, PlanRestreamDiscountResponse_1.PlanRestreamDiscountResponseToJSON)(value['discount']),
    };
}
exports.PlanRestreamResponseToJSONTyped = PlanRestreamResponseToJSONTyped;
