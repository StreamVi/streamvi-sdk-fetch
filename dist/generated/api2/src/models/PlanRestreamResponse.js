"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PlanRestreamResponseToJSONTyped = exports.PlanRestreamResponseToJSON = exports.PlanRestreamResponseFromJSONTyped = exports.PlanRestreamResponseFromJSON = exports.instanceOfPlanRestreamResponse = exports.PlanRestreamResponseFpsEnum = exports.PlanRestreamResponseResolutionEnum = exports.PlanRestreamResponseTypeEnum = void 0;
const PlanRestreamDiscountResponse_1 = require("./PlanRestreamDiscountResponse");
/**
 * @export
 */
exports.PlanRestreamResponseTypeEnum = {
    free: 'free',
    paid_fix: 'paid_fix',
    paid_flex: 'paid_flex',
    custom: 'custom'
};
/**
 * @export
 */
exports.PlanRestreamResponseResolutionEnum = {
    _720p: '720p',
    _1080p: '1080p',
    _2K: '2K',
    UW: 'UW',
    _4K: '4K',
    _8K: '8K'
};
/**
 * @export
 */
exports.PlanRestreamResponseFpsEnum = {
    _30: '30',
    _60: '60'
};
/**
 * Check if a given object implements the PlanRestreamResponse interface.
 */
function instanceOfPlanRestreamResponse(value) {
    if (!('plan_restream_id' in value) || value['plan_restream_id'] === undefined)
        return false;
    if (!('title' in value) || value['title'] === undefined)
        return false;
    if (!('active' in value) || value['active'] === undefined)
        return false;
    if (!('count_channel_min' in value) || value['count_channel_min'] === undefined)
        return false;
    if (!('count_channel_max' in value) || value['count_channel_max'] === undefined)
        return false;
    if (!('type' in value) || value['type'] === undefined)
        return false;
    if (!('price_rub' in value) || value['price_rub'] === undefined)
        return false;
    if (!('price_usd' in value) || value['price_usd'] === undefined)
        return false;
    if (!('bitrate_max' in value) || value['bitrate_max'] === undefined)
        return false;
    if (!('bitrate_min' in value) || value['bitrate_min'] === undefined)
        return false;
    if (!('resolution' in value) || value['resolution'] === undefined)
        return false;
    if (!('fps' in value) || value['fps'] === undefined)
        return false;
    if (!('create_projects' in value) || value['create_projects'] === undefined)
        return false;
    if (!('chat' in value) || value['chat'] === undefined)
        return false;
    if (!('video' in value) || value['video'] === undefined)
        return false;
    if (!('video_storage' in value) || value['video_storage'] === undefined)
        return false;
    if (!('change_subject' in value) || value['change_subject'] === undefined)
        return false;
    if (!('background_chat' in value) || value['background_chat'] === undefined)
        return false;
    if (!('dedicated_server' in value) || value['dedicated_server'] === undefined)
        return false;
    if (!('personal_manager' in value) || value['personal_manager'] === undefined)
        return false;
    if (!('pull_link_limit' in value) || value['pull_link_limit'] === undefined)
        return false;
    if (!('index' in value) || value['index'] === undefined)
        return false;
    if (!('discount' in value) || value['discount'] === undefined)
        return false;
    return true;
}
exports.instanceOfPlanRestreamResponse = instanceOfPlanRestreamResponse;
function PlanRestreamResponseFromJSON(json) {
    return PlanRestreamResponseFromJSONTyped(json, false);
}
exports.PlanRestreamResponseFromJSON = PlanRestreamResponseFromJSON;
function PlanRestreamResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'plan_restream_id': json['plan_restream_id'],
        'title': json['title'],
        'active': json['active'],
        'count_channel_min': json['count_channel_min'],
        'count_channel_max': json['count_channel_max'],
        'type': json['type'],
        'price_rub': json['price_rub'],
        'price_usd': json['price_usd'],
        'bitrate_max': json['bitrate_max'],
        'bitrate_min': json['bitrate_min'],
        'resolution': json['resolution'],
        'fps': json['fps'],
        'create_projects': json['create_projects'],
        'chat': json['chat'],
        'video': json['video'],
        'video_storage': json['video_storage'],
        'change_subject': json['change_subject'],
        'background_chat': json['background_chat'],
        'dedicated_server': json['dedicated_server'],
        'personal_manager': json['personal_manager'],
        'pull_link_limit': json['pull_link_limit'],
        'index': json['index'],
        'discount': (0, PlanRestreamDiscountResponse_1.PlanRestreamDiscountResponseFromJSON)(json['discount']),
    };
}
exports.PlanRestreamResponseFromJSONTyped = PlanRestreamResponseFromJSONTyped;
function PlanRestreamResponseToJSON(json) {
    return PlanRestreamResponseToJSONTyped(json, false);
}
exports.PlanRestreamResponseToJSON = PlanRestreamResponseToJSON;
function PlanRestreamResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'plan_restream_id': value['plan_restream_id'],
        'title': value['title'],
        'active': value['active'],
        'count_channel_min': value['count_channel_min'],
        'count_channel_max': value['count_channel_max'],
        'type': value['type'],
        'price_rub': value['price_rub'],
        'price_usd': value['price_usd'],
        'bitrate_max': value['bitrate_max'],
        'bitrate_min': value['bitrate_min'],
        'resolution': value['resolution'],
        'fps': value['fps'],
        'create_projects': value['create_projects'],
        'chat': value['chat'],
        'video': value['video'],
        'video_storage': value['video_storage'],
        'change_subject': value['change_subject'],
        'background_chat': value['background_chat'],
        'dedicated_server': value['dedicated_server'],
        'personal_manager': value['personal_manager'],
        'pull_link_limit': value['pull_link_limit'],
        'index': value['index'],
        'discount': (0, PlanRestreamDiscountResponse_1.PlanRestreamDiscountResponseToJSON)(value['discount']),
    };
}
exports.PlanRestreamResponseToJSONTyped = PlanRestreamResponseToJSONTyped;
