"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProjectHistoryResponseToJSONTyped = exports.ProjectHistoryResponseToJSON = exports.ProjectHistoryResponseFromJSONTyped = exports.ProjectHistoryResponseFromJSON = exports.instanceOfProjectHistoryResponse = exports.ProjectHistoryResponseActionEnum = void 0;
/**
 * @export
 */
exports.ProjectHistoryResponseActionEnum = {
    project_channel_invite_add: 'project_channel_invite_add',
    project_channel_invite_del: 'project_channel_invite_del',
    project_channel_invite_accept: 'project_channel_invite_accept',
    project_channel_invite_decline: 'project_channel_invite_decline',
    user_project_invite_add: 'user_project_invite_add',
    user_project_invite_del: 'user_project_invite_del',
    user_project_invite_accept: 'user_project_invite_accept',
    user_project_invite_decline: 'user_project_invite_decline',
    user_project_add: 'user_project_add',
    user_project_del: 'user_project_del',
    user_project_change: 'user_project_change',
    project_channel_add: 'project_channel_add',
    project_channel_del: 'project_channel_del',
    project_channel_change: 'project_channel_change'
};
/**
 * Check if a given object implements the ProjectHistoryResponse interface.
 */
function instanceOfProjectHistoryResponse(value) {
    if (!('id' in value) || value['id'] === undefined)
        return false;
    if (!('action' in value) || value['action'] === undefined)
        return false;
    if (!('project_id' in value) || value['project_id'] === undefined)
        return false;
    if (!('user_id' in value) || value['user_id'] === undefined)
        return false;
    if (!('group_id' in value) || value['group_id'] === undefined)
        return false;
    return true;
}
exports.instanceOfProjectHistoryResponse = instanceOfProjectHistoryResponse;
function ProjectHistoryResponseFromJSON(json) {
    return ProjectHistoryResponseFromJSONTyped(json, false);
}
exports.ProjectHistoryResponseFromJSON = ProjectHistoryResponseFromJSON;
function ProjectHistoryResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'id': json['id'],
        'action': json['action'],
        'project_id': json['project_id'],
        'user_id': json['user_id'],
        'group_id': json['group_id'],
        'date': json['date'] == null ? undefined : (new Date(json['date'])),
    };
}
exports.ProjectHistoryResponseFromJSONTyped = ProjectHistoryResponseFromJSONTyped;
function ProjectHistoryResponseToJSON(json) {
    return ProjectHistoryResponseToJSONTyped(json, false);
}
exports.ProjectHistoryResponseToJSON = ProjectHistoryResponseToJSON;
function ProjectHistoryResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'id': value['id'],
        'action': value['action'],
        'project_id': value['project_id'],
        'user_id': value['user_id'],
        'group_id': value['group_id'],
        'date': value['date'] == null ? undefined : ((value['date']).toISOString()),
    };
}
exports.ProjectHistoryResponseToJSONTyped = ProjectHistoryResponseToJSONTyped;
