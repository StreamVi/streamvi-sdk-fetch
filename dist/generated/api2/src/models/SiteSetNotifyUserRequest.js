"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SiteSetNotifyUserRequestToJSONTyped = exports.SiteSetNotifyUserRequestToJSON = exports.SiteSetNotifyUserRequestFromJSONTyped = exports.SiteSetNotifyUserRequestFromJSON = exports.instanceOfSiteSetNotifyUserRequest = exports.SiteSetNotifyUserRequestStatusEnum = exports.SiteSetNotifyUserRequestNotifyCategoryEnum = exports.SiteSetNotifyUserRequestNotifyChannelEnum = void 0;
/**
 * @export
 */
exports.SiteSetNotifyUserRequestNotifyChannelEnum = {
    telegram: 'telegram',
    cabinet: 'cabinet',
    mobile: 'mobile'
};
/**
 * @export
 */
exports.SiteSetNotifyUserRequestNotifyCategoryEnum = {
    important: 'important',
    stream: 'stream'
};
/**
 * @export
 */
exports.SiteSetNotifyUserRequestStatusEnum = {
    enable: 'enable',
    disable: 'disable'
};
/**
 * Check if a given object implements the SiteSetNotifyUserRequest interface.
 */
function instanceOfSiteSetNotifyUserRequest(value) {
    if (!('project_id' in value) || value['project_id'] === undefined)
        return false;
    if (!('notify_channel' in value) || value['notify_channel'] === undefined)
        return false;
    if (!('notify_category' in value) || value['notify_category'] === undefined)
        return false;
    if (!('status' in value) || value['status'] === undefined)
        return false;
    return true;
}
exports.instanceOfSiteSetNotifyUserRequest = instanceOfSiteSetNotifyUserRequest;
function SiteSetNotifyUserRequestFromJSON(json) {
    return SiteSetNotifyUserRequestFromJSONTyped(json, false);
}
exports.SiteSetNotifyUserRequestFromJSON = SiteSetNotifyUserRequestFromJSON;
function SiteSetNotifyUserRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'project_id': json['project_id'],
        'notify_channel': json['notify_channel'],
        'notify_category': json['notify_category'],
        'status': json['status'],
    };
}
exports.SiteSetNotifyUserRequestFromJSONTyped = SiteSetNotifyUserRequestFromJSONTyped;
function SiteSetNotifyUserRequestToJSON(json) {
    return SiteSetNotifyUserRequestToJSONTyped(json, false);
}
exports.SiteSetNotifyUserRequestToJSON = SiteSetNotifyUserRequestToJSON;
function SiteSetNotifyUserRequestToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'project_id': value['project_id'],
        'notify_channel': value['notify_channel'],
        'notify_category': value['notify_category'],
        'status': value['status'],
    };
}
exports.SiteSetNotifyUserRequestToJSONTyped = SiteSetNotifyUserRequestToJSONTyped;
