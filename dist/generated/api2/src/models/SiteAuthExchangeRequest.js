"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SiteAuthExchangeRequestToJSONTyped = exports.SiteAuthExchangeRequestToJSON = exports.SiteAuthExchangeRequestFromJSONTyped = exports.SiteAuthExchangeRequestFromJSON = exports.instanceOfSiteAuthExchangeRequest = exports.SiteAuthExchangeRequestAppEnum = exports.SiteAuthExchangeRequestLanguageEnum = exports.SiteAuthExchangeRequestVEnum = void 0;
/**
 * @export
 */
exports.SiteAuthExchangeRequestVEnum = {
    _1: '1',
    _2: '2',
    _3: '3'
};
/**
 * @export
 */
exports.SiteAuthExchangeRequestLanguageEnum = {
    ru: 'ru',
    en: 'en',
    cn: 'cn'
};
/**
 * @export
 */
exports.SiteAuthExchangeRequestAppEnum = {
    site: 'site',
    admin: 'admin',
    mobile: 'mobile',
    desktop: 'desktop'
};
/**
 * Check if a given object implements the SiteAuthExchangeRequest interface.
 */
function instanceOfSiteAuthExchangeRequest(value) {
    if (!('v' in value) || value['v'] === undefined)
        return false;
    if (!('language' in value) || value['language'] === undefined)
        return false;
    if (!('code' in value) || value['code'] === undefined)
        return false;
    if (!('userAgent' in value) || value['userAgent'] === undefined)
        return false;
    if (!('app' in value) || value['app'] === undefined)
        return false;
    return true;
}
exports.instanceOfSiteAuthExchangeRequest = instanceOfSiteAuthExchangeRequest;
function SiteAuthExchangeRequestFromJSON(json) {
    return SiteAuthExchangeRequestFromJSONTyped(json, false);
}
exports.SiteAuthExchangeRequestFromJSON = SiteAuthExchangeRequestFromJSON;
function SiteAuthExchangeRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'v': json['v'],
        'language': json['language'],
        'code': json['code'],
        'userAgent': json['userAgent'],
        'fingerprint': json['fingerprint'] == null ? undefined : json['fingerprint'],
        'app': json['app'],
    };
}
exports.SiteAuthExchangeRequestFromJSONTyped = SiteAuthExchangeRequestFromJSONTyped;
function SiteAuthExchangeRequestToJSON(json) {
    return SiteAuthExchangeRequestToJSONTyped(json, false);
}
exports.SiteAuthExchangeRequestToJSON = SiteAuthExchangeRequestToJSON;
function SiteAuthExchangeRequestToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'v': value['v'],
        'language': value['language'],
        'code': value['code'],
        'userAgent': value['userAgent'],
        'fingerprint': value['fingerprint'],
        'app': value['app'],
    };
}
exports.SiteAuthExchangeRequestToJSONTyped = SiteAuthExchangeRequestToJSONTyped;
