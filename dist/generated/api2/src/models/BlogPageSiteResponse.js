"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.BlogPageSiteResponseToJSONTyped = exports.BlogPageSiteResponseToJSON = exports.BlogPageSiteResponseFromJSONTyped = exports.BlogPageSiteResponseFromJSON = exports.instanceOfBlogPageSiteResponse = exports.BlogPageSiteResponseAltLanguagesEnum = exports.BlogPageSiteResponseLanguageIsoEnum = exports.BlogPageSiteResponseLanguageEnum = exports.BlogPageSiteResponseStatusEnum = void 0;
const BlogPageSiteResponseId_1 = require("./BlogPageSiteResponseId");
/**
 * @export
 */
exports.BlogPageSiteResponseStatusEnum = {
    None: 'None',
    Backlog: 'Backlog',
    Drafting: 'Drafting',
    Reviewing: 'Reviewing',
    Done: 'Done',
    Published: 'Published'
};
/**
 * @export
 */
exports.BlogPageSiteResponseLanguageEnum = {
    russian: 'russian',
    english: 'english',
    none: 'none'
};
/**
 * @export
 */
exports.BlogPageSiteResponseLanguageIsoEnum = {
    ru: 'ru',
    en: 'en',
    cn: 'cn'
};
/**
 * @export
 */
exports.BlogPageSiteResponseAltLanguagesEnum = {
    ru: 'ru',
    en: 'en',
    cn: 'cn'
};
/**
 * Check if a given object implements the BlogPageSiteResponse interface.
 */
function instanceOfBlogPageSiteResponse(value) {
    if (!('_id' in value) || value['_id'] === undefined)
        return false;
    if (!('url' in value) || value['url'] === undefined)
        return false;
    if (!('status' in value) || value['status'] === undefined)
        return false;
    if (!('date_update' in value) || value['date_update'] === undefined)
        return false;
    if (!('date_publish' in value) || value['date_publish'] === undefined)
        return false;
    if (!('tags' in value) || value['tags'] === undefined)
        return false;
    if (!('language' in value) || value['language'] === undefined)
        return false;
    if (!('language_iso' in value) || value['language_iso'] === undefined)
        return false;
    if (!('title' in value) || value['title'] === undefined)
        return false;
    if (!('image' in value) || value['image'] === undefined)
        return false;
    if (!('short_text' in value) || value['short_text'] === undefined)
        return false;
    if (!('text' in value) || value['text'] === undefined)
        return false;
    if (!('alt_languages' in value) || value['alt_languages'] === undefined)
        return false;
    return true;
}
exports.instanceOfBlogPageSiteResponse = instanceOfBlogPageSiteResponse;
function BlogPageSiteResponseFromJSON(json) {
    return BlogPageSiteResponseFromJSONTyped(json, false);
}
exports.BlogPageSiteResponseFromJSON = BlogPageSiteResponseFromJSON;
function BlogPageSiteResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        '_id': (0, BlogPageSiteResponseId_1.BlogPageSiteResponseIdFromJSON)(json['_id']),
        'url': json['url'],
        'status': json['status'],
        'date_update': (new Date(json['date_update'])),
        'date_publish': (new Date(json['date_publish'])),
        'tags': json['tags'],
        'language': json['language'],
        'language_iso': json['language_iso'],
        'title': json['title'],
        'image': json['image'],
        'short_text': json['short_text'],
        'text': json['text'],
        'alt_languages': json['alt_languages'],
    };
}
exports.BlogPageSiteResponseFromJSONTyped = BlogPageSiteResponseFromJSONTyped;
function BlogPageSiteResponseToJSON(json) {
    return BlogPageSiteResponseToJSONTyped(json, false);
}
exports.BlogPageSiteResponseToJSON = BlogPageSiteResponseToJSON;
function BlogPageSiteResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        '_id': (0, BlogPageSiteResponseId_1.BlogPageSiteResponseIdToJSON)(value['_id']),
        'url': value['url'],
        'status': value['status'],
        'date_update': ((value['date_update']).toISOString()),
        'date_publish': ((value['date_publish']).toISOString()),
        'tags': value['tags'],
        'language': value['language'],
        'language_iso': value['language_iso'],
        'title': value['title'],
        'image': value['image'],
        'short_text': value['short_text'],
        'text': value['text'],
        'alt_languages': value['alt_languages'],
    };
}
exports.BlogPageSiteResponseToJSONTyped = BlogPageSiteResponseToJSONTyped;
