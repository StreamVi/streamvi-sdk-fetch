"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.RtmpServerListItemToJSONTyped = exports.RtmpServerListItemToJSON = exports.RtmpServerListItemFromJSONTyped = exports.RtmpServerListItemFromJSON = exports.instanceOfRtmpServerListItem = exports.RtmpServerListItemServerStatusEnum = void 0;
const RtmpServerPlatformQuality_1 = require("./RtmpServerPlatformQuality");
const CountryItem_1 = require("./CountryItem");
const RtmpServerLoading_1 = require("./RtmpServerLoading");
/**
 * @export
 */
exports.RtmpServerListItemServerStatusEnum = {
    Good: 'good',
    Problem: 'problem',
    Bad: 'bad'
};
/**
 * Check if a given object implements the RtmpServerListItem interface.
 */
function instanceOfRtmpServerListItem(value) {
    if (!('city' in value) || value['city'] === undefined)
        return false;
    if (!('url' in value) || value['url'] === undefined)
        return false;
    if (!('country' in value) || value['country'] === undefined)
        return false;
    if (!('network' in value) || value['network'] === undefined)
        return false;
    if (!('cpu' in value) || value['cpu'] === undefined)
        return false;
    if (!('ram' in value) || value['ram'] === undefined)
        return false;
    if (!('quality' in value) || value['quality'] === undefined)
        return false;
    if (!('index' in value) || value['index'] === undefined)
        return false;
    if (!('serverStatus' in value) || value['serverStatus'] === undefined)
        return false;
    if (!('platforms' in value) || value['platforms'] === undefined)
        return false;
    return true;
}
exports.instanceOfRtmpServerListItem = instanceOfRtmpServerListItem;
function RtmpServerListItemFromJSON(json) {
    return RtmpServerListItemFromJSONTyped(json, false);
}
exports.RtmpServerListItemFromJSON = RtmpServerListItemFromJSON;
function RtmpServerListItemFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'city': json['city'],
        'url': json['url'],
        'country': (0, CountryItem_1.CountryItemFromJSON)(json['country']),
        'network': (0, RtmpServerLoading_1.RtmpServerLoadingFromJSON)(json['network']),
        'cpu': (0, RtmpServerLoading_1.RtmpServerLoadingFromJSON)(json['cpu']),
        'ram': (0, RtmpServerLoading_1.RtmpServerLoadingFromJSON)(json['ram']),
        'quality': json['quality'],
        'index': json['index'],
        'serverStatus': json['serverStatus'],
        'platforms': (json['platforms'].map(RtmpServerPlatformQuality_1.RtmpServerPlatformQualityFromJSON)),
    };
}
exports.RtmpServerListItemFromJSONTyped = RtmpServerListItemFromJSONTyped;
function RtmpServerListItemToJSON(json) {
    return RtmpServerListItemToJSONTyped(json, false);
}
exports.RtmpServerListItemToJSON = RtmpServerListItemToJSON;
function RtmpServerListItemToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'city': value['city'],
        'url': value['url'],
        'country': (0, CountryItem_1.CountryItemToJSON)(value['country']),
        'network': (0, RtmpServerLoading_1.RtmpServerLoadingToJSON)(value['network']),
        'cpu': (0, RtmpServerLoading_1.RtmpServerLoadingToJSON)(value['cpu']),
        'ram': (0, RtmpServerLoading_1.RtmpServerLoadingToJSON)(value['ram']),
        'quality': value['quality'],
        'index': value['index'],
        'serverStatus': value['serverStatus'],
        'platforms': (value['platforms'].map(RtmpServerPlatformQuality_1.RtmpServerPlatformQualityToJSON)),
    };
}
exports.RtmpServerListItemToJSONTyped = RtmpServerListItemToJSONTyped;
