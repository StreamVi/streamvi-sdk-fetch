"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.MethodProjectLiveStatusInfoToJSONTyped = exports.MethodProjectLiveStatusInfoToJSON = exports.MethodProjectLiveStatusInfoFromJSONTyped = exports.MethodProjectLiveStatusInfoFromJSON = exports.instanceOfMethodProjectLiveStatusInfo = void 0;
const MethodProjectLiveStatusInfoRestreamData_1 = require("./MethodProjectLiveStatusInfoRestreamData");
/**
 * Check if a given object implements the MethodProjectLiveStatusInfo interface.
 */
function instanceOfMethodProjectLiveStatusInfo(value) {
    if (!('connect_id' in value) || value['connect_id'] === undefined)
        return false;
    if (!('connect_id_v2' in value) || value['connect_id_v2'] === undefined)
        return false;
    if (!('fps' in value) || value['fps'] === undefined)
        return false;
    if (!('key_frame' in value) || value['key_frame'] === undefined)
        return false;
    if (!('count' in value) || value['count'] === undefined)
        return false;
    if (!('speed' in value) || value['speed'] === undefined)
        return false;
    if (!('quality' in value) || value['quality'] === undefined)
        return false;
    if (!('bitrate' in value) || value['bitrate'] === undefined)
        return false;
    if (!('full_bitrate' in value) || value['full_bitrate'] === undefined)
        return false;
    if (!('status' in value) || value['status'] === undefined)
        return false;
    if (!('restrims' in value) || value['restrims'] === undefined)
        return false;
    return true;
}
exports.instanceOfMethodProjectLiveStatusInfo = instanceOfMethodProjectLiveStatusInfo;
function MethodProjectLiveStatusInfoFromJSON(json) {
    return MethodProjectLiveStatusInfoFromJSONTyped(json, false);
}
exports.MethodProjectLiveStatusInfoFromJSON = MethodProjectLiveStatusInfoFromJSON;
function MethodProjectLiveStatusInfoFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'restream_data': json['restream_data'] == null ? undefined : (json['restream_data'].map(MethodProjectLiveStatusInfoRestreamData_1.MethodProjectLiveStatusInfoRestreamDataFromJSON)),
        'connect_id': json['connect_id'],
        'connect_id_v2': json['connect_id_v2'],
        'fps': json['fps'],
        'key_frame': json['key_frame'],
        'count': json['count'],
        'speed': json['speed'],
        'quality': json['quality'],
        'bitrate': json['bitrate'],
        'full_bitrate': json['full_bitrate'],
        'status': json['status'],
        'restrims': json['restrims'],
    };
}
exports.MethodProjectLiveStatusInfoFromJSONTyped = MethodProjectLiveStatusInfoFromJSONTyped;
function MethodProjectLiveStatusInfoToJSON(json) {
    return MethodProjectLiveStatusInfoToJSONTyped(json, false);
}
exports.MethodProjectLiveStatusInfoToJSON = MethodProjectLiveStatusInfoToJSON;
function MethodProjectLiveStatusInfoToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'restream_data': value['restream_data'] == null ? undefined : (value['restream_data'].map(MethodProjectLiveStatusInfoRestreamData_1.MethodProjectLiveStatusInfoRestreamDataToJSON)),
        'connect_id': value['connect_id'],
        'connect_id_v2': value['connect_id_v2'],
        'fps': value['fps'],
        'key_frame': value['key_frame'],
        'count': value['count'],
        'speed': value['speed'],
        'quality': value['quality'],
        'bitrate': value['bitrate'],
        'full_bitrate': value['full_bitrate'],
        'status': value['status'],
        'restrims': value['restrims'],
    };
}
exports.MethodProjectLiveStatusInfoToJSONTyped = MethodProjectLiveStatusInfoToJSONTyped;
