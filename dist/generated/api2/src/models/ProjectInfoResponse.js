"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProjectInfoResponseToJSONTyped = exports.ProjectInfoResponseToJSON = exports.ProjectInfoResponseFromJSONTyped = exports.ProjectInfoResponseFromJSON = exports.instanceOfProjectInfoResponse = exports.ProjectInfoResponseLanguageEnum = exports.ProjectInfoResponseVEnum = void 0;
const ProjectInfoAccessResponse_1 = require("./ProjectInfoAccessResponse");
const ProjectInfoStorageResponse_1 = require("./ProjectInfoStorageResponse");
const ProjectInfoTranscodingResponse_1 = require("./ProjectInfoTranscodingResponse");
const ProjectInfoDataResponse_1 = require("./ProjectInfoDataResponse");
const ProjectInfoRestreamResponse_1 = require("./ProjectInfoRestreamResponse");
/**
 * @export
 */
exports.ProjectInfoResponseVEnum = {
    _1: '1',
    _2: '2',
    _3: '3'
};
/**
 * @export
 */
exports.ProjectInfoResponseLanguageEnum = {
    Ru: 'ru',
    En: 'en',
    Cn: 'cn'
};
/**
 * Check if a given object implements the ProjectInfoResponse interface.
 */
function instanceOfProjectInfoResponse(value) {
    if (!('v' in value) || value['v'] === undefined)
        return false;
    if (!('language' in value) || value['language'] === undefined)
        return false;
    if (!('data' in value) || value['data'] === undefined)
        return false;
    if (!('restream' in value) || value['restream'] === undefined)
        return false;
    if (!('transcoding' in value) || value['transcoding'] === undefined)
        return false;
    if (!('storage' in value) || value['storage'] === undefined)
        return false;
    if (!('access' in value) || value['access'] === undefined)
        return false;
    return true;
}
exports.instanceOfProjectInfoResponse = instanceOfProjectInfoResponse;
function ProjectInfoResponseFromJSON(json) {
    return ProjectInfoResponseFromJSONTyped(json, false);
}
exports.ProjectInfoResponseFromJSON = ProjectInfoResponseFromJSON;
function ProjectInfoResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'v': json['v'],
        'language': json['language'],
        'data': (0, ProjectInfoDataResponse_1.ProjectInfoDataResponseFromJSON)(json['data']),
        'restream': (0, ProjectInfoRestreamResponse_1.ProjectInfoRestreamResponseFromJSON)(json['restream']),
        'transcoding': (0, ProjectInfoTranscodingResponse_1.ProjectInfoTranscodingResponseFromJSON)(json['transcoding']),
        'storage': (0, ProjectInfoStorageResponse_1.ProjectInfoStorageResponseFromJSON)(json['storage']),
        'access': (0, ProjectInfoAccessResponse_1.ProjectInfoAccessResponseFromJSON)(json['access']),
    };
}
exports.ProjectInfoResponseFromJSONTyped = ProjectInfoResponseFromJSONTyped;
function ProjectInfoResponseToJSON(json) {
    return ProjectInfoResponseToJSONTyped(json, false);
}
exports.ProjectInfoResponseToJSON = ProjectInfoResponseToJSON;
function ProjectInfoResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'v': value['v'],
        'language': value['language'],
        'data': (0, ProjectInfoDataResponse_1.ProjectInfoDataResponseToJSON)(value['data']),
        'restream': (0, ProjectInfoRestreamResponse_1.ProjectInfoRestreamResponseToJSON)(value['restream']),
        'transcoding': (0, ProjectInfoTranscodingResponse_1.ProjectInfoTranscodingResponseToJSON)(value['transcoding']),
        'storage': (0, ProjectInfoStorageResponse_1.ProjectInfoStorageResponseToJSON)(value['storage']),
        'access': (0, ProjectInfoAccessResponse_1.ProjectInfoAccessResponseToJSON)(value['access']),
    };
}
exports.ProjectInfoResponseToJSONTyped = ProjectInfoResponseToJSONTyped;
