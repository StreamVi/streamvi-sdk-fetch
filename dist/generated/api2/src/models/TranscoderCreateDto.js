"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.TranscoderCreateDtoToJSONTyped = exports.TranscoderCreateDtoToJSON = exports.TranscoderCreateDtoFromJSONTyped = exports.TranscoderCreateDtoFromJSON = exports.instanceOfTranscoderCreateDto = exports.TranscoderCreateDtoLanguageEnum = exports.TranscoderCreateDtoVEnum = void 0;
/**
 * @export
 */
exports.TranscoderCreateDtoVEnum = {
    _1: '1',
    _2: '2',
    _3: '3'
};
/**
 * @export
 */
exports.TranscoderCreateDtoLanguageEnum = {
    Ru: 'ru',
    En: 'en',
    Cn: 'cn'
};
/**
 * Check if a given object implements the TranscoderCreateDto interface.
 */
function instanceOfTranscoderCreateDto(value) {
    if (!('v' in value) || value['v'] === undefined)
        return false;
    if (!('language' in value) || value['language'] === undefined)
        return false;
    if (!('projectId' in value) || value['projectId'] === undefined)
        return false;
    if (!('name' in value) || value['name'] === undefined)
        return false;
    if (!('videoCodecId' in value) || value['videoCodecId'] === undefined)
        return false;
    return true;
}
exports.instanceOfTranscoderCreateDto = instanceOfTranscoderCreateDto;
function TranscoderCreateDtoFromJSON(json) {
    return TranscoderCreateDtoFromJSONTyped(json, false);
}
exports.TranscoderCreateDtoFromJSON = TranscoderCreateDtoFromJSON;
function TranscoderCreateDtoFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'v': json['v'],
        'language': json['language'],
        'projectId': json['project_id'],
        'width': json['width'] == null ? undefined : json['width'],
        'height': json['height'] == null ? undefined : json['height'],
        'fps': json['fps'] == null ? undefined : json['fps'],
        'vBitrate': json['vBitrate'] == null ? undefined : json['vBitrate'],
        'aBitrate': json['aBitrate'] == null ? undefined : json['aBitrate'],
        'name': json['name'],
        'rotation': json['rotation'] == null ? undefined : json['rotation'],
        'bFrames': json['bFrames'] == null ? undefined : json['bFrames'],
        'channelIds': json['channelIds'] == null ? undefined : json['channelIds'],
        'videoCodecId': json['videoCodecId'],
    };
}
exports.TranscoderCreateDtoFromJSONTyped = TranscoderCreateDtoFromJSONTyped;
function TranscoderCreateDtoToJSON(json) {
    return TranscoderCreateDtoToJSONTyped(json, false);
}
exports.TranscoderCreateDtoToJSON = TranscoderCreateDtoToJSON;
function TranscoderCreateDtoToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'v': value['v'],
        'language': value['language'],
        'project_id': value['projectId'],
        'width': value['width'],
        'height': value['height'],
        'fps': value['fps'],
        'vBitrate': value['vBitrate'],
        'aBitrate': value['aBitrate'],
        'name': value['name'],
        'rotation': value['rotation'],
        'bFrames': value['bFrames'],
        'channelIds': value['channelIds'],
        'videoCodecId': value['videoCodecId'],
    };
}
exports.TranscoderCreateDtoToJSONTyped = TranscoderCreateDtoToJSONTyped;
