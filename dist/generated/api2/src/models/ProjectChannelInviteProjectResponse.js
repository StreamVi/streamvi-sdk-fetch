"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProjectChannelInviteProjectResponseToJSONTyped = exports.ProjectChannelInviteProjectResponseToJSON = exports.ProjectChannelInviteProjectResponseFromJSONTyped = exports.ProjectChannelInviteProjectResponseFromJSON = exports.instanceOfProjectChannelInviteProjectResponse = void 0;
/**
 * Check if a given object implements the ProjectChannelInviteProjectResponse interface.
 */
function instanceOfProjectChannelInviteProjectResponse(value) {
    if (!('userId' in value) || value['userId'] === undefined)
        return false;
    if (!('name' in value) || value['name'] === undefined)
        return false;
    if (!('fename' in value) || value['fename'] === undefined)
        return false;
    if (!('photo50' in value) || value['photo50'] === undefined)
        return false;
    if (!('refId' in value) || value['refId'] === undefined)
        return false;
    return true;
}
exports.instanceOfProjectChannelInviteProjectResponse = instanceOfProjectChannelInviteProjectResponse;
function ProjectChannelInviteProjectResponseFromJSON(json) {
    return ProjectChannelInviteProjectResponseFromJSONTyped(json, false);
}
exports.ProjectChannelInviteProjectResponseFromJSON = ProjectChannelInviteProjectResponseFromJSON;
function ProjectChannelInviteProjectResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'userId': json['user_id'],
        'name': json['name'],
        'fename': json['fename'],
        'photo50': json['photo_50'],
        'refId': json['ref_id'],
    };
}
exports.ProjectChannelInviteProjectResponseFromJSONTyped = ProjectChannelInviteProjectResponseFromJSONTyped;
function ProjectChannelInviteProjectResponseToJSON(json) {
    return ProjectChannelInviteProjectResponseToJSONTyped(json, false);
}
exports.ProjectChannelInviteProjectResponseToJSON = ProjectChannelInviteProjectResponseToJSON;
function ProjectChannelInviteProjectResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'user_id': value['userId'],
        'name': value['name'],
        'fename': value['fename'],
        'photo_50': value['photo50'],
        'ref_id': value['refId'],
    };
}
exports.ProjectChannelInviteProjectResponseToJSONTyped = ProjectChannelInviteProjectResponseToJSONTyped;
