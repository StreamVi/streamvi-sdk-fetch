"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PlanTranscoding2UserItemResponseToJSONTyped = exports.PlanTranscoding2UserItemResponseToJSON = exports.PlanTranscoding2UserItemResponseFromJSONTyped = exports.PlanTranscoding2UserItemResponseFromJSON = exports.instanceOfPlanTranscoding2UserItemResponse = exports.PlanTranscoding2UserItemResponsePeriodEnum = void 0;
/**
 * @export
 */
exports.PlanTranscoding2UserItemResponsePeriodEnum = {
    Month: 'month',
    Year: 'year'
};
/**
 * Check if a given object implements the PlanTranscoding2UserItemResponse interface.
 */
function instanceOfPlanTranscoding2UserItemResponse(value) {
    if (!('planTranscoding2userId' in value) || value['planTranscoding2userId'] === undefined)
        return false;
    if (!('count' in value) || value['count'] === undefined)
        return false;
    if (!('dateStart' in value) || value['dateStart'] === undefined)
        return false;
    if (!('dateEnd' in value) || value['dateEnd'] === undefined)
        return false;
    if (!('dateCreate' in value) || value['dateCreate'] === undefined)
        return false;
    if (!('period' in value) || value['period'] === undefined)
        return false;
    if (!('periodUuid' in value) || value['periodUuid'] === undefined)
        return false;
    if (!('status' in value) || value['status'] === undefined)
        return false;
    return true;
}
exports.instanceOfPlanTranscoding2UserItemResponse = instanceOfPlanTranscoding2UserItemResponse;
function PlanTranscoding2UserItemResponseFromJSON(json) {
    return PlanTranscoding2UserItemResponseFromJSONTyped(json, false);
}
exports.PlanTranscoding2UserItemResponseFromJSON = PlanTranscoding2UserItemResponseFromJSON;
function PlanTranscoding2UserItemResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'planTranscoding2userId': json['plan_transcoding2user_id'],
        'count': json['count'],
        'dateStart': (new Date(json['date_start'])),
        'dateEnd': (new Date(json['date_end'])),
        'dateCreate': (new Date(json['date_create'])),
        'period': json['period'],
        'periodUuid': json['period_uuid'],
        'status': json['status'],
        'prolongation': json['prolongation'] == null ? undefined : json['prolongation'],
    };
}
exports.PlanTranscoding2UserItemResponseFromJSONTyped = PlanTranscoding2UserItemResponseFromJSONTyped;
function PlanTranscoding2UserItemResponseToJSON(json) {
    return PlanTranscoding2UserItemResponseToJSONTyped(json, false);
}
exports.PlanTranscoding2UserItemResponseToJSON = PlanTranscoding2UserItemResponseToJSON;
function PlanTranscoding2UserItemResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'plan_transcoding2user_id': value['planTranscoding2userId'],
        'count': value['count'],
        'date_start': ((value['dateStart']).toISOString()),
        'date_end': ((value['dateEnd']).toISOString()),
        'date_create': ((value['dateCreate']).toISOString()),
        'period': value['period'],
        'period_uuid': value['periodUuid'],
        'status': value['status'],
        'prolongation': value['prolongation'],
    };
}
exports.PlanTranscoding2UserItemResponseToJSONTyped = PlanTranscoding2UserItemResponseToJSONTyped;
