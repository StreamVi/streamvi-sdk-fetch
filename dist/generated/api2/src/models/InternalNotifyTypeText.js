"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.InternalNotifyTypeTextToJSONTyped = exports.InternalNotifyTypeTextToJSON = exports.InternalNotifyTypeTextFromJSONTyped = exports.InternalNotifyTypeTextFromJSON = exports.instanceOfInternalNotifyTypeText = exports.InternalNotifyTypeTextLanguageIsoEnum = exports.InternalNotifyTypeTextLanguageEnum = void 0;
/**
 * @export
 */
exports.InternalNotifyTypeTextLanguageEnum = {
    Russian: 'russian',
    English: 'english',
    None: 'none'
};
/**
 * @export
 */
exports.InternalNotifyTypeTextLanguageIsoEnum = {
    Ru: 'ru',
    En: 'en',
    Cn: 'cn'
};
/**
 * Check if a given object implements the InternalNotifyTypeText interface.
 */
function instanceOfInternalNotifyTypeText(value) {
    if (!('language' in value) || value['language'] === undefined)
        return false;
    if (!('languageIso' in value) || value['languageIso'] === undefined)
        return false;
    if (!('title' in value) || value['title'] === undefined)
        return false;
    if (!('text' in value) || value['text'] === undefined)
        return false;
    return true;
}
exports.instanceOfInternalNotifyTypeText = instanceOfInternalNotifyTypeText;
function InternalNotifyTypeTextFromJSON(json) {
    return InternalNotifyTypeTextFromJSONTyped(json, false);
}
exports.InternalNotifyTypeTextFromJSON = InternalNotifyTypeTextFromJSON;
function InternalNotifyTypeTextFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'language': json['language'],
        'languageIso': json['language_iso'],
        'title': json['title'],
        'text': json['text'],
    };
}
exports.InternalNotifyTypeTextFromJSONTyped = InternalNotifyTypeTextFromJSONTyped;
function InternalNotifyTypeTextToJSON(json) {
    return InternalNotifyTypeTextToJSONTyped(json, false);
}
exports.InternalNotifyTypeTextToJSON = InternalNotifyTypeTextToJSON;
function InternalNotifyTypeTextToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'language': value['language'],
        'language_iso': value['languageIso'],
        'title': value['title'],
        'text': value['text'],
    };
}
exports.InternalNotifyTypeTextToJSONTyped = InternalNotifyTypeTextToJSONTyped;
