"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.UserProjectResponseToJSONTyped = exports.UserProjectResponseToJSON = exports.UserProjectResponseFromJSONTyped = exports.UserProjectResponseFromJSON = exports.instanceOfUserProjectResponse = exports.UserProjectResponseAccessTypeEnum = void 0;
const UserProject2ProjectResponse_1 = require("./UserProject2ProjectResponse");
/**
 * @export
 */
exports.UserProjectResponseAccessTypeEnum = {
    NUMBER_0: 0,
    NUMBER_1: 1,
    NUMBER_2: 2
};
/**
 * Check if a given object implements the UserProjectResponse interface.
 */
function instanceOfUserProjectResponse(value) {
    if (!('id' in value) || value['id'] === undefined)
        return false;
    if (!('user_id' in value) || value['user_id'] === undefined)
        return false;
    if (!('project_id' in value) || value['project_id'] === undefined)
        return false;
    if (!('access_type' in value) || value['access_type'] === undefined)
        return false;
    if (!('project' in value) || value['project'] === undefined)
        return false;
    if (!('member_count' in value) || value['member_count'] === undefined)
        return false;
    return true;
}
exports.instanceOfUserProjectResponse = instanceOfUserProjectResponse;
function UserProjectResponseFromJSON(json) {
    return UserProjectResponseFromJSONTyped(json, false);
}
exports.UserProjectResponseFromJSON = UserProjectResponseFromJSON;
function UserProjectResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'id': json['id'],
        'user_id': json['user_id'],
        'project_id': json['project_id'],
        'access_type': json['access_type'],
        'project': (0, UserProject2ProjectResponse_1.UserProject2ProjectResponseFromJSON)(json['project']),
        'member_count': json['member_count'],
    };
}
exports.UserProjectResponseFromJSONTyped = UserProjectResponseFromJSONTyped;
function UserProjectResponseToJSON(json) {
    return UserProjectResponseToJSONTyped(json, false);
}
exports.UserProjectResponseToJSON = UserProjectResponseToJSON;
function UserProjectResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'id': value['id'],
        'user_id': value['user_id'],
        'project_id': value['project_id'],
        'access_type': value['access_type'],
        'project': (0, UserProject2ProjectResponse_1.UserProject2ProjectResponseToJSON)(value['project']),
        'member_count': value['member_count'],
    };
}
exports.UserProjectResponseToJSONTyped = UserProjectResponseToJSONTyped;
