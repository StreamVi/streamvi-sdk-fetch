"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ErrorDataToJSONTyped = exports.ErrorDataToJSON = exports.ErrorDataFromJSONTyped = exports.ErrorDataFromJSON = exports.instanceOfErrorData = void 0;
const ValidationErrorDto_1 = require("./ValidationErrorDto");
/**
 * Check if a given object implements the ErrorData interface.
 */
function instanceOfErrorData(value) {
    if (!('name' in value) || value['name'] === undefined)
        return false;
    if (!('msg' in value) || value['msg'] === undefined)
        return false;
    if (!('options' in value) || value['options'] === undefined)
        return false;
    if (!('data' in value) || value['data'] === undefined)
        return false;
    return true;
}
exports.instanceOfErrorData = instanceOfErrorData;
function ErrorDataFromJSON(json) {
    return ErrorDataFromJSONTyped(json, false);
}
exports.ErrorDataFromJSON = ErrorDataFromJSON;
function ErrorDataFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'name': json['name'],
        'msg': json['msg'],
        'validator_error': json['validator_error'] == null ? undefined : (json['validator_error'].map(ValidationErrorDto_1.ValidationErrorDtoFromJSON)),
        'options': json['options'],
        'data': json['data'],
    };
}
exports.ErrorDataFromJSONTyped = ErrorDataFromJSONTyped;
function ErrorDataToJSON(json) {
    return ErrorDataToJSONTyped(json, false);
}
exports.ErrorDataToJSON = ErrorDataToJSON;
function ErrorDataToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'name': value['name'],
        'msg': value['msg'],
        'validator_error': value['validator_error'] == null ? undefined : (value['validator_error'].map(ValidationErrorDto_1.ValidationErrorDtoToJSON)),
        'options': value['options'],
        'data': value['data'],
    };
}
exports.ErrorDataToJSONTyped = ErrorDataToJSONTyped;
