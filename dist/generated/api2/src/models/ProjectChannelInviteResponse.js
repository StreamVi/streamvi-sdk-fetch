"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProjectChannelInviteResponseToJSONTyped = exports.ProjectChannelInviteResponseToJSON = exports.ProjectChannelInviteResponseFromJSONTyped = exports.ProjectChannelInviteResponseFromJSON = exports.instanceOfProjectChannelInviteResponse = void 0;
const ProjectChannelInviteProjectResponse_1 = require("./ProjectChannelInviteProjectResponse");
/**
 * Check if a given object implements the ProjectChannelInviteResponse interface.
 */
function instanceOfProjectChannelInviteResponse(value) {
    if (!('project_channel_invite_id' in value) || value['project_channel_invite_id'] === undefined)
        return false;
    if (!('channel_id' in value) || value['channel_id'] === undefined)
        return false;
    if (!('to_project_id' in value) || value['to_project_id'] === undefined)
        return false;
    if (!('access_type' in value) || value['access_type'] === undefined)
        return false;
    if (!('date' in value) || value['date'] === undefined)
        return false;
    if (!('secret' in value) || value['secret'] === undefined)
        return false;
    if (!('email' in value) || value['email'] === undefined)
        return false;
    if (!('reject' in value) || value['reject'] === undefined)
        return false;
    if (!('from_user_id' in value) || value['from_user_id'] === undefined)
        return false;
    if (!('from_project_id' in value) || value['from_project_id'] === undefined)
        return false;
    return true;
}
exports.instanceOfProjectChannelInviteResponse = instanceOfProjectChannelInviteResponse;
function ProjectChannelInviteResponseFromJSON(json) {
    return ProjectChannelInviteResponseFromJSONTyped(json, false);
}
exports.ProjectChannelInviteResponseFromJSON = ProjectChannelInviteResponseFromJSON;
function ProjectChannelInviteResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'project_channel_invite_id': json['project_channel_invite_id'],
        'channel_id': json['channel_id'],
        'to_project_id': json['to_project_id'],
        'access_type': json['access_type'],
        'date': (new Date(json['date'])),
        'secret': json['secret'],
        'email': json['email'],
        'reject': json['reject'],
        'from_user_id': json['from_user_id'],
        'from_project_id': json['from_project_id'],
        'to_project_': json['to_project_'] == null ? undefined : (0, ProjectChannelInviteProjectResponse_1.ProjectChannelInviteProjectResponseFromJSON)(json['to_project_']),
    };
}
exports.ProjectChannelInviteResponseFromJSONTyped = ProjectChannelInviteResponseFromJSONTyped;
function ProjectChannelInviteResponseToJSON(json) {
    return ProjectChannelInviteResponseToJSONTyped(json, false);
}
exports.ProjectChannelInviteResponseToJSON = ProjectChannelInviteResponseToJSON;
function ProjectChannelInviteResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'project_channel_invite_id': value['project_channel_invite_id'],
        'channel_id': value['channel_id'],
        'to_project_id': value['to_project_id'],
        'access_type': value['access_type'],
        'date': ((value['date']).toISOString()),
        'secret': value['secret'],
        'email': value['email'],
        'reject': value['reject'],
        'from_user_id': value['from_user_id'],
        'from_project_id': value['from_project_id'],
        'to_project_': (0, ProjectChannelInviteProjectResponse_1.ProjectChannelInviteProjectResponseToJSON)(value['to_project_']),
    };
}
exports.ProjectChannelInviteResponseToJSONTyped = ProjectChannelInviteResponseToJSONTyped;
