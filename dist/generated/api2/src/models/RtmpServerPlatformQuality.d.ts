/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface RtmpServerPlatformQuality
 */
export interface RtmpServerPlatformQuality {
    /**
     * Platform id
     * @type {number}
     * @memberof RtmpServerPlatformQuality
     */
    id: number;
    /**
     * Quality connection
     * @type {number}
     * @memberof RtmpServerPlatformQuality
     */
    quality: number;
    /**
     * Title of platform
     * @type {string}
     * @memberof RtmpServerPlatformQuality
     */
    title: string;
    /**
     * Quality in string format
     * @type {string}
     * @memberof RtmpServerPlatformQuality
     */
    status: RtmpServerPlatformQualityStatusEnum;
    /**
     * Reconnect
     * @type {number}
     * @memberof RtmpServerPlatformQuality
     */
    reconnect: number;
}
/**
 * @export
 */
export declare const RtmpServerPlatformQualityStatusEnum: {
    readonly good: "good";
    readonly problem: "problem";
    readonly bad: "bad";
};
export type RtmpServerPlatformQualityStatusEnum = typeof RtmpServerPlatformQualityStatusEnum[keyof typeof RtmpServerPlatformQualityStatusEnum];
/**
 * Check if a given object implements the RtmpServerPlatformQuality interface.
 */
export declare function instanceOfRtmpServerPlatformQuality(value: object): value is RtmpServerPlatformQuality;
export declare function RtmpServerPlatformQualityFromJSON(json: any): RtmpServerPlatformQuality;
export declare function RtmpServerPlatformQualityFromJSONTyped(json: any, ignoreDiscriminator: boolean): RtmpServerPlatformQuality;
export declare function RtmpServerPlatformQualityToJSON(json: any): RtmpServerPlatformQuality;
export declare function RtmpServerPlatformQualityToJSONTyped(value?: RtmpServerPlatformQuality | null, ignoreDiscriminator?: boolean): any;
//# sourceMappingURL=RtmpServerPlatformQuality.d.ts.map