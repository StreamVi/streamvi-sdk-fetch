"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PlanStorageResponseToJSONTyped = exports.PlanStorageResponseToJSON = exports.PlanStorageResponseFromJSONTyped = exports.PlanStorageResponseFromJSON = exports.instanceOfPlanStorageResponse = void 0;
const PlanStorageDiscountResponse_1 = require("./PlanStorageDiscountResponse");
/**
 * Check if a given object implements the PlanStorageResponse interface.
 */
function instanceOfPlanStorageResponse(value) {
    if (!('planStorageId' in value) || value['planStorageId'] === undefined)
        return false;
    if (!('title' in value) || value['title'] === undefined)
        return false;
    if (!('min' in value) || value['min'] === undefined)
        return false;
    if (!('max' in value) || value['max'] === undefined)
        return false;
    if (!('priceRub' in value) || value['priceRub'] === undefined)
        return false;
    if (!('priceUsd' in value) || value['priceUsd'] === undefined)
        return false;
    if (!('step' in value) || value['step'] === undefined)
        return false;
    if (!('active' in value) || value['active'] === undefined)
        return false;
    if (!('discount' in value) || value['discount'] === undefined)
        return false;
    return true;
}
exports.instanceOfPlanStorageResponse = instanceOfPlanStorageResponse;
function PlanStorageResponseFromJSON(json) {
    return PlanStorageResponseFromJSONTyped(json, false);
}
exports.PlanStorageResponseFromJSON = PlanStorageResponseFromJSON;
function PlanStorageResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'planStorageId': json['plan_storage_id'],
        'title': json['title'],
        'min': json['min'],
        'max': json['max'],
        'priceRub': json['price_rub'],
        'priceUsd': json['price_usd'],
        'step': json['step'],
        'active': json['active'],
        'discount': (0, PlanStorageDiscountResponse_1.PlanStorageDiscountResponseFromJSON)(json['discount']),
    };
}
exports.PlanStorageResponseFromJSONTyped = PlanStorageResponseFromJSONTyped;
function PlanStorageResponseToJSON(json) {
    return PlanStorageResponseToJSONTyped(json, false);
}
exports.PlanStorageResponseToJSON = PlanStorageResponseToJSON;
function PlanStorageResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'plan_storage_id': value['planStorageId'],
        'title': value['title'],
        'min': value['min'],
        'max': value['max'],
        'price_rub': value['priceRub'],
        'price_usd': value['priceUsd'],
        'step': value['step'],
        'active': value['active'],
        'discount': (0, PlanStorageDiscountResponse_1.PlanStorageDiscountResponseToJSON)(value['discount']),
    };
}
exports.PlanStorageResponseToJSONTyped = PlanStorageResponseToJSONTyped;
