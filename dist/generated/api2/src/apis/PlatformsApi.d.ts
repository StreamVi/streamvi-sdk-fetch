/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { ListOfCategoryItemResponse, SitePlatformsSupportedResponse } from '../models/index';
export interface PlatformsAddAccountV1Request {
    language: PlatformsAddAccountV1LanguageEnum;
    project_id: number;
    platform: PlatformsAddAccountV1PlatformEnum;
    v?: PlatformsAddAccountV1VEnum;
}
export interface PlatformsGetCategoryV1Request {
    language: PlatformsGetCategoryV1LanguageEnum;
    type: PlatformsGetCategoryV1TypeEnum;
    v?: PlatformsGetCategoryV1VEnum;
    q?: string;
}
export interface PlatformsLogoutAccountV1Request {
    language: PlatformsLogoutAccountV1LanguageEnum;
    id: string;
    platform: PlatformsLogoutAccountV1PlatformEnum;
    v?: PlatformsLogoutAccountV1VEnum;
}
export interface PlatformsPlatformListV1Request {
    language: PlatformsPlatformListV1LanguageEnum;
    v?: PlatformsPlatformListV1VEnum;
}
/**
 * PlatformsApi - interface
 *
 * @export
 * @interface PlatformsApiInterface
 */
export interface PlatformsApiInterface {
    /**
     *
     * @summary Get url for start oauth
     * @param {'ru' | 'en' | 'cn'} language Current language
     * @param {number} project_id Project id
     * @param {'vk' | 'vk-id' | 'ok' | 'youtube' | 'trovo' | 'twitch'} platform Provider oauth
     * @param {'1' | '2' | '3'} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PlatformsApiInterface
     */
    platformsAddAccountV1Raw(requestParameters: PlatformsAddAccountV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Get url for start oauth
     */
    platformsAddAccountV1(requestParameters: PlatformsAddAccountV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     *
     * @summary Get category from the platform
     * @param {'ru' | 'en' | 'cn'} language Current language
     * @param {'vk' | 'youtube' | 'trovo' | 'twitch' | 'vkvideolive'} type Category search bar
     * @param {'1' | '2' | '3'} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {string} [q] Category search bar
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PlatformsApiInterface
     */
    platformsGetCategoryV1Raw(requestParameters: PlatformsGetCategoryV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ListOfCategoryItemResponse>>;
    /**
     * Get category from the platform
     */
    platformsGetCategoryV1(requestParameters: PlatformsGetCategoryV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ListOfCategoryItemResponse>;
    /**
     *
     * @summary Get category from the platform
     * @param {'ru' | 'en' | 'cn'} language Current language
     * @param {string} id Category search bar
     * @param {'vk' | 'vk-id' | 'ok' | 'youtube' | 'trovo' | 'twitch'} platform Provider oauth
     * @param {'1' | '2' | '3'} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PlatformsApiInterface
     */
    platformsLogoutAccountV1Raw(requestParameters: PlatformsLogoutAccountV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ListOfCategoryItemResponse>>;
    /**
     * Get category from the platform
     */
    platformsLogoutAccountV1(requestParameters: PlatformsLogoutAccountV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ListOfCategoryItemResponse>;
    /**
     *
     * @summary Supported platforms
     * @param {'ru' | 'en' | 'cn'} language Current language
     * @param {'1' | '2' | '3'} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PlatformsApiInterface
     */
    platformsPlatformListV1Raw(requestParameters: PlatformsPlatformListV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SitePlatformsSupportedResponse>>;
    /**
     * Supported platforms
     */
    platformsPlatformListV1(requestParameters: PlatformsPlatformListV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SitePlatformsSupportedResponse>;
}
/**
 *
 */
export declare class PlatformsApi extends runtime.BaseAPI implements PlatformsApiInterface {
    /**
     * Get url for start oauth
     */
    platformsAddAccountV1Raw(requestParameters: PlatformsAddAccountV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Get url for start oauth
     */
    platformsAddAccountV1(requestParameters: PlatformsAddAccountV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * Get category from the platform
     */
    platformsGetCategoryV1Raw(requestParameters: PlatformsGetCategoryV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ListOfCategoryItemResponse>>;
    /**
     * Get category from the platform
     */
    platformsGetCategoryV1(requestParameters: PlatformsGetCategoryV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ListOfCategoryItemResponse>;
    /**
     * Get category from the platform
     */
    platformsLogoutAccountV1Raw(requestParameters: PlatformsLogoutAccountV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ListOfCategoryItemResponse>>;
    /**
     * Get category from the platform
     */
    platformsLogoutAccountV1(requestParameters: PlatformsLogoutAccountV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ListOfCategoryItemResponse>;
    /**
     * Supported platforms
     */
    platformsPlatformListV1Raw(requestParameters: PlatformsPlatformListV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SitePlatformsSupportedResponse>>;
    /**
     * Supported platforms
     */
    platformsPlatformListV1(requestParameters: PlatformsPlatformListV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SitePlatformsSupportedResponse>;
}
/**
 * @export
 */
export declare const PlatformsAddAccountV1LanguageEnum: {
    readonly ru: "ru";
    readonly en: "en";
    readonly cn: "cn";
};
export type PlatformsAddAccountV1LanguageEnum = typeof PlatformsAddAccountV1LanguageEnum[keyof typeof PlatformsAddAccountV1LanguageEnum];
/**
 * @export
 */
export declare const PlatformsAddAccountV1PlatformEnum: {
    readonly vk: "vk";
    readonly vk_id: "vk-id";
    readonly ok: "ok";
    readonly youtube: "youtube";
    readonly trovo: "trovo";
    readonly twitch: "twitch";
};
export type PlatformsAddAccountV1PlatformEnum = typeof PlatformsAddAccountV1PlatformEnum[keyof typeof PlatformsAddAccountV1PlatformEnum];
/**
 * @export
 */
export declare const PlatformsAddAccountV1VEnum: {
    readonly _1: "1";
    readonly _2: "2";
    readonly _3: "3";
};
export type PlatformsAddAccountV1VEnum = typeof PlatformsAddAccountV1VEnum[keyof typeof PlatformsAddAccountV1VEnum];
/**
 * @export
 */
export declare const PlatformsGetCategoryV1LanguageEnum: {
    readonly ru: "ru";
    readonly en: "en";
    readonly cn: "cn";
};
export type PlatformsGetCategoryV1LanguageEnum = typeof PlatformsGetCategoryV1LanguageEnum[keyof typeof PlatformsGetCategoryV1LanguageEnum];
/**
 * @export
 */
export declare const PlatformsGetCategoryV1TypeEnum: {
    readonly vk: "vk";
    readonly youtube: "youtube";
    readonly trovo: "trovo";
    readonly twitch: "twitch";
    readonly vkvideolive: "vkvideolive";
};
export type PlatformsGetCategoryV1TypeEnum = typeof PlatformsGetCategoryV1TypeEnum[keyof typeof PlatformsGetCategoryV1TypeEnum];
/**
 * @export
 */
export declare const PlatformsGetCategoryV1VEnum: {
    readonly _1: "1";
    readonly _2: "2";
    readonly _3: "3";
};
export type PlatformsGetCategoryV1VEnum = typeof PlatformsGetCategoryV1VEnum[keyof typeof PlatformsGetCategoryV1VEnum];
/**
 * @export
 */
export declare const PlatformsLogoutAccountV1LanguageEnum: {
    readonly ru: "ru";
    readonly en: "en";
    readonly cn: "cn";
};
export type PlatformsLogoutAccountV1LanguageEnum = typeof PlatformsLogoutAccountV1LanguageEnum[keyof typeof PlatformsLogoutAccountV1LanguageEnum];
/**
 * @export
 */
export declare const PlatformsLogoutAccountV1PlatformEnum: {
    readonly vk: "vk";
    readonly vk_id: "vk-id";
    readonly ok: "ok";
    readonly youtube: "youtube";
    readonly trovo: "trovo";
    readonly twitch: "twitch";
};
export type PlatformsLogoutAccountV1PlatformEnum = typeof PlatformsLogoutAccountV1PlatformEnum[keyof typeof PlatformsLogoutAccountV1PlatformEnum];
/**
 * @export
 */
export declare const PlatformsLogoutAccountV1VEnum: {
    readonly _1: "1";
    readonly _2: "2";
    readonly _3: "3";
};
export type PlatformsLogoutAccountV1VEnum = typeof PlatformsLogoutAccountV1VEnum[keyof typeof PlatformsLogoutAccountV1VEnum];
/**
 * @export
 */
export declare const PlatformsPlatformListV1LanguageEnum: {
    readonly ru: "ru";
    readonly en: "en";
    readonly cn: "cn";
};
export type PlatformsPlatformListV1LanguageEnum = typeof PlatformsPlatformListV1LanguageEnum[keyof typeof PlatformsPlatformListV1LanguageEnum];
/**
 * @export
 */
export declare const PlatformsPlatformListV1VEnum: {
    readonly _1: "1";
    readonly _2: "2";
    readonly _3: "3";
};
export type PlatformsPlatformListV1VEnum = typeof PlatformsPlatformListV1VEnum[keyof typeof PlatformsPlatformListV1VEnum];
//# sourceMappingURL=PlatformsApi.d.ts.map