/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { MessageResponseDto, MethodChatHistoryResponse, MethodChatSendMessageRequestDto, SuccessResponse } from '../models/index';
export interface MethodChatGatewayDeleteV1Request {
    language: MethodChatGatewayDeleteV1LanguageEnum;
    key: string;
    broadcastId: number;
    eventId: string;
    v?: MethodChatGatewayDeleteV1VEnum;
}
export interface MethodChatGatewayGetMessageV1Request {
    language: MethodChatGatewayGetMessageV1LanguageEnum;
    key: string;
    broadcastId: number;
    eventId: string;
    v?: MethodChatGatewayGetMessageV1VEnum;
}
export interface MethodChatGatewayHistoryV1Request {
    language: MethodChatGatewayHistoryV1LanguageEnum;
    key: string;
    broadcastId: number;
    v?: MethodChatGatewayHistoryV1VEnum;
}
export interface MethodChatGatewaySendV1Request {
    language: MethodChatGatewaySendV1LanguageEnum;
    key: string;
    broadcastId: number;
    methodChatSendMessageRequestDto: MethodChatSendMessageRequestDto;
    v?: MethodChatGatewaySendV1VEnum;
}
/**
 * ChatGatewayApi - interface
 *
 * @export
 * @interface ChatGatewayApiInterface
 */
export interface ChatGatewayApiInterface {
    /**
     *
     * @summary Remove message
     * @param {'ru' | 'en' | 'cn'} language Current language
     * @param {string} key Key
     * @param {number} broadcastId broadcast id
     * @param {string} eventId Event id
     * @param {'1' | '2' | '3'} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ChatGatewayApiInterface
     */
    methodChatGatewayDeleteV1Raw(requestParameters: MethodChatGatewayDeleteV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponse>>;
    /**
     * Remove message
     */
    methodChatGatewayDeleteV1(requestParameters: MethodChatGatewayDeleteV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponse>;
    /**
     *
     * @summary Get one message
     * @param {'ru' | 'en' | 'cn'} language Current language
     * @param {string} key Key
     * @param {number} broadcastId broadcast id
     * @param {string} eventId Event id
     * @param {'1' | '2' | '3'} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ChatGatewayApiInterface
     */
    methodChatGatewayGetMessageV1Raw(requestParameters: MethodChatGatewayGetMessageV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MessageResponseDto>>;
    /**
     * Get one message
     */
    methodChatGatewayGetMessageV1(requestParameters: MethodChatGatewayGetMessageV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MessageResponseDto>;
    /**
     *
     * @summary List history message
     * @param {'ru' | 'en' | 'cn'} language Current language
     * @param {string} key Key
     * @param {number} broadcastId broadcast id
     * @param {'1' | '2' | '3'} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ChatGatewayApiInterface
     */
    methodChatGatewayHistoryV1Raw(requestParameters: MethodChatGatewayHistoryV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MethodChatHistoryResponse>>;
    /**
     * List history message
     */
    methodChatGatewayHistoryV1(requestParameters: MethodChatGatewayHistoryV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MethodChatHistoryResponse>;
    /**
     *
     * @summary Send message
     * @param {'ru' | 'en' | 'cn'} language Current language
     * @param {string} key Key
     * @param {number} broadcastId
     * @param {MethodChatSendMessageRequestDto} methodChatSendMessageRequestDto
     * @param {'1' | '2' | '3'} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ChatGatewayApiInterface
     */
    methodChatGatewaySendV1Raw(requestParameters: MethodChatGatewaySendV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MessageResponseDto>>;
    /**
     * Send message
     */
    methodChatGatewaySendV1(requestParameters: MethodChatGatewaySendV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MessageResponseDto>;
}
/**
 *
 */
export declare class ChatGatewayApi extends runtime.BaseAPI implements ChatGatewayApiInterface {
    /**
     * Remove message
     */
    methodChatGatewayDeleteV1Raw(requestParameters: MethodChatGatewayDeleteV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponse>>;
    /**
     * Remove message
     */
    methodChatGatewayDeleteV1(requestParameters: MethodChatGatewayDeleteV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponse>;
    /**
     * Get one message
     */
    methodChatGatewayGetMessageV1Raw(requestParameters: MethodChatGatewayGetMessageV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MessageResponseDto>>;
    /**
     * Get one message
     */
    methodChatGatewayGetMessageV1(requestParameters: MethodChatGatewayGetMessageV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MessageResponseDto>;
    /**
     * List history message
     */
    methodChatGatewayHistoryV1Raw(requestParameters: MethodChatGatewayHistoryV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MethodChatHistoryResponse>>;
    /**
     * List history message
     */
    methodChatGatewayHistoryV1(requestParameters: MethodChatGatewayHistoryV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MethodChatHistoryResponse>;
    /**
     * Send message
     */
    methodChatGatewaySendV1Raw(requestParameters: MethodChatGatewaySendV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MessageResponseDto>>;
    /**
     * Send message
     */
    methodChatGatewaySendV1(requestParameters: MethodChatGatewaySendV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MessageResponseDto>;
}
/**
 * @export
 */
export declare const MethodChatGatewayDeleteV1LanguageEnum: {
    readonly Ru: "ru";
    readonly En: "en";
    readonly Cn: "cn";
};
export type MethodChatGatewayDeleteV1LanguageEnum = typeof MethodChatGatewayDeleteV1LanguageEnum[keyof typeof MethodChatGatewayDeleteV1LanguageEnum];
/**
 * @export
 */
export declare const MethodChatGatewayDeleteV1VEnum: {
    readonly _1: "1";
    readonly _2: "2";
    readonly _3: "3";
};
export type MethodChatGatewayDeleteV1VEnum = typeof MethodChatGatewayDeleteV1VEnum[keyof typeof MethodChatGatewayDeleteV1VEnum];
/**
 * @export
 */
export declare const MethodChatGatewayGetMessageV1LanguageEnum: {
    readonly Ru: "ru";
    readonly En: "en";
    readonly Cn: "cn";
};
export type MethodChatGatewayGetMessageV1LanguageEnum = typeof MethodChatGatewayGetMessageV1LanguageEnum[keyof typeof MethodChatGatewayGetMessageV1LanguageEnum];
/**
 * @export
 */
export declare const MethodChatGatewayGetMessageV1VEnum: {
    readonly _1: "1";
    readonly _2: "2";
    readonly _3: "3";
};
export type MethodChatGatewayGetMessageV1VEnum = typeof MethodChatGatewayGetMessageV1VEnum[keyof typeof MethodChatGatewayGetMessageV1VEnum];
/**
 * @export
 */
export declare const MethodChatGatewayHistoryV1LanguageEnum: {
    readonly Ru: "ru";
    readonly En: "en";
    readonly Cn: "cn";
};
export type MethodChatGatewayHistoryV1LanguageEnum = typeof MethodChatGatewayHistoryV1LanguageEnum[keyof typeof MethodChatGatewayHistoryV1LanguageEnum];
/**
 * @export
 */
export declare const MethodChatGatewayHistoryV1VEnum: {
    readonly _1: "1";
    readonly _2: "2";
    readonly _3: "3";
};
export type MethodChatGatewayHistoryV1VEnum = typeof MethodChatGatewayHistoryV1VEnum[keyof typeof MethodChatGatewayHistoryV1VEnum];
/**
 * @export
 */
export declare const MethodChatGatewaySendV1LanguageEnum: {
    readonly Ru: "ru";
    readonly En: "en";
    readonly Cn: "cn";
};
export type MethodChatGatewaySendV1LanguageEnum = typeof MethodChatGatewaySendV1LanguageEnum[keyof typeof MethodChatGatewaySendV1LanguageEnum];
/**
 * @export
 */
export declare const MethodChatGatewaySendV1VEnum: {
    readonly _1: "1";
    readonly _2: "2";
    readonly _3: "3";
};
export type MethodChatGatewaySendV1VEnum = typeof MethodChatGatewaySendV1VEnum[keyof typeof MethodChatGatewaySendV1VEnum];
//# sourceMappingURL=ChatGatewayApi.d.ts.map