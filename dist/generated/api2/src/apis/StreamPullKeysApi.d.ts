/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { CheckPullKeyResponse, CreatePullKeyRequest, CreatePullKeyResponse, PullKeyListResponse, SuccessResponse, UpdatePullKeyRequest } from '../models/index';
export interface StreamPullKeysSiteCheckV1Request {
    language: StreamPullKeysSiteCheckV1LanguageEnum;
    project_id: number;
    key: string;
    v?: StreamPullKeysSiteCheckV1VEnum;
}
export interface StreamPullKeysSiteCreateV1Request {
    CreatePullKeyRequest: CreatePullKeyRequest;
}
export interface StreamPullKeysSiteGetV1Request {
    language: StreamPullKeysSiteGetV1LanguageEnum;
    project_id: number;
    v?: StreamPullKeysSiteGetV1VEnum;
}
export interface StreamPullKeysSiteRemoveV1Request {
    language: StreamPullKeysSiteRemoveV1LanguageEnum;
    project_id: number;
    key: string;
    v?: StreamPullKeysSiteRemoveV1VEnum;
}
export interface StreamPullKeysSiteUpdateV1Request {
    UpdatePullKeyRequest: UpdatePullKeyRequest;
}
/**
 * StreamPullKeysApi - interface
 *
 * @export
 * @interface StreamPullKeysApiInterface
 */
export interface StreamPullKeysApiInterface {
    /**
     *
     * @summary Check key
     * @param {'ru' | 'en' | 'cn'} language Current language
     * @param {number} project_id Project id
     * @param {string} key Key
     * @param {'1' | '2' | '3'} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StreamPullKeysApiInterface
     */
    streamPullKeysSiteCheckV1Raw(requestParameters: StreamPullKeysSiteCheckV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CheckPullKeyResponse>>;
    /**
     * Check key
     */
    streamPullKeysSiteCheckV1(requestParameters: StreamPullKeysSiteCheckV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CheckPullKeyResponse>;
    /**
     *
     * @summary Create key
     * @param {CreatePullKeyRequest} CreatePullKeyRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StreamPullKeysApiInterface
     */
    streamPullKeysSiteCreateV1Raw(requestParameters: StreamPullKeysSiteCreateV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CreatePullKeyResponse>>;
    /**
     * Create key
     */
    streamPullKeysSiteCreateV1(requestParameters: StreamPullKeysSiteCreateV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CreatePullKeyResponse>;
    /**
     *
     * @summary List keys
     * @param {'ru' | 'en' | 'cn'} language Current language
     * @param {number} project_id Project id
     * @param {'1' | '2' | '3'} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StreamPullKeysApiInterface
     */
    streamPullKeysSiteGetV1Raw(requestParameters: StreamPullKeysSiteGetV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PullKeyListResponse>>;
    /**
     * List keys
     */
    streamPullKeysSiteGetV1(requestParameters: StreamPullKeysSiteGetV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PullKeyListResponse>;
    /**
     *
     * @summary Delete key
     * @param {'ru' | 'en' | 'cn'} language Current language
     * @param {number} project_id Project id
     * @param {string} key Key
     * @param {'1' | '2' | '3'} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StreamPullKeysApiInterface
     */
    streamPullKeysSiteRemoveV1Raw(requestParameters: StreamPullKeysSiteRemoveV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponse>>;
    /**
     * Delete key
     */
    streamPullKeysSiteRemoveV1(requestParameters: StreamPullKeysSiteRemoveV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponse>;
    /**
     *
     * @summary Update key
     * @param {UpdatePullKeyRequest} UpdatePullKeyRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StreamPullKeysApiInterface
     */
    streamPullKeysSiteUpdateV1Raw(requestParameters: StreamPullKeysSiteUpdateV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponse>>;
    /**
     * Update key
     */
    streamPullKeysSiteUpdateV1(requestParameters: StreamPullKeysSiteUpdateV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponse>;
}
/**
 *
 */
export declare class StreamPullKeysApi extends runtime.BaseAPI implements StreamPullKeysApiInterface {
    /**
     * Check key
     */
    streamPullKeysSiteCheckV1Raw(requestParameters: StreamPullKeysSiteCheckV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CheckPullKeyResponse>>;
    /**
     * Check key
     */
    streamPullKeysSiteCheckV1(requestParameters: StreamPullKeysSiteCheckV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CheckPullKeyResponse>;
    /**
     * Create key
     */
    streamPullKeysSiteCreateV1Raw(requestParameters: StreamPullKeysSiteCreateV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CreatePullKeyResponse>>;
    /**
     * Create key
     */
    streamPullKeysSiteCreateV1(requestParameters: StreamPullKeysSiteCreateV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CreatePullKeyResponse>;
    /**
     * List keys
     */
    streamPullKeysSiteGetV1Raw(requestParameters: StreamPullKeysSiteGetV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PullKeyListResponse>>;
    /**
     * List keys
     */
    streamPullKeysSiteGetV1(requestParameters: StreamPullKeysSiteGetV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PullKeyListResponse>;
    /**
     * Delete key
     */
    streamPullKeysSiteRemoveV1Raw(requestParameters: StreamPullKeysSiteRemoveV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponse>>;
    /**
     * Delete key
     */
    streamPullKeysSiteRemoveV1(requestParameters: StreamPullKeysSiteRemoveV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponse>;
    /**
     * Update key
     */
    streamPullKeysSiteUpdateV1Raw(requestParameters: StreamPullKeysSiteUpdateV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponse>>;
    /**
     * Update key
     */
    streamPullKeysSiteUpdateV1(requestParameters: StreamPullKeysSiteUpdateV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponse>;
}
/**
 * @export
 */
export declare const StreamPullKeysSiteCheckV1LanguageEnum: {
    readonly ru: "ru";
    readonly en: "en";
    readonly cn: "cn";
};
export type StreamPullKeysSiteCheckV1LanguageEnum = typeof StreamPullKeysSiteCheckV1LanguageEnum[keyof typeof StreamPullKeysSiteCheckV1LanguageEnum];
/**
 * @export
 */
export declare const StreamPullKeysSiteCheckV1VEnum: {
    readonly _1: "1";
    readonly _2: "2";
    readonly _3: "3";
};
export type StreamPullKeysSiteCheckV1VEnum = typeof StreamPullKeysSiteCheckV1VEnum[keyof typeof StreamPullKeysSiteCheckV1VEnum];
/**
 * @export
 */
export declare const StreamPullKeysSiteGetV1LanguageEnum: {
    readonly ru: "ru";
    readonly en: "en";
    readonly cn: "cn";
};
export type StreamPullKeysSiteGetV1LanguageEnum = typeof StreamPullKeysSiteGetV1LanguageEnum[keyof typeof StreamPullKeysSiteGetV1LanguageEnum];
/**
 * @export
 */
export declare const StreamPullKeysSiteGetV1VEnum: {
    readonly _1: "1";
    readonly _2: "2";
    readonly _3: "3";
};
export type StreamPullKeysSiteGetV1VEnum = typeof StreamPullKeysSiteGetV1VEnum[keyof typeof StreamPullKeysSiteGetV1VEnum];
/**
 * @export
 */
export declare const StreamPullKeysSiteRemoveV1LanguageEnum: {
    readonly ru: "ru";
    readonly en: "en";
    readonly cn: "cn";
};
export type StreamPullKeysSiteRemoveV1LanguageEnum = typeof StreamPullKeysSiteRemoveV1LanguageEnum[keyof typeof StreamPullKeysSiteRemoveV1LanguageEnum];
/**
 * @export
 */
export declare const StreamPullKeysSiteRemoveV1VEnum: {
    readonly _1: "1";
    readonly _2: "2";
    readonly _3: "3";
};
export type StreamPullKeysSiteRemoveV1VEnum = typeof StreamPullKeysSiteRemoveV1VEnum[keyof typeof StreamPullKeysSiteRemoveV1VEnum];
//# sourceMappingURL=StreamPullKeysApi.d.ts.map