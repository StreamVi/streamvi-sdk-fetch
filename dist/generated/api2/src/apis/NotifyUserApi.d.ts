/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { SiteNotifyUserResponse, SiteScreenNotifyUserResponse, SiteSetNotifyUserRequest, SuccessResponse } from '../models/index';
export interface NotifyUserDelMobileTokenV1Request {
    language: NotifyUserDelMobileTokenV1LanguageEnum;
    token: string;
    v?: NotifyUserDelMobileTokenV1VEnum;
}
export interface NotifyUserGetScreenV1Request {
    language: NotifyUserGetScreenV1LanguageEnum;
    projectId: number;
    v?: NotifyUserGetScreenV1VEnum;
}
export interface NotifyUserGetV1Request {
    projectId: number;
    v?: NotifyUserGetV1VEnum;
}
export interface NotifyUserRemoveScreenV1Request {
    projectId: number;
    v?: NotifyUserRemoveScreenV1VEnum;
}
export interface NotifyUserSetV1Request {
    siteSetNotifyUserRequest: SiteSetNotifyUserRequest;
    v?: NotifyUserSetV1VEnum;
}
/**
 * NotifyUserApi - interface
 *
 * @export
 * @interface NotifyUserApiInterface
 */
export interface NotifyUserApiInterface {
    /**
     *
     * @summary Delete mobile token from user
     * @param {'ru' | 'en' | 'cn'} language Current language
     * @param {string} token Token in mobile app
     * @param {'1' | '2' | '3'} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NotifyUserApiInterface
     */
    notifyUserDelMobileTokenV1Raw(requestParameters: NotifyUserDelMobileTokenV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponse>>;
    /**
     * Delete mobile token from user
     */
    notifyUserDelMobileTokenV1(requestParameters: NotifyUserDelMobileTokenV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponse>;
    /**
     *
     * @summary Get user screen notify
     * @param {'ru' | 'en' | 'cn'} language Current language
     * @param {number} projectId Project id
     * @param {'1' | '2' | '3'} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NotifyUserApiInterface
     */
    notifyUserGetScreenV1Raw(requestParameters: NotifyUserGetScreenV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SiteScreenNotifyUserResponse>>;
    /**
     * Get user screen notify
     */
    notifyUserGetScreenV1(requestParameters: NotifyUserGetScreenV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SiteScreenNotifyUserResponse>;
    /**
     *
     * @summary Get user notify settings
     * @param {number} projectId Project id
     * @param {'1'} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NotifyUserApiInterface
     */
    notifyUserGetV1Raw(requestParameters: NotifyUserGetV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SiteNotifyUserResponse>>;
    /**
     * Get user notify settings
     */
    notifyUserGetV1(requestParameters: NotifyUserGetV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SiteNotifyUserResponse>;
    /**
     *
     * @summary Remove user screen notify
     * @param {number} projectId Project id
     * @param {'1'} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NotifyUserApiInterface
     */
    notifyUserRemoveScreenV1Raw(requestParameters: NotifyUserRemoveScreenV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponse>>;
    /**
     * Remove user screen notify
     */
    notifyUserRemoveScreenV1(requestParameters: NotifyUserRemoveScreenV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponse>;
    /**
     *
     * @summary Set user notify settings
     * @param {SiteSetNotifyUserRequest} siteSetNotifyUserRequest Set user notify settings
     * @param {'1'} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NotifyUserApiInterface
     */
    notifyUserSetV1Raw(requestParameters: NotifyUserSetV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponse>>;
    /**
     * Set user notify settings
     */
    notifyUserSetV1(requestParameters: NotifyUserSetV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponse>;
}
/**
 *
 */
export declare class NotifyUserApi extends runtime.BaseAPI implements NotifyUserApiInterface {
    /**
     * Delete mobile token from user
     */
    notifyUserDelMobileTokenV1Raw(requestParameters: NotifyUserDelMobileTokenV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponse>>;
    /**
     * Delete mobile token from user
     */
    notifyUserDelMobileTokenV1(requestParameters: NotifyUserDelMobileTokenV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponse>;
    /**
     * Get user screen notify
     */
    notifyUserGetScreenV1Raw(requestParameters: NotifyUserGetScreenV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SiteScreenNotifyUserResponse>>;
    /**
     * Get user screen notify
     */
    notifyUserGetScreenV1(requestParameters: NotifyUserGetScreenV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SiteScreenNotifyUserResponse>;
    /**
     * Get user notify settings
     */
    notifyUserGetV1Raw(requestParameters: NotifyUserGetV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SiteNotifyUserResponse>>;
    /**
     * Get user notify settings
     */
    notifyUserGetV1(requestParameters: NotifyUserGetV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SiteNotifyUserResponse>;
    /**
     * Remove user screen notify
     */
    notifyUserRemoveScreenV1Raw(requestParameters: NotifyUserRemoveScreenV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponse>>;
    /**
     * Remove user screen notify
     */
    notifyUserRemoveScreenV1(requestParameters: NotifyUserRemoveScreenV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponse>;
    /**
     * Set user notify settings
     */
    notifyUserSetV1Raw(requestParameters: NotifyUserSetV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponse>>;
    /**
     * Set user notify settings
     */
    notifyUserSetV1(requestParameters: NotifyUserSetV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponse>;
}
/**
 * @export
 */
export declare const NotifyUserDelMobileTokenV1LanguageEnum: {
    readonly Ru: "ru";
    readonly En: "en";
    readonly Cn: "cn";
};
export type NotifyUserDelMobileTokenV1LanguageEnum = typeof NotifyUserDelMobileTokenV1LanguageEnum[keyof typeof NotifyUserDelMobileTokenV1LanguageEnum];
/**
 * @export
 */
export declare const NotifyUserDelMobileTokenV1VEnum: {
    readonly _1: "1";
    readonly _2: "2";
    readonly _3: "3";
};
export type NotifyUserDelMobileTokenV1VEnum = typeof NotifyUserDelMobileTokenV1VEnum[keyof typeof NotifyUserDelMobileTokenV1VEnum];
/**
 * @export
 */
export declare const NotifyUserGetScreenV1LanguageEnum: {
    readonly Ru: "ru";
    readonly En: "en";
    readonly Cn: "cn";
};
export type NotifyUserGetScreenV1LanguageEnum = typeof NotifyUserGetScreenV1LanguageEnum[keyof typeof NotifyUserGetScreenV1LanguageEnum];
/**
 * @export
 */
export declare const NotifyUserGetScreenV1VEnum: {
    readonly _1: "1";
    readonly _2: "2";
    readonly _3: "3";
};
export type NotifyUserGetScreenV1VEnum = typeof NotifyUserGetScreenV1VEnum[keyof typeof NotifyUserGetScreenV1VEnum];
/**
 * @export
 */
export declare const NotifyUserGetV1VEnum: {
    readonly _1: "1";
};
export type NotifyUserGetV1VEnum = typeof NotifyUserGetV1VEnum[keyof typeof NotifyUserGetV1VEnum];
/**
 * @export
 */
export declare const NotifyUserRemoveScreenV1VEnum: {
    readonly _1: "1";
};
export type NotifyUserRemoveScreenV1VEnum = typeof NotifyUserRemoveScreenV1VEnum[keyof typeof NotifyUserRemoveScreenV1VEnum];
/**
 * @export
 */
export declare const NotifyUserSetV1VEnum: {
    readonly _1: "1";
};
export type NotifyUserSetV1VEnum = typeof NotifyUserSetV1VEnum[keyof typeof NotifyUserSetV1VEnum];
//# sourceMappingURL=NotifyUserApi.d.ts.map