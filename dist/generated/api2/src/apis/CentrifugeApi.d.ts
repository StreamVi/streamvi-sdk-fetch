/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { SiteAuthCentrifugeResponse } from '../models/index';
export interface CentrifugeAuthV2Request {
    project_id: number;
}
export interface CentrifugeProjectV1Request {
    language: CentrifugeProjectV1LanguageEnum;
    project_id: number;
    v?: CentrifugeProjectV1VEnum;
}
export interface GetTokenBroadcastV1Request {
    broadcast_id: number;
    language: GetTokenBroadcastV1LanguageEnum;
    project_id: number;
    v?: GetTokenBroadcastV1VEnum;
}
/**
 * CentrifugeApi - interface
 *
 * @export
 * @interface CentrifugeApiInterface
 */
export interface CentrifugeApiInterface {
    /**
     *
     * @summary Auth centrifuge
     * @param {number} project_id Project id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CentrifugeApiInterface
     */
    centrifugeAuthV2Raw(requestParameters: CentrifugeAuthV2Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SiteAuthCentrifugeResponse>>;
    /**
     * Auth centrifuge
     */
    centrifugeAuthV2(requestParameters: CentrifugeAuthV2Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SiteAuthCentrifugeResponse>;
    /**
     *        channel - \"$project_channels:{project_id}\"       expiresIn - 30min       project access min - editor
     * @summary Auth token for project
     * @param {'ru' | 'en' | 'cn'} language Current language
     * @param {number} project_id Project id
     * @param {'1' | '2' | '3'} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CentrifugeApiInterface
     */
    centrifugeProjectV1Raw(requestParameters: CentrifugeProjectV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SiteAuthCentrifugeResponse>>;
    /**
     *        channel - \"$project_channels:{project_id}\"       expiresIn - 30min       project access min - editor
     * Auth token for project
     */
    centrifugeProjectV1(requestParameters: CentrifugeProjectV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SiteAuthCentrifugeResponse>;
    /**
     *        channel - \"$broadcast:{broadcast_id}\"       expiresIn - 30min
     * @summary Auth token for broadcast
     * @param {number} broadcast_id
     * @param {'ru' | 'en' | 'cn'} language Current language
     * @param {number} project_id Project id
     * @param {'1' | '2' | '3'} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CentrifugeApiInterface
     */
    getTokenBroadcastV1Raw(requestParameters: GetTokenBroadcastV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SiteAuthCentrifugeResponse>>;
    /**
     *        channel - \"$broadcast:{broadcast_id}\"       expiresIn - 30min
     * Auth token for broadcast
     */
    getTokenBroadcastV1(requestParameters: GetTokenBroadcastV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SiteAuthCentrifugeResponse>;
}
/**
 *
 */
export declare class CentrifugeApi extends runtime.BaseAPI implements CentrifugeApiInterface {
    /**
     * Auth centrifuge
     */
    centrifugeAuthV2Raw(requestParameters: CentrifugeAuthV2Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SiteAuthCentrifugeResponse>>;
    /**
     * Auth centrifuge
     */
    centrifugeAuthV2(requestParameters: CentrifugeAuthV2Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SiteAuthCentrifugeResponse>;
    /**
     *        channel - \"$project_channels:{project_id}\"       expiresIn - 30min       project access min - editor
     * Auth token for project
     */
    centrifugeProjectV1Raw(requestParameters: CentrifugeProjectV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SiteAuthCentrifugeResponse>>;
    /**
     *        channel - \"$project_channels:{project_id}\"       expiresIn - 30min       project access min - editor
     * Auth token for project
     */
    centrifugeProjectV1(requestParameters: CentrifugeProjectV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SiteAuthCentrifugeResponse>;
    /**
     *        channel - \"$broadcast:{broadcast_id}\"       expiresIn - 30min
     * Auth token for broadcast
     */
    getTokenBroadcastV1Raw(requestParameters: GetTokenBroadcastV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SiteAuthCentrifugeResponse>>;
    /**
     *        channel - \"$broadcast:{broadcast_id}\"       expiresIn - 30min
     * Auth token for broadcast
     */
    getTokenBroadcastV1(requestParameters: GetTokenBroadcastV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SiteAuthCentrifugeResponse>;
}
/**
 * @export
 */
export declare const CentrifugeProjectV1LanguageEnum: {
    readonly ru: "ru";
    readonly en: "en";
    readonly cn: "cn";
};
export type CentrifugeProjectV1LanguageEnum = typeof CentrifugeProjectV1LanguageEnum[keyof typeof CentrifugeProjectV1LanguageEnum];
/**
 * @export
 */
export declare const CentrifugeProjectV1VEnum: {
    readonly _1: "1";
    readonly _2: "2";
    readonly _3: "3";
};
export type CentrifugeProjectV1VEnum = typeof CentrifugeProjectV1VEnum[keyof typeof CentrifugeProjectV1VEnum];
/**
 * @export
 */
export declare const GetTokenBroadcastV1LanguageEnum: {
    readonly ru: "ru";
    readonly en: "en";
    readonly cn: "cn";
};
export type GetTokenBroadcastV1LanguageEnum = typeof GetTokenBroadcastV1LanguageEnum[keyof typeof GetTokenBroadcastV1LanguageEnum];
/**
 * @export
 */
export declare const GetTokenBroadcastV1VEnum: {
    readonly _1: "1";
    readonly _2: "2";
    readonly _3: "3";
};
export type GetTokenBroadcastV1VEnum = typeof GetTokenBroadcastV1VEnum[keyof typeof GetTokenBroadcastV1VEnum];
//# sourceMappingURL=CentrifugeApi.d.ts.map