/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { ListOfPayoutSystemAccountListItemResponse, PayoutCreateRequestBodyDto, SuccessResponse } from '../models/index';
export interface PayoutCreateV1Request {
    language: PayoutCreateV1LanguageEnum;
    PayoutCreateRequestBodyDto: PayoutCreateRequestBodyDto;
    v?: PayoutCreateV1VEnum;
}
export interface PayoutPrepareV1Request {
    language: PayoutPrepareV1LanguageEnum;
    project_id: number;
    v?: PayoutPrepareV1VEnum;
}
/**
 * PayoutApi - interface
 *
 * @export
 * @interface PayoutApiInterface
 */
export interface PayoutApiInterface {
    /**
     *
     * @summary Create payout
     * @param {'ru' | 'en' | 'cn'} language Current language
     * @param {PayoutCreateRequestBodyDto} PayoutCreateRequestBodyDto
     * @param {'1' | '2' | '3'} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PayoutApiInterface
     */
    payoutCreateV1Raw(requestParameters: PayoutCreateV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponse>>;
    /**
     * Create payout
     */
    payoutCreateV1(requestParameters: PayoutCreateV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponse>;
    /**
     *
     * @summary Get payout data for create
     * @param {'ru' | 'en' | 'cn'} language Current language
     * @param {number} project_id Project id
     * @param {'1' | '2' | '3'} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PayoutApiInterface
     */
    payoutPrepareV1Raw(requestParameters: PayoutPrepareV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ListOfPayoutSystemAccountListItemResponse>>;
    /**
     * Get payout data for create
     */
    payoutPrepareV1(requestParameters: PayoutPrepareV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ListOfPayoutSystemAccountListItemResponse>;
}
/**
 *
 */
export declare class PayoutApi extends runtime.BaseAPI implements PayoutApiInterface {
    /**
     * Create payout
     */
    payoutCreateV1Raw(requestParameters: PayoutCreateV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponse>>;
    /**
     * Create payout
     */
    payoutCreateV1(requestParameters: PayoutCreateV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponse>;
    /**
     * Get payout data for create
     */
    payoutPrepareV1Raw(requestParameters: PayoutPrepareV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ListOfPayoutSystemAccountListItemResponse>>;
    /**
     * Get payout data for create
     */
    payoutPrepareV1(requestParameters: PayoutPrepareV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ListOfPayoutSystemAccountListItemResponse>;
}
/**
 * @export
 */
export declare const PayoutCreateV1LanguageEnum: {
    readonly ru: "ru";
    readonly en: "en";
    readonly cn: "cn";
};
export type PayoutCreateV1LanguageEnum = typeof PayoutCreateV1LanguageEnum[keyof typeof PayoutCreateV1LanguageEnum];
/**
 * @export
 */
export declare const PayoutCreateV1VEnum: {
    readonly _1: "1";
    readonly _2: "2";
    readonly _3: "3";
};
export type PayoutCreateV1VEnum = typeof PayoutCreateV1VEnum[keyof typeof PayoutCreateV1VEnum];
/**
 * @export
 */
export declare const PayoutPrepareV1LanguageEnum: {
    readonly ru: "ru";
    readonly en: "en";
    readonly cn: "cn";
};
export type PayoutPrepareV1LanguageEnum = typeof PayoutPrepareV1LanguageEnum[keyof typeof PayoutPrepareV1LanguageEnum];
/**
 * @export
 */
export declare const PayoutPrepareV1VEnum: {
    readonly _1: "1";
    readonly _2: "2";
    readonly _3: "3";
};
export type PayoutPrepareV1VEnum = typeof PayoutPrepareV1VEnum[keyof typeof PayoutPrepareV1VEnum];
//# sourceMappingURL=PayoutApi.d.ts.map