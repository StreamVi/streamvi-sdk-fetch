/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { ListOfUserProject2ProjectResponse, PaginatedResponseOfUserProjectResponse, ProjectInfoResponse, SuccessResponse, UserProjectGetResponse } from '../models/index';
export interface UserProjectChangeAccessV1Request {
    language: UserProjectChangeAccessV1LanguageEnum;
    project_id: number;
    user_id: number;
    access_type: UserProjectChangeAccessV1AccessTypeEnum;
    v?: UserProjectChangeAccessV1VEnum;
}
export interface UserProjectDelV1Request {
    language: UserProjectDelV1LanguageEnum;
    project_id: number;
    user_id: number;
    v?: UserProjectDelV1VEnum;
}
export interface UserProjectGetProjectInfoV1Request {
    language: UserProjectGetProjectInfoV1LanguageEnum;
    project_id: number;
    v?: UserProjectGetProjectInfoV1VEnum;
}
export interface UserProjectGetProjectV1Request {
    language: UserProjectGetProjectV1LanguageEnum;
    project_external_id: string;
    v?: UserProjectGetProjectV1VEnum;
}
export interface UserProjectGetUserV1Request {
    language: UserProjectGetUserV1LanguageEnum;
    user_external_id: string;
    v?: UserProjectGetUserV1VEnum;
}
export interface UserProjectListAccessV1Request {
    language: UserProjectListAccessV1LanguageEnum;
    project_id: number;
    v?: UserProjectListAccessV1VEnum;
}
export interface UserProjectListV1Request {
    language: UserProjectListV1LanguageEnum;
    v?: UserProjectListV1VEnum;
    limit?: number;
    offset?: number;
}
export interface UserProjectSelectProjectV1Request {
    language: UserProjectSelectProjectV1LanguageEnum;
    id: number;
    v?: UserProjectSelectProjectV1VEnum;
}
/**
 * ProjectApi - interface
 *
 * @export
 * @interface ProjectApiInterface
 */
export interface ProjectApiInterface {
    /**
     *
     * @summary Change access user from project
     * @param {'ru' | 'en' | 'cn'} language Current language
     * @param {number} project_id Project id
     * @param {number} user_id User id
     * @param {0 | 1 | 2} access_type Access type
     * @param {'1' | '2' | '3'} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProjectApiInterface
     */
    userProjectChangeAccessV1Raw(requestParameters: UserProjectChangeAccessV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponse>>;
    /**
     * Change access user from project
     */
    userProjectChangeAccessV1(requestParameters: UserProjectChangeAccessV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponse>;
    /**
     *
     * @summary Remove user from project
     * @param {'ru' | 'en' | 'cn'} language Current language
     * @param {number} project_id Project id
     * @param {number} user_id User id
     * @param {'1' | '2' | '3'} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProjectApiInterface
     */
    userProjectDelV1Raw(requestParameters: UserProjectDelV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponse>>;
    /**
     * Remove user from project
     */
    userProjectDelV1(requestParameters: UserProjectDelV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponse>;
    /**
     *
     * @summary Get project full info
     * @param {'ru' | 'en' | 'cn'} language Current language
     * @param {number} project_id Project id
     * @param {'1' | '2' | '3'} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProjectApiInterface
     */
    userProjectGetProjectInfoV1Raw(requestParameters: UserProjectGetProjectInfoV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ProjectInfoResponse>>;
    /**
     * Get project full info
     */
    userProjectGetProjectInfoV1(requestParameters: UserProjectGetProjectInfoV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ProjectInfoResponse>;
    /**
     *
     * @summary Get project by number id
     * @param {'ru' | 'en' | 'cn'} language Current language
     * @param {string} project_external_id Project external id
     * @param {'1' | '2' | '3'} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProjectApiInterface
     */
    userProjectGetProjectV1Raw(requestParameters: UserProjectGetProjectV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<UserProjectGetResponse>>;
    /**
     * Get project by number id
     */
    userProjectGetProjectV1(requestParameters: UserProjectGetProjectV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<UserProjectGetResponse>;
    /**
     *
     * @summary Get user by number id
     * @param {'ru' | 'en' | 'cn'} language Current language
     * @param {string} user_external_id User external id
     * @param {'1' | '2' | '3'} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProjectApiInterface
     */
    userProjectGetUserV1Raw(requestParameters: UserProjectGetUserV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<UserProjectGetResponse>>;
    /**
     * Get user by number id
     */
    userProjectGetUserV1(requestParameters: UserProjectGetUserV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<UserProjectGetResponse>;
    /**
     *
     * @summary List of user in project
     * @param {'ru' | 'en' | 'cn'} language Current language
     * @param {number} project_id Project id
     * @param {'1' | '2' | '3'} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProjectApiInterface
     */
    userProjectListAccessV1Raw(requestParameters: UserProjectListAccessV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ListOfUserProject2ProjectResponse>>;
    /**
     * List of user in project
     */
    userProjectListAccessV1(requestParameters: UserProjectListAccessV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ListOfUserProject2ProjectResponse>;
    /**
     *
     * @summary List of project for current user
     * @param {'ru' | 'en' | 'cn'} language Current language
     * @param {'1' | '2' | '3'} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {number} [limit] Number of results
     * @param {number} [offset] Page offset number
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProjectApiInterface
     */
    userProjectListV1Raw(requestParameters: UserProjectListV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PaginatedResponseOfUserProjectResponse>>;
    /**
     * List of project for current user
     */
    userProjectListV1(requestParameters: UserProjectListV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PaginatedResponseOfUserProjectResponse>;
    /**
     *
     * @summary Select user for project
     * @param {'ru' | 'en' | 'cn'} language Current language
     * @param {number} id Project internal id
     * @param {'1' | '2' | '3'} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProjectApiInterface
     */
    userProjectSelectProjectV1Raw(requestParameters: UserProjectSelectProjectV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<UserProjectGetResponse>>;
    /**
     * Select user for project
     */
    userProjectSelectProjectV1(requestParameters: UserProjectSelectProjectV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<UserProjectGetResponse>;
}
/**
 *
 */
export declare class ProjectApi extends runtime.BaseAPI implements ProjectApiInterface {
    /**
     * Change access user from project
     */
    userProjectChangeAccessV1Raw(requestParameters: UserProjectChangeAccessV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponse>>;
    /**
     * Change access user from project
     */
    userProjectChangeAccessV1(requestParameters: UserProjectChangeAccessV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponse>;
    /**
     * Remove user from project
     */
    userProjectDelV1Raw(requestParameters: UserProjectDelV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponse>>;
    /**
     * Remove user from project
     */
    userProjectDelV1(requestParameters: UserProjectDelV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponse>;
    /**
     * Get project full info
     */
    userProjectGetProjectInfoV1Raw(requestParameters: UserProjectGetProjectInfoV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ProjectInfoResponse>>;
    /**
     * Get project full info
     */
    userProjectGetProjectInfoV1(requestParameters: UserProjectGetProjectInfoV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ProjectInfoResponse>;
    /**
     * Get project by number id
     */
    userProjectGetProjectV1Raw(requestParameters: UserProjectGetProjectV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<UserProjectGetResponse>>;
    /**
     * Get project by number id
     */
    userProjectGetProjectV1(requestParameters: UserProjectGetProjectV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<UserProjectGetResponse>;
    /**
     * Get user by number id
     */
    userProjectGetUserV1Raw(requestParameters: UserProjectGetUserV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<UserProjectGetResponse>>;
    /**
     * Get user by number id
     */
    userProjectGetUserV1(requestParameters: UserProjectGetUserV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<UserProjectGetResponse>;
    /**
     * List of user in project
     */
    userProjectListAccessV1Raw(requestParameters: UserProjectListAccessV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ListOfUserProject2ProjectResponse>>;
    /**
     * List of user in project
     */
    userProjectListAccessV1(requestParameters: UserProjectListAccessV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ListOfUserProject2ProjectResponse>;
    /**
     * List of project for current user
     */
    userProjectListV1Raw(requestParameters: UserProjectListV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PaginatedResponseOfUserProjectResponse>>;
    /**
     * List of project for current user
     */
    userProjectListV1(requestParameters: UserProjectListV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PaginatedResponseOfUserProjectResponse>;
    /**
     * Select user for project
     */
    userProjectSelectProjectV1Raw(requestParameters: UserProjectSelectProjectV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<UserProjectGetResponse>>;
    /**
     * Select user for project
     */
    userProjectSelectProjectV1(requestParameters: UserProjectSelectProjectV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<UserProjectGetResponse>;
}
/**
 * @export
 */
export declare const UserProjectChangeAccessV1LanguageEnum: {
    readonly ru: "ru";
    readonly en: "en";
    readonly cn: "cn";
};
export type UserProjectChangeAccessV1LanguageEnum = typeof UserProjectChangeAccessV1LanguageEnum[keyof typeof UserProjectChangeAccessV1LanguageEnum];
/**
 * @export
 */
export declare const UserProjectChangeAccessV1AccessTypeEnum: {
    readonly NUMBER_0: 0;
    readonly NUMBER_1: 1;
    readonly NUMBER_2: 2;
};
export type UserProjectChangeAccessV1AccessTypeEnum = typeof UserProjectChangeAccessV1AccessTypeEnum[keyof typeof UserProjectChangeAccessV1AccessTypeEnum];
/**
 * @export
 */
export declare const UserProjectChangeAccessV1VEnum: {
    readonly _1: "1";
    readonly _2: "2";
    readonly _3: "3";
};
export type UserProjectChangeAccessV1VEnum = typeof UserProjectChangeAccessV1VEnum[keyof typeof UserProjectChangeAccessV1VEnum];
/**
 * @export
 */
export declare const UserProjectDelV1LanguageEnum: {
    readonly ru: "ru";
    readonly en: "en";
    readonly cn: "cn";
};
export type UserProjectDelV1LanguageEnum = typeof UserProjectDelV1LanguageEnum[keyof typeof UserProjectDelV1LanguageEnum];
/**
 * @export
 */
export declare const UserProjectDelV1VEnum: {
    readonly _1: "1";
    readonly _2: "2";
    readonly _3: "3";
};
export type UserProjectDelV1VEnum = typeof UserProjectDelV1VEnum[keyof typeof UserProjectDelV1VEnum];
/**
 * @export
 */
export declare const UserProjectGetProjectInfoV1LanguageEnum: {
    readonly ru: "ru";
    readonly en: "en";
    readonly cn: "cn";
};
export type UserProjectGetProjectInfoV1LanguageEnum = typeof UserProjectGetProjectInfoV1LanguageEnum[keyof typeof UserProjectGetProjectInfoV1LanguageEnum];
/**
 * @export
 */
export declare const UserProjectGetProjectInfoV1VEnum: {
    readonly _1: "1";
    readonly _2: "2";
    readonly _3: "3";
};
export type UserProjectGetProjectInfoV1VEnum = typeof UserProjectGetProjectInfoV1VEnum[keyof typeof UserProjectGetProjectInfoV1VEnum];
/**
 * @export
 */
export declare const UserProjectGetProjectV1LanguageEnum: {
    readonly ru: "ru";
    readonly en: "en";
    readonly cn: "cn";
};
export type UserProjectGetProjectV1LanguageEnum = typeof UserProjectGetProjectV1LanguageEnum[keyof typeof UserProjectGetProjectV1LanguageEnum];
/**
 * @export
 */
export declare const UserProjectGetProjectV1VEnum: {
    readonly _1: "1";
    readonly _2: "2";
    readonly _3: "3";
};
export type UserProjectGetProjectV1VEnum = typeof UserProjectGetProjectV1VEnum[keyof typeof UserProjectGetProjectV1VEnum];
/**
 * @export
 */
export declare const UserProjectGetUserV1LanguageEnum: {
    readonly ru: "ru";
    readonly en: "en";
    readonly cn: "cn";
};
export type UserProjectGetUserV1LanguageEnum = typeof UserProjectGetUserV1LanguageEnum[keyof typeof UserProjectGetUserV1LanguageEnum];
/**
 * @export
 */
export declare const UserProjectGetUserV1VEnum: {
    readonly _1: "1";
    readonly _2: "2";
    readonly _3: "3";
};
export type UserProjectGetUserV1VEnum = typeof UserProjectGetUserV1VEnum[keyof typeof UserProjectGetUserV1VEnum];
/**
 * @export
 */
export declare const UserProjectListAccessV1LanguageEnum: {
    readonly ru: "ru";
    readonly en: "en";
    readonly cn: "cn";
};
export type UserProjectListAccessV1LanguageEnum = typeof UserProjectListAccessV1LanguageEnum[keyof typeof UserProjectListAccessV1LanguageEnum];
/**
 * @export
 */
export declare const UserProjectListAccessV1VEnum: {
    readonly _1: "1";
    readonly _2: "2";
    readonly _3: "3";
};
export type UserProjectListAccessV1VEnum = typeof UserProjectListAccessV1VEnum[keyof typeof UserProjectListAccessV1VEnum];
/**
 * @export
 */
export declare const UserProjectListV1LanguageEnum: {
    readonly ru: "ru";
    readonly en: "en";
    readonly cn: "cn";
};
export type UserProjectListV1LanguageEnum = typeof UserProjectListV1LanguageEnum[keyof typeof UserProjectListV1LanguageEnum];
/**
 * @export
 */
export declare const UserProjectListV1VEnum: {
    readonly _1: "1";
    readonly _2: "2";
    readonly _3: "3";
};
export type UserProjectListV1VEnum = typeof UserProjectListV1VEnum[keyof typeof UserProjectListV1VEnum];
/**
 * @export
 */
export declare const UserProjectSelectProjectV1LanguageEnum: {
    readonly ru: "ru";
    readonly en: "en";
    readonly cn: "cn";
};
export type UserProjectSelectProjectV1LanguageEnum = typeof UserProjectSelectProjectV1LanguageEnum[keyof typeof UserProjectSelectProjectV1LanguageEnum];
/**
 * @export
 */
export declare const UserProjectSelectProjectV1VEnum: {
    readonly _1: "1";
    readonly _2: "2";
    readonly _3: "3";
};
export type UserProjectSelectProjectV1VEnum = typeof UserProjectSelectProjectV1VEnum[keyof typeof UserProjectSelectProjectV1VEnum];
//# sourceMappingURL=ProjectApi.d.ts.map