/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { ListOfProjectChannelInviteResponse, ProjectChannelInviteLinkResponse, ProjectChannelInviteResponse, SuccessResponse } from '../models/index';
export interface ProjectChannelInviteAcceptForProjectV1Request {
    language: ProjectChannelInviteAcceptForProjectV1LanguageEnum;
    project_id: number;
    channel_id: number;
    v?: ProjectChannelInviteAcceptForProjectV1VEnum;
}
export interface ProjectChannelInviteAcceptForSecretV1Request {
    language: ProjectChannelInviteAcceptForSecretV1LanguageEnum;
    project_id: number;
    channel_id: number;
    secret: string;
    v?: ProjectChannelInviteAcceptForSecretV1VEnum;
}
export interface ProjectChannelInviteAddByEmailV1Request {
    language: ProjectChannelInviteAddByEmailV1LanguageEnum;
    project_id: number;
    channel_id: number;
    email: string;
    access_type: ProjectChannelInviteAddByEmailV1AccessTypeEnum;
    v?: ProjectChannelInviteAddByEmailV1VEnum;
}
export interface ProjectChannelInviteAddByIdV1Request {
    language: ProjectChannelInviteAddByIdV1LanguageEnum;
    project_id: number;
    channel_id: number;
    access_type: ProjectChannelInviteAddByIdV1AccessTypeEnum;
    to_project_external_id: string;
    v?: ProjectChannelInviteAddByIdV1VEnum;
}
export interface ProjectChannelInviteDeclineForProjectV1Request {
    language: ProjectChannelInviteDeclineForProjectV1LanguageEnum;
    project_id: number;
    channel_id: number;
    v?: ProjectChannelInviteDeclineForProjectV1VEnum;
}
export interface ProjectChannelInviteDeclineForSecretV1Request {
    language: ProjectChannelInviteDeclineForSecretV1LanguageEnum;
    project_id: number;
    channel_id: number;
    secret: string;
    v?: ProjectChannelInviteDeclineForSecretV1VEnum;
}
export interface ProjectChannelInviteDelV1Request {
    language: ProjectChannelInviteDelV1LanguageEnum;
    id: number;
    v?: ProjectChannelInviteDelV1VEnum;
}
export interface ProjectChannelInviteGetForProjectV1Request {
    language: ProjectChannelInviteGetForProjectV1LanguageEnum;
    project_id: number;
    channel_id: number;
    v?: ProjectChannelInviteGetForProjectV1VEnum;
}
export interface ProjectChannelInviteGetForSecretV1Request {
    language: ProjectChannelInviteGetForSecretV1LanguageEnum;
    channel_id: number;
    secret: string;
    v?: ProjectChannelInviteGetForSecretV1VEnum;
}
export interface ProjectChannelInviteGetV1Request {
    language: ProjectChannelInviteGetV1LanguageEnum;
    id: number;
    v?: ProjectChannelInviteGetV1VEnum;
}
export interface ProjectChannelInviteListV1Request {
    language: ProjectChannelInviteListV1LanguageEnum;
    project_id: number;
    channel_id: number;
    v?: ProjectChannelInviteListV1VEnum;
}
/**
 * ProjectChannelInviteApi - interface
 *
 * @export
 * @interface ProjectChannelInviteApiInterface
 */
export interface ProjectChannelInviteApiInterface {
    /**
     *
     * @summary Accept channel invitation for selected project
     * @param {'ru' | 'en' | 'cn'} language Current language
     * @param {number} project_id The project to which you want to add a channel
     * @param {number} channel_id Channel id
     * @param {'1' | '2' | '3'} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProjectChannelInviteApiInterface
     */
    projectChannelInviteAcceptForProjectV1Raw(requestParameters: ProjectChannelInviteAcceptForProjectV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponse>>;
    /**
     * Accept channel invitation for selected project
     */
    projectChannelInviteAcceptForProjectV1(requestParameters: ProjectChannelInviteAcceptForProjectV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponse>;
    /**
     *
     * @summary Accept channel invitation using a secret link
     * @param {'ru' | 'en' | 'cn'} language Current language
     * @param {number} project_id The project to which you want to add a channel
     * @param {number} channel_id Channel id
     * @param {string} secret Secret
     * @param {'1' | '2' | '3'} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProjectChannelInviteApiInterface
     */
    projectChannelInviteAcceptForSecretV1Raw(requestParameters: ProjectChannelInviteAcceptForSecretV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponse>>;
    /**
     * Accept channel invitation using a secret link
     */
    projectChannelInviteAcceptForSecretV1(requestParameters: ProjectChannelInviteAcceptForSecretV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponse>;
    /**
     *
     * @summary Add channel invite item for another user by email
     * @param {'ru' | 'en' | 'cn'} language Current language
     * @param {number} project_id Project id
     * @param {number} channel_id Channel id
     * @param {string} email Email
     * @param {0 | 1 | 1 | 2} access_type Access type
     * @param {'1' | '2' | '3'} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProjectChannelInviteApiInterface
     */
    projectChannelInviteAddByEmailV1Raw(requestParameters: ProjectChannelInviteAddByEmailV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ProjectChannelInviteResponse>>;
    /**
     * Add channel invite item for another user by email
     */
    projectChannelInviteAddByEmailV1(requestParameters: ProjectChannelInviteAddByEmailV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ProjectChannelInviteResponse>;
    /**
     *
     * @summary Add channel invite item for another user by id
     * @param {'ru' | 'en' | 'cn'} language Current language
     * @param {number} project_id Project id
     * @param {number} channel_id Channel id
     * @param {0 | 1 | 1 | 2} access_type Access type
     * @param {string} to_project_external_id Project for get access by external id
     * @param {'1' | '2' | '3'} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProjectChannelInviteApiInterface
     */
    projectChannelInviteAddByIdV1Raw(requestParameters: ProjectChannelInviteAddByIdV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ProjectChannelInviteResponse>>;
    /**
     * Add channel invite item for another user by id
     */
    projectChannelInviteAddByIdV1(requestParameters: ProjectChannelInviteAddByIdV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ProjectChannelInviteResponse>;
    /**
     *
     * @summary Decline channel invitation for selected project
     * @param {'ru' | 'en' | 'cn'} language Current language
     * @param {number} project_id Channel id
     * @param {number} channel_id Channel id
     * @param {'1' | '2' | '3'} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProjectChannelInviteApiInterface
     */
    projectChannelInviteDeclineForProjectV1Raw(requestParameters: ProjectChannelInviteDeclineForProjectV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponse>>;
    /**
     * Decline channel invitation for selected project
     */
    projectChannelInviteDeclineForProjectV1(requestParameters: ProjectChannelInviteDeclineForProjectV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponse>;
    /**
     *
     * @summary Decline channel invitation using a secret link
     * @param {'ru' | 'en' | 'cn'} language Current language
     * @param {number} project_id The project to which you want to add a channel
     * @param {number} channel_id Channel id
     * @param {string} secret Secret
     * @param {'1' | '2' | '3'} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProjectChannelInviteApiInterface
     */
    projectChannelInviteDeclineForSecretV1Raw(requestParameters: ProjectChannelInviteDeclineForSecretV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponse>>;
    /**
     * Decline channel invitation using a secret link
     */
    projectChannelInviteDeclineForSecretV1(requestParameters: ProjectChannelInviteDeclineForSecretV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponse>;
    /**
     *
     * @summary Del channel invite item for my channel for another user
     * @param {'ru' | 'en' | 'cn'} language Current language
     * @param {number} id Unique id
     * @param {'1' | '2' | '3'} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProjectChannelInviteApiInterface
     */
    projectChannelInviteDelV1Raw(requestParameters: ProjectChannelInviteDelV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponse>>;
    /**
     * Del channel invite item for my channel for another user
     */
    projectChannelInviteDelV1(requestParameters: ProjectChannelInviteDelV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponse>;
    /**
     *
     * @summary Get invitation for channel
     * @param {'ru' | 'en' | 'cn'} language Current language
     * @param {number} project_id Current project id
     * @param {number} channel_id Channel id
     * @param {'1' | '2' | '3'} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProjectChannelInviteApiInterface
     */
    projectChannelInviteGetForProjectV1Raw(requestParameters: ProjectChannelInviteGetForProjectV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ProjectChannelInviteLinkResponse>>;
    /**
     * Get invitation for channel
     */
    projectChannelInviteGetForProjectV1(requestParameters: ProjectChannelInviteGetForProjectV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ProjectChannelInviteLinkResponse>;
    /**
     *
     * @summary Get channel invitation using a secret link
     * @param {'ru' | 'en' | 'cn'} language Current language
     * @param {number} channel_id Channel id
     * @param {string} secret Secret
     * @param {'1' | '2' | '3'} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProjectChannelInviteApiInterface
     */
    projectChannelInviteGetForSecretV1Raw(requestParameters: ProjectChannelInviteGetForSecretV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ProjectChannelInviteLinkResponse>>;
    /**
     * Get channel invitation using a secret link
     */
    projectChannelInviteGetForSecretV1(requestParameters: ProjectChannelInviteGetForSecretV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ProjectChannelInviteLinkResponse>;
    /**
     *
     * @summary Get channel invite item for my channel for another user
     * @param {'ru' | 'en' | 'cn'} language Current language
     * @param {number} id Channel request id
     * @param {'1' | '2' | '3'} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProjectChannelInviteApiInterface
     */
    projectChannelInviteGetV1Raw(requestParameters: ProjectChannelInviteGetV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponse>>;
    /**
     * Get channel invite item for my channel for another user
     */
    projectChannelInviteGetV1(requestParameters: ProjectChannelInviteGetV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponse>;
    /**
     *
     * @summary List of invites for channel in project
     * @param {'ru' | 'en' | 'cn'} language Current language
     * @param {number} project_id Project id
     * @param {number} channel_id Channel id
     * @param {'1' | '2' | '3'} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProjectChannelInviteApiInterface
     */
    projectChannelInviteListV1Raw(requestParameters: ProjectChannelInviteListV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ListOfProjectChannelInviteResponse>>;
    /**
     * List of invites for channel in project
     */
    projectChannelInviteListV1(requestParameters: ProjectChannelInviteListV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ListOfProjectChannelInviteResponse>;
}
/**
 *
 */
export declare class ProjectChannelInviteApi extends runtime.BaseAPI implements ProjectChannelInviteApiInterface {
    /**
     * Accept channel invitation for selected project
     */
    projectChannelInviteAcceptForProjectV1Raw(requestParameters: ProjectChannelInviteAcceptForProjectV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponse>>;
    /**
     * Accept channel invitation for selected project
     */
    projectChannelInviteAcceptForProjectV1(requestParameters: ProjectChannelInviteAcceptForProjectV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponse>;
    /**
     * Accept channel invitation using a secret link
     */
    projectChannelInviteAcceptForSecretV1Raw(requestParameters: ProjectChannelInviteAcceptForSecretV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponse>>;
    /**
     * Accept channel invitation using a secret link
     */
    projectChannelInviteAcceptForSecretV1(requestParameters: ProjectChannelInviteAcceptForSecretV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponse>;
    /**
     * Add channel invite item for another user by email
     */
    projectChannelInviteAddByEmailV1Raw(requestParameters: ProjectChannelInviteAddByEmailV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ProjectChannelInviteResponse>>;
    /**
     * Add channel invite item for another user by email
     */
    projectChannelInviteAddByEmailV1(requestParameters: ProjectChannelInviteAddByEmailV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ProjectChannelInviteResponse>;
    /**
     * Add channel invite item for another user by id
     */
    projectChannelInviteAddByIdV1Raw(requestParameters: ProjectChannelInviteAddByIdV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ProjectChannelInviteResponse>>;
    /**
     * Add channel invite item for another user by id
     */
    projectChannelInviteAddByIdV1(requestParameters: ProjectChannelInviteAddByIdV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ProjectChannelInviteResponse>;
    /**
     * Decline channel invitation for selected project
     */
    projectChannelInviteDeclineForProjectV1Raw(requestParameters: ProjectChannelInviteDeclineForProjectV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponse>>;
    /**
     * Decline channel invitation for selected project
     */
    projectChannelInviteDeclineForProjectV1(requestParameters: ProjectChannelInviteDeclineForProjectV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponse>;
    /**
     * Decline channel invitation using a secret link
     */
    projectChannelInviteDeclineForSecretV1Raw(requestParameters: ProjectChannelInviteDeclineForSecretV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponse>>;
    /**
     * Decline channel invitation using a secret link
     */
    projectChannelInviteDeclineForSecretV1(requestParameters: ProjectChannelInviteDeclineForSecretV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponse>;
    /**
     * Del channel invite item for my channel for another user
     */
    projectChannelInviteDelV1Raw(requestParameters: ProjectChannelInviteDelV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponse>>;
    /**
     * Del channel invite item for my channel for another user
     */
    projectChannelInviteDelV1(requestParameters: ProjectChannelInviteDelV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponse>;
    /**
     * Get invitation for channel
     */
    projectChannelInviteGetForProjectV1Raw(requestParameters: ProjectChannelInviteGetForProjectV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ProjectChannelInviteLinkResponse>>;
    /**
     * Get invitation for channel
     */
    projectChannelInviteGetForProjectV1(requestParameters: ProjectChannelInviteGetForProjectV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ProjectChannelInviteLinkResponse>;
    /**
     * Get channel invitation using a secret link
     */
    projectChannelInviteGetForSecretV1Raw(requestParameters: ProjectChannelInviteGetForSecretV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ProjectChannelInviteLinkResponse>>;
    /**
     * Get channel invitation using a secret link
     */
    projectChannelInviteGetForSecretV1(requestParameters: ProjectChannelInviteGetForSecretV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ProjectChannelInviteLinkResponse>;
    /**
     * Get channel invite item for my channel for another user
     */
    projectChannelInviteGetV1Raw(requestParameters: ProjectChannelInviteGetV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponse>>;
    /**
     * Get channel invite item for my channel for another user
     */
    projectChannelInviteGetV1(requestParameters: ProjectChannelInviteGetV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponse>;
    /**
     * List of invites for channel in project
     */
    projectChannelInviteListV1Raw(requestParameters: ProjectChannelInviteListV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ListOfProjectChannelInviteResponse>>;
    /**
     * List of invites for channel in project
     */
    projectChannelInviteListV1(requestParameters: ProjectChannelInviteListV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ListOfProjectChannelInviteResponse>;
}
/**
 * @export
 */
export declare const ProjectChannelInviteAcceptForProjectV1LanguageEnum: {
    readonly ru: "ru";
    readonly en: "en";
    readonly cn: "cn";
};
export type ProjectChannelInviteAcceptForProjectV1LanguageEnum = typeof ProjectChannelInviteAcceptForProjectV1LanguageEnum[keyof typeof ProjectChannelInviteAcceptForProjectV1LanguageEnum];
/**
 * @export
 */
export declare const ProjectChannelInviteAcceptForProjectV1VEnum: {
    readonly _1: "1";
    readonly _2: "2";
    readonly _3: "3";
};
export type ProjectChannelInviteAcceptForProjectV1VEnum = typeof ProjectChannelInviteAcceptForProjectV1VEnum[keyof typeof ProjectChannelInviteAcceptForProjectV1VEnum];
/**
 * @export
 */
export declare const ProjectChannelInviteAcceptForSecretV1LanguageEnum: {
    readonly ru: "ru";
    readonly en: "en";
    readonly cn: "cn";
};
export type ProjectChannelInviteAcceptForSecretV1LanguageEnum = typeof ProjectChannelInviteAcceptForSecretV1LanguageEnum[keyof typeof ProjectChannelInviteAcceptForSecretV1LanguageEnum];
/**
 * @export
 */
export declare const ProjectChannelInviteAcceptForSecretV1VEnum: {
    readonly _1: "1";
    readonly _2: "2";
    readonly _3: "3";
};
export type ProjectChannelInviteAcceptForSecretV1VEnum = typeof ProjectChannelInviteAcceptForSecretV1VEnum[keyof typeof ProjectChannelInviteAcceptForSecretV1VEnum];
/**
 * @export
 */
export declare const ProjectChannelInviteAddByEmailV1LanguageEnum: {
    readonly ru: "ru";
    readonly en: "en";
    readonly cn: "cn";
};
export type ProjectChannelInviteAddByEmailV1LanguageEnum = typeof ProjectChannelInviteAddByEmailV1LanguageEnum[keyof typeof ProjectChannelInviteAddByEmailV1LanguageEnum];
/**
 * @export
 */
export declare const ProjectChannelInviteAddByEmailV1AccessTypeEnum: {
    readonly NUMBER_0: 0;
    readonly NUMBER_1: 1;
    readonly NUMBER_12: 1;
    readonly NUMBER_2: 2;
};
export type ProjectChannelInviteAddByEmailV1AccessTypeEnum = typeof ProjectChannelInviteAddByEmailV1AccessTypeEnum[keyof typeof ProjectChannelInviteAddByEmailV1AccessTypeEnum];
/**
 * @export
 */
export declare const ProjectChannelInviteAddByEmailV1VEnum: {
    readonly _1: "1";
    readonly _2: "2";
    readonly _3: "3";
};
export type ProjectChannelInviteAddByEmailV1VEnum = typeof ProjectChannelInviteAddByEmailV1VEnum[keyof typeof ProjectChannelInviteAddByEmailV1VEnum];
/**
 * @export
 */
export declare const ProjectChannelInviteAddByIdV1LanguageEnum: {
    readonly ru: "ru";
    readonly en: "en";
    readonly cn: "cn";
};
export type ProjectChannelInviteAddByIdV1LanguageEnum = typeof ProjectChannelInviteAddByIdV1LanguageEnum[keyof typeof ProjectChannelInviteAddByIdV1LanguageEnum];
/**
 * @export
 */
export declare const ProjectChannelInviteAddByIdV1AccessTypeEnum: {
    readonly NUMBER_0: 0;
    readonly NUMBER_1: 1;
    readonly NUMBER_12: 1;
    readonly NUMBER_2: 2;
};
export type ProjectChannelInviteAddByIdV1AccessTypeEnum = typeof ProjectChannelInviteAddByIdV1AccessTypeEnum[keyof typeof ProjectChannelInviteAddByIdV1AccessTypeEnum];
/**
 * @export
 */
export declare const ProjectChannelInviteAddByIdV1VEnum: {
    readonly _1: "1";
    readonly _2: "2";
    readonly _3: "3";
};
export type ProjectChannelInviteAddByIdV1VEnum = typeof ProjectChannelInviteAddByIdV1VEnum[keyof typeof ProjectChannelInviteAddByIdV1VEnum];
/**
 * @export
 */
export declare const ProjectChannelInviteDeclineForProjectV1LanguageEnum: {
    readonly ru: "ru";
    readonly en: "en";
    readonly cn: "cn";
};
export type ProjectChannelInviteDeclineForProjectV1LanguageEnum = typeof ProjectChannelInviteDeclineForProjectV1LanguageEnum[keyof typeof ProjectChannelInviteDeclineForProjectV1LanguageEnum];
/**
 * @export
 */
export declare const ProjectChannelInviteDeclineForProjectV1VEnum: {
    readonly _1: "1";
    readonly _2: "2";
    readonly _3: "3";
};
export type ProjectChannelInviteDeclineForProjectV1VEnum = typeof ProjectChannelInviteDeclineForProjectV1VEnum[keyof typeof ProjectChannelInviteDeclineForProjectV1VEnum];
/**
 * @export
 */
export declare const ProjectChannelInviteDeclineForSecretV1LanguageEnum: {
    readonly ru: "ru";
    readonly en: "en";
    readonly cn: "cn";
};
export type ProjectChannelInviteDeclineForSecretV1LanguageEnum = typeof ProjectChannelInviteDeclineForSecretV1LanguageEnum[keyof typeof ProjectChannelInviteDeclineForSecretV1LanguageEnum];
/**
 * @export
 */
export declare const ProjectChannelInviteDeclineForSecretV1VEnum: {
    readonly _1: "1";
    readonly _2: "2";
    readonly _3: "3";
};
export type ProjectChannelInviteDeclineForSecretV1VEnum = typeof ProjectChannelInviteDeclineForSecretV1VEnum[keyof typeof ProjectChannelInviteDeclineForSecretV1VEnum];
/**
 * @export
 */
export declare const ProjectChannelInviteDelV1LanguageEnum: {
    readonly ru: "ru";
    readonly en: "en";
    readonly cn: "cn";
};
export type ProjectChannelInviteDelV1LanguageEnum = typeof ProjectChannelInviteDelV1LanguageEnum[keyof typeof ProjectChannelInviteDelV1LanguageEnum];
/**
 * @export
 */
export declare const ProjectChannelInviteDelV1VEnum: {
    readonly _1: "1";
    readonly _2: "2";
    readonly _3: "3";
};
export type ProjectChannelInviteDelV1VEnum = typeof ProjectChannelInviteDelV1VEnum[keyof typeof ProjectChannelInviteDelV1VEnum];
/**
 * @export
 */
export declare const ProjectChannelInviteGetForProjectV1LanguageEnum: {
    readonly ru: "ru";
    readonly en: "en";
    readonly cn: "cn";
};
export type ProjectChannelInviteGetForProjectV1LanguageEnum = typeof ProjectChannelInviteGetForProjectV1LanguageEnum[keyof typeof ProjectChannelInviteGetForProjectV1LanguageEnum];
/**
 * @export
 */
export declare const ProjectChannelInviteGetForProjectV1VEnum: {
    readonly _1: "1";
    readonly _2: "2";
    readonly _3: "3";
};
export type ProjectChannelInviteGetForProjectV1VEnum = typeof ProjectChannelInviteGetForProjectV1VEnum[keyof typeof ProjectChannelInviteGetForProjectV1VEnum];
/**
 * @export
 */
export declare const ProjectChannelInviteGetForSecretV1LanguageEnum: {
    readonly ru: "ru";
    readonly en: "en";
    readonly cn: "cn";
};
export type ProjectChannelInviteGetForSecretV1LanguageEnum = typeof ProjectChannelInviteGetForSecretV1LanguageEnum[keyof typeof ProjectChannelInviteGetForSecretV1LanguageEnum];
/**
 * @export
 */
export declare const ProjectChannelInviteGetForSecretV1VEnum: {
    readonly _1: "1";
    readonly _2: "2";
    readonly _3: "3";
};
export type ProjectChannelInviteGetForSecretV1VEnum = typeof ProjectChannelInviteGetForSecretV1VEnum[keyof typeof ProjectChannelInviteGetForSecretV1VEnum];
/**
 * @export
 */
export declare const ProjectChannelInviteGetV1LanguageEnum: {
    readonly ru: "ru";
    readonly en: "en";
    readonly cn: "cn";
};
export type ProjectChannelInviteGetV1LanguageEnum = typeof ProjectChannelInviteGetV1LanguageEnum[keyof typeof ProjectChannelInviteGetV1LanguageEnum];
/**
 * @export
 */
export declare const ProjectChannelInviteGetV1VEnum: {
    readonly _1: "1";
    readonly _2: "2";
    readonly _3: "3";
};
export type ProjectChannelInviteGetV1VEnum = typeof ProjectChannelInviteGetV1VEnum[keyof typeof ProjectChannelInviteGetV1VEnum];
/**
 * @export
 */
export declare const ProjectChannelInviteListV1LanguageEnum: {
    readonly ru: "ru";
    readonly en: "en";
    readonly cn: "cn";
};
export type ProjectChannelInviteListV1LanguageEnum = typeof ProjectChannelInviteListV1LanguageEnum[keyof typeof ProjectChannelInviteListV1LanguageEnum];
/**
 * @export
 */
export declare const ProjectChannelInviteListV1VEnum: {
    readonly _1: "1";
    readonly _2: "2";
    readonly _3: "3";
};
export type ProjectChannelInviteListV1VEnum = typeof ProjectChannelInviteListV1VEnum[keyof typeof ProjectChannelInviteListV1VEnum];
//# sourceMappingURL=ProjectChannelInviteApi.d.ts.map