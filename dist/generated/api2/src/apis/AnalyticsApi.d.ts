/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
export interface AnalyticsTsStreamBitrateV1Request {
    language: AnalyticsTsStreamBitrateV1LanguageEnum;
    projectId: number;
    streamId: number;
    v?: AnalyticsTsStreamBitrateV1VEnum;
}
export interface AnalyticsTsStreamEventsV1Request {
    language: AnalyticsTsStreamEventsV1LanguageEnum;
    projectId: number;
    streamId: number;
    v?: AnalyticsTsStreamEventsV1VEnum;
}
export interface AnalyticsTsStreamViewersV1Request {
    language: AnalyticsTsStreamViewersV1LanguageEnum;
    projectId: number;
    streamId: number;
    v?: AnalyticsTsStreamViewersV1VEnum;
}
/**
 * AnalyticsApi - interface
 *
 * @export
 * @interface AnalyticsApiInterface
 */
export interface AnalyticsApiInterface {
    /**
     *
     * @summary Bitrate for stream
     * @param {'ru' | 'en' | 'cn'} language Current language
     * @param {number} projectId Project id
     * @param {number} streamId stream id
     * @param {'1' | '2' | '3'} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AnalyticsApiInterface
     */
    analyticsTsStreamBitrateV1Raw(requestParameters: AnalyticsTsStreamBitrateV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>>;
    /**
     * Bitrate for stream
     */
    analyticsTsStreamBitrateV1(requestParameters: AnalyticsTsStreamBitrateV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object>;
    /**
     *
     * @summary Events for stream
     * @param {'ru' | 'en' | 'cn'} language Current language
     * @param {number} projectId Project id
     * @param {number} streamId stream id
     * @param {'1' | '2' | '3'} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AnalyticsApiInterface
     */
    analyticsTsStreamEventsV1Raw(requestParameters: AnalyticsTsStreamEventsV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>>;
    /**
     * Events for stream
     */
    analyticsTsStreamEventsV1(requestParameters: AnalyticsTsStreamEventsV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object>;
    /**
     *
     * @summary Viewers for stream
     * @param {'ru' | 'en' | 'cn'} language Current language
     * @param {number} projectId Project id
     * @param {number} streamId stream id
     * @param {'1' | '2' | '3'} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AnalyticsApiInterface
     */
    analyticsTsStreamViewersV1Raw(requestParameters: AnalyticsTsStreamViewersV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>>;
    /**
     * Viewers for stream
     */
    analyticsTsStreamViewersV1(requestParameters: AnalyticsTsStreamViewersV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object>;
}
/**
 *
 */
export declare class AnalyticsApi extends runtime.BaseAPI implements AnalyticsApiInterface {
    /**
     * Bitrate for stream
     */
    analyticsTsStreamBitrateV1Raw(requestParameters: AnalyticsTsStreamBitrateV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>>;
    /**
     * Bitrate for stream
     */
    analyticsTsStreamBitrateV1(requestParameters: AnalyticsTsStreamBitrateV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object>;
    /**
     * Events for stream
     */
    analyticsTsStreamEventsV1Raw(requestParameters: AnalyticsTsStreamEventsV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>>;
    /**
     * Events for stream
     */
    analyticsTsStreamEventsV1(requestParameters: AnalyticsTsStreamEventsV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object>;
    /**
     * Viewers for stream
     */
    analyticsTsStreamViewersV1Raw(requestParameters: AnalyticsTsStreamViewersV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>>;
    /**
     * Viewers for stream
     */
    analyticsTsStreamViewersV1(requestParameters: AnalyticsTsStreamViewersV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object>;
}
/**
 * @export
 */
export declare const AnalyticsTsStreamBitrateV1LanguageEnum: {
    readonly Ru: "ru";
    readonly En: "en";
    readonly Cn: "cn";
};
export type AnalyticsTsStreamBitrateV1LanguageEnum = typeof AnalyticsTsStreamBitrateV1LanguageEnum[keyof typeof AnalyticsTsStreamBitrateV1LanguageEnum];
/**
 * @export
 */
export declare const AnalyticsTsStreamBitrateV1VEnum: {
    readonly _1: "1";
    readonly _2: "2";
    readonly _3: "3";
};
export type AnalyticsTsStreamBitrateV1VEnum = typeof AnalyticsTsStreamBitrateV1VEnum[keyof typeof AnalyticsTsStreamBitrateV1VEnum];
/**
 * @export
 */
export declare const AnalyticsTsStreamEventsV1LanguageEnum: {
    readonly Ru: "ru";
    readonly En: "en";
    readonly Cn: "cn";
};
export type AnalyticsTsStreamEventsV1LanguageEnum = typeof AnalyticsTsStreamEventsV1LanguageEnum[keyof typeof AnalyticsTsStreamEventsV1LanguageEnum];
/**
 * @export
 */
export declare const AnalyticsTsStreamEventsV1VEnum: {
    readonly _1: "1";
    readonly _2: "2";
    readonly _3: "3";
};
export type AnalyticsTsStreamEventsV1VEnum = typeof AnalyticsTsStreamEventsV1VEnum[keyof typeof AnalyticsTsStreamEventsV1VEnum];
/**
 * @export
 */
export declare const AnalyticsTsStreamViewersV1LanguageEnum: {
    readonly Ru: "ru";
    readonly En: "en";
    readonly Cn: "cn";
};
export type AnalyticsTsStreamViewersV1LanguageEnum = typeof AnalyticsTsStreamViewersV1LanguageEnum[keyof typeof AnalyticsTsStreamViewersV1LanguageEnum];
/**
 * @export
 */
export declare const AnalyticsTsStreamViewersV1VEnum: {
    readonly _1: "1";
    readonly _2: "2";
    readonly _3: "3";
};
export type AnalyticsTsStreamViewersV1VEnum = typeof AnalyticsTsStreamViewersV1VEnum[keyof typeof AnalyticsTsStreamViewersV1VEnum];
//# sourceMappingURL=AnalyticsApi.d.ts.map