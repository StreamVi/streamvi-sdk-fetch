/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { GetStreamKeyResponse, SetRecordStreamRequest, SuccessResponse } from '../models/index';
export interface StreamKeysKeyV1Request {
    language: StreamKeysKeyV1LanguageEnum;
    projectId: number;
    v?: StreamKeysKeyV1VEnum;
}
export interface StreamKeysUpdateRecordV1Request {
    setRecordStreamRequest: SetRecordStreamRequest;
}
/**
 * StreamKeyApi - interface
 *
 * @export
 * @interface StreamKeyApiInterface
 */
export interface StreamKeyApiInterface {
    /**
     *
     * @summary Get stream credentials
     * @param {'ru' | 'en' | 'cn'} language Current language
     * @param {number} projectId Project id
     * @param {'1' | '2' | '3'} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StreamKeyApiInterface
     */
    streamKeysKeyV1Raw(requestParameters: StreamKeysKeyV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetStreamKeyResponse>>;
    /**
     * Get stream credentials
     */
    streamKeysKeyV1(requestParameters: StreamKeysKeyV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetStreamKeyResponse>;
    /**
     *
     * @summary Update record
     * @param {SetRecordStreamRequest} setRecordStreamRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StreamKeyApiInterface
     */
    streamKeysUpdateRecordV1Raw(requestParameters: StreamKeysUpdateRecordV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponse>>;
    /**
     * Update record
     */
    streamKeysUpdateRecordV1(requestParameters: StreamKeysUpdateRecordV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponse>;
}
/**
 *
 */
export declare class StreamKeyApi extends runtime.BaseAPI implements StreamKeyApiInterface {
    /**
     * Get stream credentials
     */
    streamKeysKeyV1Raw(requestParameters: StreamKeysKeyV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetStreamKeyResponse>>;
    /**
     * Get stream credentials
     */
    streamKeysKeyV1(requestParameters: StreamKeysKeyV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetStreamKeyResponse>;
    /**
     * Update record
     */
    streamKeysUpdateRecordV1Raw(requestParameters: StreamKeysUpdateRecordV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponse>>;
    /**
     * Update record
     */
    streamKeysUpdateRecordV1(requestParameters: StreamKeysUpdateRecordV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponse>;
}
/**
 * @export
 */
export declare const StreamKeysKeyV1LanguageEnum: {
    readonly Ru: "ru";
    readonly En: "en";
    readonly Cn: "cn";
};
export type StreamKeysKeyV1LanguageEnum = typeof StreamKeysKeyV1LanguageEnum[keyof typeof StreamKeysKeyV1LanguageEnum];
/**
 * @export
 */
export declare const StreamKeysKeyV1VEnum: {
    readonly _1: "1";
    readonly _2: "2";
    readonly _3: "3";
};
export type StreamKeysKeyV1VEnum = typeof StreamKeysKeyV1VEnum[keyof typeof StreamKeysKeyV1VEnum];
//# sourceMappingURL=StreamKeyApi.d.ts.map