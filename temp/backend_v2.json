{
  "openapi": "3.0.0",
  "paths": {
    "/method/users/profile": {
      "get": {
        "operationId": "User_getProfileV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "project_id",
            "required": false,
            "in": "query",
            "description": "Project id",
            "schema": {
              "nullable": true,
              "default": null,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Get user profile",
        "tags": [
          "User"
        ]
      },
      "post": {
        "operationId": "User_updateProfileV1",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ProfileUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Update profile",
        "tags": [
          "User"
        ]
      }
    },
    "/method/plan_restream": {
      "get": {
        "operationId": "PlanRestream_tariffV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "project_id",
            "required": true,
            "in": "query",
            "description": "Project id",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlanRestreamForProject"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Get tariff for project",
        "tags": [
          "PlanRestream"
        ]
      },
      "delete": {
        "operationId": "PlanRestream_removeV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "project_id",
            "required": true,
            "in": "query",
            "description": "Project id",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "plan_restream_id",
            "required": true,
            "in": "query",
            "description": "Restream plan id",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Remove after tariff",
        "tags": [
          "PlanRestream"
        ]
      },
      "post": {
        "operationId": "PlanRestream_buyV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "project_id",
            "required": true,
            "in": "query",
            "description": "Project id",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "period",
            "required": true,
            "in": "query",
            "description": "Period",
            "schema": {
              "enum": [
                "month",
                "year"
              ],
              "type": "string"
            }
          },
          {
            "name": "plan_restream_id",
            "required": true,
            "in": "query",
            "description": "Restream plan id",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "count_channel",
            "required": false,
            "in": "query",
            "description": "Channel count",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "bitrate",
            "required": false,
            "in": "query",
            "description": "Bitrate, kbps",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Buy restream tariff",
        "tags": [
          "PlanRestream"
        ]
      }
    },
    "/method/plan_restream/list": {
      "get": {
        "operationId": "PlanRestream_listV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlanRestreamResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Get list of restream tariffs",
        "tags": [
          "PlanRestream"
        ]
      }
    },
    "/method/plan_restream/list/project": {
      "get": {
        "operationId": "PlanRestream_listProjectV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "project_id",
            "required": true,
            "in": "query",
            "description": "Project id",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlanRestreamProjectResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Get list of restream tariffs for project",
        "tags": [
          "PlanRestream"
        ]
      }
    },
    "/method/plan_restream/get_discount": {
      "get": {
        "operationId": "PlanRestream_getDiscountV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlanRestreamDiscountResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Get discount restream",
        "tags": [
          "PlanRestream"
        ]
      }
    },
    "/method/plan_restream/check": {
      "get": {
        "operationId": "PlanRestream_check_2V1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "project_id",
            "required": true,
            "in": "query",
            "description": "Project id",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "period",
            "required": true,
            "in": "query",
            "description": "Period",
            "schema": {
              "enum": [
                "month",
                "year"
              ],
              "type": "string"
            }
          },
          {
            "name": "plan_restream_id",
            "required": true,
            "in": "query",
            "description": "Restream plan id",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "use_balance",
            "required": false,
            "in": "query",
            "description": "Is select balance",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "channels",
            "required": false,
            "in": "query",
            "description": "Channels count",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "bitrate",
            "required": false,
            "in": "query",
            "description": "Bitrate, kbps",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlanRestreamCheckV2Response"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Load data for show card the tariffs v2",
        "tags": [
          "PlanRestream"
        ]
      }
    },
    "/method/money_flow/list": {
      "get": {
        "operationId": "MoneyFlow_listV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "project_id",
            "required": true,
            "in": "query",
            "description": "Project id",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of results",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "default": 20,
              "type": "number"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "Page offset number",
            "schema": {
              "minimum": 0,
              "default": 0,
              "type": "number"
            }
          },
          {
            "name": "date_from",
            "required": false,
            "in": "query",
            "description": "Date from",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "date_to",
            "required": false,
            "in": "query",
            "description": "Date to",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "type",
            "required": false,
            "in": "query",
            "description": "Filter code transaction. example 1 or 1,2,3",
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "name": "balance_type",
            "required": false,
            "in": "query",
            "description": "Filter code transaction. example 1 or 1,2,3",
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "title": "PaginatedResponseOfMoneyFlowResponse",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginatedResponse"
                    },
                    {
                      "properties": {
                        "results": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/MoneyFlowResponse"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Transaction list for frontend",
        "tags": [
          "MoneyFlow"
        ]
      }
    },
    "/method/project/select": {
      "get": {
        "operationId": "UserProject_selectProjectV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "query",
            "description": "Project internal id",
            "schema": {
              "example": "1",
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProjectGetResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Select user for project",
        "tags": [
          "UserProject"
        ]
      }
    },
    "/method/project/get_project": {
      "get": {
        "operationId": "UserProject_getProjectV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "project_external_id",
            "required": true,
            "in": "query",
            "description": "Project external id",
            "schema": {
              "example": "Dj48jD8",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProjectGetResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Get project by number id",
        "tags": [
          "UserProject"
        ]
      }
    },
    "/method/project/get_user": {
      "get": {
        "operationId": "UserProject_getUserV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "user_external_id",
            "required": true,
            "in": "query",
            "description": "User external id",
            "schema": {
              "example": "Dj48jD8",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProjectGetResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Get user by number id",
        "tags": [
          "UserProject"
        ]
      }
    },
    "/method/project/user/list": {
      "get": {
        "operationId": "UserProject_listAccessV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "project_id",
            "required": true,
            "in": "query",
            "description": "Project id",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ListOfUserProject2ProjectResponse",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ListResponse"
                    },
                    {
                      "properties": {
                        "results": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/UserProject2ProjectResponse"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "List of user in project",
        "tags": [
          "UserProject"
        ]
      }
    },
    "/method/project/user/del": {
      "post": {
        "operationId": "UserProject_delV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "project_id",
            "required": true,
            "in": "query",
            "description": "Project id",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "user_id",
            "required": true,
            "in": "query",
            "description": "User id",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Remove user from project",
        "tags": [
          "UserProject"
        ]
      }
    },
    "/method/project/user/change_access": {
      "post": {
        "operationId": "UserProject_changeAccessV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "project_id",
            "required": true,
            "in": "query",
            "description": "Project id",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "user_id",
            "required": true,
            "in": "query",
            "description": "User id",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "access_type",
            "required": true,
            "in": "query",
            "description": "Access type",
            "schema": {
              "enum": [
                0,
                1,
                2
              ],
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Change access user from project",
        "tags": [
          "UserProject"
        ]
      }
    },
    "/method/project/list": {
      "get": {
        "operationId": "UserProject_listV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of results",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "default": 20,
              "example": 20,
              "type": "number"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "Page offset number",
            "schema": {
              "minimum": 0,
              "default": 0,
              "example": 0,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "title": "PaginatedResponseOfUserProjectResponse",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginatedResponse"
                    },
                    {
                      "properties": {
                        "results": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/UserProjectResponse"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "List of project for current user",
        "tags": [
          "UserProject"
        ]
      }
    },
    "/method/project/get_project_info": {
      "get": {
        "operationId": "UserProject_get_project_infoV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "project_id",
            "required": true,
            "in": "query",
            "description": "Project id",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Get project full info",
        "tags": [
          "UserProject"
        ]
      }
    },
    "/method/project/live-status": {
      "get": {
        "operationId": "Method_liveStatusV1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MethodProjectLiveStatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oAuth": [
              "oAuth"
            ]
          },
          {
            "X-API-KEY": [
              "X-API-KEY"
            ]
          }
        ],
        "summary": "Get live status",
        "tags": [
          "Project"
        ]
      }
    },
    "/method/project_history/list": {
      "get": {
        "operationId": "ProjectHistory_listV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of results",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "default": 20,
              "type": "number"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "Page offset number",
            "schema": {
              "minimum": 0,
              "default": 0,
              "type": "number"
            }
          },
          {
            "name": "project_id",
            "required": true,
            "in": "query",
            "description": "Project id",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "date_from",
            "required": false,
            "in": "query",
            "description": "Date from",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "date_to",
            "required": false,
            "in": "query",
            "description": "Date to",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "action",
            "required": false,
            "in": "query",
            "description": "Action",
            "schema": {
              "enum": [
                "project_channel_invite_add",
                "project_channel_invite_del",
                "project_channel_invite_accept",
                "project_channel_invite_decline",
                "user_project_invite_add",
                "user_project_invite_del",
                "user_project_invite_accept",
                "user_project_invite_decline",
                "user_project_add",
                "user_project_del",
                "user_project_change",
                "project_channel_add",
                "project_channel_del",
                "project_channel_change"
              ],
              "type": "string"
            }
          },
          {
            "name": "group_id",
            "required": false,
            "in": "query",
            "description": "Group id",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "title": "PaginatedResponseOfProjectHistoryResponse",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginatedResponse"
                    },
                    {
                      "properties": {
                        "results": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ProjectHistoryResponse"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Get project history of actions",
        "tags": [
          "ProjectHistory"
        ]
      }
    },
    "/method/notify_user/del_mobile_token": {
      "post": {
        "operationId": "NotifyUser_delMobileTokenV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "token",
            "required": true,
            "in": "query",
            "description": "Token in mobile app",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Delete mobile token from user",
        "tags": [
          "NotifyUser"
        ]
      }
    },
    "/method/notify_user/setting": {
      "get": {
        "operationId": "NotifyUser_getV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "project_id",
            "required": true,
            "in": "query",
            "description": "Project id",
            "schema": {
              "example": 1,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteNotifyUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Get user notify settings",
        "tags": [
          "NotifyUser"
        ]
      },
      "post": {
        "operationId": "NotifyUser_setV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1"
              ],
              "type": "string",
              "default": "1"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Set user notify settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SiteSetNotifyUserRequest"
              },
              "examples": {
                "0-0-0": {
                  "summary": "telegram important enable",
                  "value": {
                    "project_id": 1,
                    "notify_channel": "telegram",
                    "notify_category": "important",
                    "status": "enable"
                  }
                },
                "0-0-1": {
                  "summary": "telegram important disable",
                  "value": {
                    "project_id": 1,
                    "notify_channel": "telegram",
                    "notify_category": "important",
                    "status": "disable"
                  }
                },
                "0-1-0": {
                  "summary": "telegram stream enable",
                  "value": {
                    "project_id": 1,
                    "notify_channel": "telegram",
                    "notify_category": "stream",
                    "status": "enable"
                  }
                },
                "0-1-1": {
                  "summary": "telegram stream disable",
                  "value": {
                    "project_id": 1,
                    "notify_channel": "telegram",
                    "notify_category": "stream",
                    "status": "disable"
                  }
                },
                "1-0-0": {
                  "summary": "cabinet important enable",
                  "value": {
                    "project_id": 1,
                    "notify_channel": "cabinet",
                    "notify_category": "important",
                    "status": "enable"
                  }
                },
                "1-0-1": {
                  "summary": "cabinet important disable",
                  "value": {
                    "project_id": 1,
                    "notify_channel": "cabinet",
                    "notify_category": "important",
                    "status": "disable"
                  }
                },
                "1-1-0": {
                  "summary": "cabinet stream enable",
                  "value": {
                    "project_id": 1,
                    "notify_channel": "cabinet",
                    "notify_category": "stream",
                    "status": "enable"
                  }
                },
                "1-1-1": {
                  "summary": "cabinet stream disable",
                  "value": {
                    "project_id": 1,
                    "notify_channel": "cabinet",
                    "notify_category": "stream",
                    "status": "disable"
                  }
                },
                "2-0-0": {
                  "summary": "mobile important enable",
                  "value": {
                    "project_id": 1,
                    "notify_channel": "mobile",
                    "notify_category": "important",
                    "status": "enable"
                  }
                },
                "2-0-1": {
                  "summary": "mobile important disable",
                  "value": {
                    "project_id": 1,
                    "notify_channel": "mobile",
                    "notify_category": "important",
                    "status": "disable"
                  }
                },
                "2-1-0": {
                  "summary": "mobile stream enable",
                  "value": {
                    "project_id": 1,
                    "notify_channel": "mobile",
                    "notify_category": "stream",
                    "status": "enable"
                  }
                },
                "2-1-1": {
                  "summary": "mobile stream disable",
                  "value": {
                    "project_id": 1,
                    "notify_channel": "mobile",
                    "notify_category": "stream",
                    "status": "disable"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Set user notify settings",
        "tags": [
          "NotifyUser"
        ]
      }
    },
    "/method/notify_user/screen": {
      "get": {
        "operationId": "NotifyUser_getScreenV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "project_id",
            "required": true,
            "in": "query",
            "description": "Project id",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteScreenNotifyUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Get user screen notify",
        "tags": [
          "NotifyUser"
        ]
      },
      "post": {
        "operationId": "NotifyUser_removeScreenV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "project_id",
            "required": true,
            "in": "query",
            "description": "Project id",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Remove user screen notify",
        "tags": [
          "NotifyUser"
        ]
      }
    },
    "/method/centrifuge": {
      "get": {
        "operationId": "Centrifuge_authV2",
        "parameters": [
          {
            "name": "project_id",
            "required": true,
            "in": "query",
            "description": "Project id",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteAuthCentrifugeResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Auth centrifuge",
        "tags": [
          "Centrifuge"
        ]
      }
    },
    "/method/centrifuge/auth/project": {
      "get": {
        "description": "\n      channel - \"$project_channels:{project_id}\"\n      expiresIn - 30min\n      project access min - editor\n    ",
        "operationId": "Centrifuge_projectV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "project_id",
            "required": true,
            "in": "query",
            "description": "Project id",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteAuthCentrifugeResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Auth token for project",
        "tags": [
          "Centrifuge"
        ]
      }
    },
    "/method/centrifuge/token/broadcast": {
      "get": {
        "description": "\n      channel - \"$broadcast:{broadcast_id}\"\n      expiresIn - 30min\n    ",
        "operationId": "getTokenBroadcastV1",
        "parameters": [
          {
            "name": "broadcast_id",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "project_id",
            "required": true,
            "in": "query",
            "description": "Project id",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteAuthCentrifugeResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Auth token for broadcast",
        "tags": [
          "Centrifuge"
        ]
      }
    },
    "/method/stream-keys": {
      "get": {
        "operationId": "StreamKeys_keyV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "project_id",
            "required": true,
            "in": "query",
            "description": "Project id",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetStreamKeyResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Get stream credentials",
        "tags": [
          "Stream key"
        ]
      }
    },
    "/method/stream-keys/record": {
      "post": {
        "operationId": "StreamKeys_updateRecordV1",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetRecordStreamRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Update record",
        "tags": [
          "Stream key"
        ]
      }
    },
    "/method/plan_transcoding": {
      "get": {
        "operationId": "PlanTranscoding_tariffV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "project_id",
            "required": true,
            "in": "query",
            "description": "Project id",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlanTranscodingForProject"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Get tariff for project",
        "tags": [
          "PlanTranscoding"
        ]
      },
      "delete": {
        "operationId": "PlanTranscoding_cancelV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "project_id",
            "required": true,
            "in": "query",
            "description": "Project id",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Remove after tariff",
        "tags": [
          "PlanTranscoding"
        ]
      },
      "post": {
        "operationId": "PlanTranscoding_buyV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "project_id",
            "required": true,
            "in": "query",
            "description": "Project id",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "period",
            "required": true,
            "in": "query",
            "description": "Period",
            "schema": {
              "enum": [
                "month",
                "year"
              ],
              "type": "string"
            }
          },
          {
            "name": "plan_transcoding_id",
            "required": true,
            "in": "query",
            "description": "Transcoding plan id",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "count",
            "required": false,
            "in": "query",
            "description": "Count flow",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Buy transcoder tariff",
        "tags": [
          "PlanTranscoding"
        ]
      }
    },
    "/method/plan_transcoding/list": {
      "get": {
        "operationId": "PlanTranscoding_listV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlanTranscodingResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Get list of transcoding tariffs",
        "tags": [
          "PlanTranscoding"
        ]
      }
    },
    "/method/plan_transcoding/get_discount": {
      "get": {
        "operationId": "PlanTranscoding_getDiscountV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlanTranscodingDiscountResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Get discount transcoding",
        "tags": [
          "PlanTranscoding"
        ]
      }
    },
    "/method/plan_transcoding/check": {
      "get": {
        "operationId": "PlanTranscoding_checkV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "project_id",
            "required": true,
            "in": "query",
            "description": "Project id",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlanTranscodingCheckResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Check transcoding tariff before buy",
        "tags": [
          "PlanTranscoding"
        ]
      }
    },
    "/method/plan_storage": {
      "get": {
        "operationId": "PlanStorage_tariffV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "project_id",
            "required": true,
            "in": "query",
            "description": "Project id",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlanStorageForProject"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Get tariff for project",
        "tags": [
          "PlanStorage"
        ]
      },
      "delete": {
        "operationId": "PlanStorage_cancelV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "project_id",
            "required": true,
            "in": "query",
            "description": "Project id",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Remove next tariff",
        "tags": [
          "PlanStorage"
        ]
      },
      "post": {
        "operationId": "PlanStorage_buyV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "project_id",
            "required": true,
            "in": "query",
            "description": "Project id",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "period",
            "required": true,
            "in": "query",
            "description": "Period",
            "schema": {
              "enum": [
                "month",
                "year"
              ],
              "type": "string"
            }
          },
          {
            "name": "plan_storage_id",
            "required": true,
            "in": "query",
            "description": "Storage plan id",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "size",
            "required": false,
            "in": "query",
            "description": "Size",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Buy storage tariff",
        "tags": [
          "PlanStorage"
        ]
      }
    },
    "/method/plan_storage/list": {
      "get": {
        "operationId": "PlanStorage_listV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlanStorageResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Get info for storage tariff",
        "tags": [
          "PlanStorage"
        ]
      }
    },
    "/method/plan_storage/get_discount": {
      "get": {
        "operationId": "PlanStorage_getDiscountV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlanStorageDiscountResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Get discount of storage",
        "tags": [
          "PlanStorage"
        ]
      }
    },
    "/method/plan_storage/check": {
      "get": {
        "operationId": "PlanStorage_checkV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "project_id",
            "required": true,
            "in": "query",
            "description": "Project id",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlanStorageCheckResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Check storage tariff before buy",
        "tags": [
          "PlanStorage"
        ]
      }
    },
    "/method/channel_settings/options/setVk": {
      "post": {
        "operationId": "ChannelOptions_updateOptionsVkV1",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SiteUpdateOptionsVkRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Optional settings for vk. Depends on the tariff.",
        "tags": [
          "Channel settings"
        ]
      }
    },
    "/method/channel_settings/options/setYoutube": {
      "post": {
        "operationId": "ChannelOptions_updateOptionsYoutubeV1",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SiteUpdateOptionsYoutubeRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Optional settings for youtube. Depends on the tariff.",
        "tags": [
          "Channel settings"
        ]
      }
    },
    "/method/channel_settings/options/setTrovo": {
      "post": {
        "operationId": "ChannelOptions_updateOptionsTrovoV1",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SiteUpdateOptionsTrovoRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Optional settings for trovo. Depends on the tariff.",
        "tags": [
          "Channel settings"
        ]
      }
    },
    "/method/channel_settings/options/setTwitch": {
      "post": {
        "operationId": "ChannelOptions_updateOptionsTwitchV1",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SiteUpdateOptionsTwitchRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Optional settings for twitch. Depends on the tariff.",
        "tags": [
          "Channel settings"
        ]
      }
    },
    "/method/channel_settings/options/setOk": {
      "post": {
        "operationId": "ChannelOptions_updateOptionsOkV1",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SiteUpdateOptionsOkRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Optional settings for ok. Depends on the tariff.",
        "tags": [
          "Channel settings"
        ]
      }
    },
    "/method/channel_settings/options/setVkVideoLive": {
      "post": {
        "operationId": "ChannelOptions_updateOptionsVkVideoLiveV1",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SiteUpdateOptionsVkVideoLiveRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Optional settings for vk video live. Depends on the tariff.",
        "tags": [
          "Channel settings"
        ]
      }
    },
    "/method/channel_settings/options/setPlanned": {
      "post": {
        "operationId": "ChannelOptions_updatePlannedV1",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SiteSetPlannedRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SitePlannedResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Set planned id. Depends on the tariff.",
        "tags": [
          "Channel settings"
        ]
      }
    },
    "/method/channel_settings/options/getPlaylist": {
      "get": {
        "operationId": "ChannelOptions_getPlayListV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "project_id",
            "required": true,
            "in": "query",
            "description": "Project id",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "channel_id",
            "required": true,
            "in": "query",
            "description": "Channel id",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ListOfPlaylistItemResponse",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ListResponse"
                    },
                    {
                      "properties": {
                        "results": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/PlaylistItemResponse"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Get playlists from the platform",
        "tags": [
          "Channel settings"
        ]
      }
    },
    "/method/channel_settings/options/getPlanned": {
      "get": {
        "operationId": "ChannelOptions_getPlannedV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "project_id",
            "required": true,
            "in": "query",
            "description": "Project id",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "channel_id",
            "required": true,
            "in": "query",
            "description": "Channel id",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ListOfSitePlannedResponse",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ListResponse"
                    },
                    {
                      "properties": {
                        "results": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/SitePlannedResponse"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Get planned list",
        "tags": [
          "Channel settings"
        ]
      }
    },
    "/method/channel_settings/setName": {
      "post": {
        "operationId": "ChannelSetting_setNameV1",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SiteSetNameRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Set name from custom channel. Global settings.",
        "tags": [
          "Channel settings"
        ]
      }
    },
    "/method/channel_settings/setRtmp": {
      "post": {
        "operationId": "ChannelSetting_updateRtmpV1",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SiteSetUrlRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Set rtmp url from channel. Global settings.",
        "tags": [
          "Channel settings"
        ]
      }
    },
    "/method/channel_settings/setTranscoder": {
      "post": {
        "operationId": "ChannelSetting_updateTranscoderV1",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SiteSetTranscoderRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Set transcoder from channel. Personal settings.",
        "tags": [
          "Channel settings"
        ]
      }
    },
    "/method/channel_settings/getStatus": {
      "get": {
        "operationId": "ChannelSetting_getStatusV1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteChannelStatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Get status platform",
        "tags": [
          "Channel settings"
        ]
      }
    },
    "/method/channel_settings/update-token": {
      "get": {
        "operationId": "ChannelSetting_updateTokenV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "project_id",
            "required": true,
            "in": "query",
            "description": "Project id",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "channel_id",
            "required": true,
            "in": "query",
            "description": "Channel id",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "role",
            "required": true,
            "in": "query",
            "description": "Token role",
            "schema": {
              "example": "account",
              "enum": [
                "account",
                "group"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Get status platform",
        "tags": [
          "Channel settings"
        ]
      }
    },
    "/method/channel_settings/chat/setTelegram": {
      "post": {
        "operationId": "ChannelChat_updateOptionsTelegramV1",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SiteUpdateChatTelegramRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Optional settings for telegram",
        "tags": [
          "Channel settings"
        ]
      }
    },
    "/method/channel_settings/chat/telegram/posts/get-by-filter": {
      "get": {
        "operationId": "telegramGetPostByFilterV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "project_id",
            "required": true,
            "in": "query",
            "description": "Project id",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "channel_id",
            "required": true,
            "in": "query",
            "description": "Channel id",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "filter_mode",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TelegramChatPostsItem"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Get telegram post by filter",
        "tags": [
          "Channel settings"
        ]
      }
    },
    "/method/channel_settings/chat/telegram/posts": {
      "get": {
        "operationId": "ChannelChat_telegramPostsV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "project_id",
            "required": true,
            "in": "query",
            "description": "Project id",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "channel_id",
            "required": true,
            "in": "query",
            "description": "Channel id",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TelegramChatPostsResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Get telegram post list",
        "tags": [
          "Channel settings"
        ]
      }
    },
    "/method/channel_settings/chat/telegram/setting": {
      "get": {
        "operationId": "ChannelChat_getTelegramSettingV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "project_id",
            "required": true,
            "in": "query",
            "description": "Project id",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "channel_id",
            "required": true,
            "in": "query",
            "description": "Channel id",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TelegramSettingsResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Get telegram settings",
        "tags": [
          "Channel settings"
        ]
      },
      "post": {
        "operationId": "ChannelChat_setTelegramSettingV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "project_id",
            "required": true,
            "in": "query",
            "description": "Project id",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "channel_id",
            "required": true,
            "in": "query",
            "description": "Channel id",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TelegramSetSettingsRequestDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Set telegram settings",
        "tags": [
          "Channel settings"
        ]
      }
    },
    "/method/channel_settings/chat/telegram/init": {
      "get": {
        "operationId": "ChannelChat_initTelegramChatConnectV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "project_id",
            "required": true,
            "in": "query",
            "description": "Project id",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "channel_id",
            "required": true,
            "in": "query",
            "description": "Channel id",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TelegramInitConnectResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Get code for connected chat",
        "tags": [
          "Channel settings"
        ]
      }
    },
    "/method/channel_settings/chat/telegram/disconnect": {
      "get": {
        "operationId": "ChannelChat_removeTelegramChatV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "project_id",
            "required": true,
            "in": "query",
            "description": "Project id",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "channel_id",
            "required": true,
            "in": "query",
            "description": "Channel id",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Disconnect telegram chat",
        "tags": [
          "Channel settings"
        ]
      }
    },
    "/method/channel/search": {
      "get": {
        "operationId": "Method_searchV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "project_id",
            "required": true,
            "in": "query",
            "description": "Project id",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "type",
            "required": false,
            "in": "query",
            "schema": {
              "example": "all",
              "enum": [
                "all",
                "my",
                "available",
                "active"
              ],
              "type": "string"
            }
          },
          {
            "name": "platform",
            "required": false,
            "in": "query",
            "description": "platform type",
            "schema": {
              "maxLength": 255,
              "pattern": "/^(?!,)[a-z]+(,[a-z]+)*(?!,)$/",
              "example": "youtube,vk,twitch",
              "type": "string"
            }
          },
          {
            "name": "name",
            "required": false,
            "in": "query",
            "description": "name",
            "schema": {
              "maxLength": 10,
              "example": "name",
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of results",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "default": 30,
              "type": "number"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "Page offset number",
            "schema": {
              "minimum": 0,
              "default": 0,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteSearchChannelResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oAuth": [
              "oAuth"
            ]
          },
          {
            "X-API-KEY": [
              "X-API-KEY"
            ]
          }
        ],
        "summary": "Search channel list",
        "tags": [
          "Channel"
        ]
      }
    },
    "/method/channel/short": {
      "get": {
        "operationId": "Channel_shortChannelListV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "project_id",
            "required": true,
            "in": "query",
            "description": "Project id",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteGetShortChannelResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Minimal channel list",
        "tags": [
          "Channel"
        ]
      }
    },
    "/method/channel/set-status": {
      "post": {
        "operationId": "Method_setStatusV1",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MethodSetStatusChannelRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oAuth": [
              "oAuth"
            ]
          },
          {
            "X-API-KEY": [
              "X-API-KEY"
            ]
          }
        ],
        "summary": "Get live status",
        "tags": [
          "Channel"
        ]
      }
    },
    "/method/transcoder/list": {
      "get": {
        "operationId": "Transcoders_listV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "project_id",
            "required": true,
            "in": "query",
            "description": "Project id",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteTranscoderListResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "List of transcoder",
        "tags": [
          "Transcoders"
        ]
      }
    },
    "/method/transcoder/add": {
      "post": {
        "operationId": "Transcoders_addV1",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderCreateDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Transcoder create",
        "tags": [
          "Transcoders"
        ]
      }
    },
    "/method/transcoder/update": {
      "post": {
        "operationId": "Transcoders_updateV1",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderUpdateDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Transcoder update",
        "tags": [
          "Transcoders"
        ]
      }
    },
    "/method/transcoder/delete": {
      "post": {
        "operationId": "Transcoders_deleteV1",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderItemDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Transcoder delete",
        "tags": [
          "Transcoders"
        ]
      }
    },
    "/method/transcoder/stop": {
      "post": {
        "operationId": "Transcoders_stopV1",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderItemDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Transcoder stop",
        "tags": [
          "Transcoders"
        ]
      }
    },
    "/method/platforms/connect": {
      "get": {
        "operationId": "Platforms_addAccountV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "project_id",
            "required": true,
            "in": "query",
            "description": "Project id",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "platform",
            "required": true,
            "in": "query",
            "description": "Provider oauth",
            "schema": {
              "example": "vk",
              "enum": [
                "vk",
                "vk-id",
                "ok",
                "youtube",
                "trovo",
                "twitch"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Get url for start oauth",
        "tags": [
          "Platforms"
        ]
      }
    },
    "/method/platforms/logout": {
      "post": {
        "operationId": "Platforms_logoutAccountV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "query",
            "description": "Category search bar",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "platform",
            "required": true,
            "in": "query",
            "description": "Provider oauth",
            "schema": {
              "example": "vk",
              "enum": [
                "vk",
                "vk-id",
                "ok",
                "youtube",
                "trovo",
                "twitch"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ListOfCategoryItemResponse",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ListResponse"
                    },
                    {
                      "properties": {
                        "results": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/CategoryItemResponse"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Get category from the platform",
        "tags": [
          "Platforms"
        ]
      }
    },
    "/method/platforms/category": {
      "get": {
        "operationId": "Platforms_getCategoryV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "q",
            "required": false,
            "in": "query",
            "description": "Category search bar",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "required": true,
            "in": "query",
            "description": "Category search bar",
            "schema": {
              "example": "trovo",
              "enum": [
                "vk",
                "youtube",
                "trovo",
                "twitch",
                "vkvideolive"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ListOfCategoryItemResponse",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ListResponse"
                    },
                    {
                      "properties": {
                        "results": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/CategoryItemResponse"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Get category from the platform",
        "tags": [
          "Platforms"
        ]
      }
    },
    "/method/platforms/list": {
      "get": {
        "operationId": "Platforms_platformListV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SitePlatformsSupportedResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Supported platforms",
        "tags": [
          "Platforms"
        ]
      }
    },
    "/method/auth/connect-telegram": {
      "post": {
        "operationId": "Auth_connectTelegramV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Connect telegram in account",
        "tags": [
          "Auth"
        ]
      }
    },
    "/method/auth/auth-telegram": {
      "get": {
        "operationId": "Auth_authTelegramV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "auth_date",
            "required": true,
            "in": "query",
            "description": "Time auth",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "query",
            "description": "Telegram userId",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "first_name",
            "required": true,
            "in": "query",
            "description": "First name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "last_name",
            "required": false,
            "in": "query",
            "description": "Last name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "username",
            "required": false,
            "in": "query",
            "description": "Nickname",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "photo_url",
            "required": false,
            "in": "query",
            "description": "Photo",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "language_code",
            "required": false,
            "in": "query",
            "description": "IETF language tag of the user's language",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "is_premium",
            "required": false,
            "in": "query",
            "description": "True, if this user is a Telegram Premium user",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "added_to_attachment_menu",
            "required": false,
            "in": "query",
            "description": "True, if this user added the bot to the attachment menu",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "hash",
            "required": true,
            "in": "query",
            "description": "Hash",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "refId",
            "required": false,
            "in": "query",
            "description": "Referal id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app",
            "required": true,
            "in": "query",
            "description": "App oauth",
            "schema": {
              "default": "site",
              "example": "site",
              "enum": [
                "site",
                "admin",
                "mobile",
                "desktop"
              ],
              "type": "string"
            }
          },
          {
            "name": "redirect",
            "required": false,
            "in": "query",
            "description": "Redirect url",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "country",
            "required": false,
            "in": "query",
            "description": "Country code",
            "schema": {
              "default": "ru",
              "type": "string"
            }
          }
        ],
        "responses": {
          "301": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Auth telegram",
        "tags": [
          "Auth"
        ]
      }
    },
    "/method/auth/me": {
      "get": {
        "operationId": "Auth_getProfileV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Get basic data for auth user",
        "tags": [
          "Auth"
        ]
      }
    },
    "/method/auth/redirect-url": {
      "get": {
        "operationId": "Auth_getAuthUrlV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "provider",
            "required": true,
            "in": "query",
            "description": "Provider oauth",
            "schema": {
              "example": "google",
              "enum": [
                "google",
                "vk",
                "vk-id",
                "telegram"
              ],
              "type": "string"
            }
          },
          {
            "name": "app",
            "required": false,
            "in": "query",
            "description": "App oauth",
            "schema": {
              "default": "site",
              "example": "site",
              "enum": [
                "site",
                "admin",
                "mobile",
                "desktop"
              ],
              "type": "string"
            }
          },
          {
            "name": "redirect",
            "required": false,
            "in": "query",
            "description": "Redirect url",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "refId",
            "required": false,
            "in": "query",
            "description": "Referal id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "country",
            "required": false,
            "in": "query",
            "description": "Country code",
            "schema": {
              "default": "ru",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Get url for start oauth",
        "tags": [
          "Auth"
        ]
      }
    },
    "/method/auth/connect": {
      "get": {
        "operationId": "Auth_connectV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "provider",
            "required": true,
            "in": "query",
            "description": "Provider oauth",
            "schema": {
              "example": "google",
              "enum": [
                "google",
                "vk",
                "vk-id",
                "telegram"
              ],
              "type": "string"
            }
          },
          {
            "name": "app",
            "required": false,
            "in": "query",
            "description": "App oauth",
            "schema": {
              "default": "site",
              "example": "site",
              "enum": [
                "site",
                "admin",
                "mobile",
                "desktop"
              ],
              "type": "string"
            }
          },
          {
            "name": "redirect",
            "required": false,
            "in": "query",
            "description": "Redirect url",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Connected social account",
        "tags": [
          "Auth"
        ]
      }
    },
    "/method/auth/refresh-access": {
      "post": {
        "operationId": "Auth_refreshAccessV1",
        "parameters": [
          {
            "name": "User-Agent",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SiteRefreshAuthBodyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshAuthResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Update access token",
        "tags": [
          "Auth"
        ]
      }
    },
    "/method/auth/callback/vk": {
      "get": {
        "operationId": "Auth_callbackVkV1",
        "parameters": [],
        "responses": {
          "301": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Internal request of auth old vk",
        "tags": [
          "Auth"
        ]
      }
    },
    "/method/auth/callback/vk-id": {
      "get": {
        "operationId": "Auth_callbackVkIdV1",
        "parameters": [
          {
            "name": "state",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "301": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Internal request of auth new vk",
        "tags": [
          "Auth"
        ]
      }
    },
    "/method/auth/callback/google": {
      "get": {
        "operationId": "Auth_callbackGoogleV1",
        "parameters": [
          {
            "name": "state",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "301": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Internal request of auth google",
        "tags": [
          "Auth"
        ]
      }
    },
    "/method/auth/guest": {
      "get": {
        "operationId": "Auth_guestV1",
        "parameters": [
          {
            "name": "refId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Guest request of auth",
        "tags": [
          "Auth"
        ]
      }
    },
    "/method/auth/disconnect": {
      "get": {
        "operationId": "Auth_disconnectV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "social_id",
            "required": true,
            "in": "query",
            "description": "Social id",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Disconnected social account",
        "tags": [
          "Auth"
        ]
      }
    },
    "/method/auth/logout": {
      "post": {
        "operationId": "Auth_logoutV1",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SiteLogoutAuthRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Logout",
        "tags": [
          "Auth"
        ]
      }
    },
    "/method/auth/connect/callback": {
      "get": {
        "operationId": "Auth_connectResultV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "message",
            "required": true,
            "in": "query",
            "description": "Result message for connect",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "CallBack for connect social",
        "tags": [
          "Auth"
        ]
      }
    },
    "/method/auth/app/code": {
      "get": {
        "operationId": "Auth_codeV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "app",
            "required": true,
            "in": "query",
            "description": "Create auth code for app",
            "schema": {
              "default": "site",
              "example": "site",
              "enum": [
                "site",
                "admin",
                "mobile",
                "desktop"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CodeAppAuthResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Get code for auth",
        "tags": [
          "Auth"
        ]
      }
    },
    "/method/auth/app/exchange": {
      "post": {
        "operationId": "Auth_exchangeV1",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SiteAuthExchangeRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshAuthResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Code exchange",
        "tags": [
          "Auth"
        ]
      }
    },
    "/method/socials/list": {
      "get": {
        "operationId": "Socials_getListV1",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Social list for user",
        "tags": [
          "Socials"
        ]
      }
    },
    "/method/transactions/list": {
      "get": {
        "operationId": "Transactions_listV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "project_id",
            "required": true,
            "in": "query",
            "description": "Project id",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of results",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "default": 20,
              "type": "number"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "Page offset number",
            "schema": {
              "minimum": 0,
              "default": 0,
              "type": "number"
            }
          },
          {
            "name": "date_from",
            "required": false,
            "in": "query",
            "description": "Date from",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "date_to",
            "required": false,
            "in": "query",
            "description": "Date to",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "code",
            "required": false,
            "in": "query",
            "description": "Filter code transaction. example 1 or 1,2,3",
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "title": "PaginatedResponseOfTransactionResponse",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginatedResponse"
                    },
                    {
                      "properties": {
                        "results": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/TransactionResponse"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Transaction list for frontend",
        "tags": [
          "Transactions"
        ]
      }
    },
    "/method/blog/page/list": {
      "get": {
        "operationId": "BlogPage_listV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "s",
            "required": false,
            "in": "query",
            "description": "String for search",
            "schema": {
              "maxLength": 255,
              "default": "",
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of results",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "default": 20,
              "type": "number"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "Page offset number",
            "schema": {
              "minimum": 0,
              "default": 0,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "title": "PaginatedResponseOfBlogPageSiteResponse",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginatedResponse"
                    },
                    {
                      "properties": {
                        "results": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/BlogPageSiteResponse"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Get list of blog pages",
        "tags": [
          "BlogPage"
        ]
      }
    },
    "/method/blog/page/get": {
      "get": {
        "operationId": "BlogPage_getV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "url",
            "required": true,
            "in": "query",
            "description": "Url of page",
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "title": "PaginatedResponseOfBlogPageSiteResponse",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginatedResponse"
                    },
                    {
                      "properties": {
                        "results": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/BlogPageSiteResponse"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Get blog page",
        "tags": [
          "BlogPage"
        ]
      }
    },
    "/method/help/page/search": {
      "get": {
        "operationId": "Help_page_listV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "s",
            "required": false,
            "in": "query",
            "description": "String for search",
            "schema": {
              "maxLength": 255,
              "default": "",
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of results",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "default": 20,
              "type": "number"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "Page offset number",
            "schema": {
              "minimum": 0,
              "default": 0,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "title": "PaginatedResponseOfHelpPageResponse",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginatedResponse"
                    },
                    {
                      "properties": {
                        "results": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/HelpPageResponse"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Get list of help pages",
        "tags": [
          "HelpPage"
        ]
      }
    },
    "/method/help/page/get": {
      "get": {
        "operationId": "Help_page_getV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "url",
            "required": true,
            "in": "query",
            "description": "Url of page",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHelpPageResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Get help page",
        "tags": [
          "HelpPage"
        ]
      }
    },
    "/method/help/page/structure": {
      "get": {
        "operationId": "Help_page_structureV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StructureHelpPageResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Get structure of help pages",
        "tags": [
          "HelpPage"
        ]
      }
    },
    "/method/notify_history/get": {
      "get": {
        "operationId": "NotifyHistory_getV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "_id",
            "required": true,
            "in": "query",
            "description": "Id of page in mongodb",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotifyHistorySiteResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Get my NotifyHistory item by id",
        "tags": [
          "NotifyHistory"
        ]
      }
    },
    "/method/notify_history/list": {
      "get": {
        "operationId": "NotifyHistory_getListMyV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of results",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "default": 20,
              "type": "number"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "Page offset number",
            "schema": {
              "minimum": 0,
              "default": 0,
              "type": "number"
            }
          },
          {
            "name": "project_id",
            "required": false,
            "in": "query",
            "description": "Project id",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "name",
            "required": false,
            "in": "query",
            "description": "Name",
            "schema": {
              "enum": [
                "high_bitrate",
                "request_access_channel",
                "request_access_project",
                "promocode_test",
                "stream_test",
                "plan_restream_expires",
                "plan_restream_expired",
                "plan_restream_renewed",
                "plan_transcoder_expires",
                "plan_transcoder_expired",
                "plan_transcoder_renewed",
                "plan_storage_expires",
                "plan_storage_expired",
                "plan_storage_renewed",
                "broadcast_unsupported_codec",
                "broadcast_unsupported_codec_screen",
                "broadcast_bitrate_exceeded_screen",
                "rtmp_connect_old_server_screen",
                "broadcast_not_audio",
                "broadcast_bitrate_exceeded",
                "broadcast_started",
                "broadcast_stopped",
                "restream_check_twitch_bitrate_1",
                "api_pause_start",
                "api_pause_end",
                "api_wait_edit",
                "api_restream_start",
                "api_restream_stop",
                "api_drop_broadcast",
                "api_drop_broadcast_remove_company",
                "api_drop_broadcast_update_key",
                "publisher_disconnected",
                "publisher_connected",
                "publisher_initializing",
                "publisher_close",
                "broadcast_connected_start",
                "broadcast_connected_end",
                "broadcast_connecting_stream",
                "broadcast_started_new_stream",
                "broadcast_connecting_lost",
                "broadcast_video_lost_start",
                "broadcast_video_lost_end",
                "broadcast_video_pause_start",
                "broadcast_video_pause_end",
                "broadcast_init_restream",
                "start_stream",
                "create_reader",
                "start_channel",
                "stop_channel",
                "stop_stream_video_timeout",
                "stop_stream_no_start_video",
                "stop_stream",
                "delete_reader",
                "transcoder_start",
                "transcoder_stop",
                "start_channel_failed",
                "start_channel_success",
                "api_channel_initializing_start",
                "api_channel_initializing_failed",
                "api_channel_initializing_success",
                "channel_api_update_settings_success",
                "channel_api_update_settings_error",
                "channel_api_update_playlist_success",
                "channel_api_update_playlist_error",
                "channel_api_update_chat_error",
                "channel_api_stream_key_success",
                "channel_api_stream_key_error",
                "channel_api_auto_stop_disable_success",
                "channel_api_auto_stop_disable_error",
                "channel_api_unbinding_stream_key_error",
                "channel_api_create_broadcast_success",
                "channel_api_create_broadcast_error",
                "channel_api_set_planned_success",
                "channel_api_set_planned_error",
                "channel_api_set_thumbnail_success",
                "channel_api_set_thumbnail_error",
                "channel_token_error",
                "channel_api_group_failed",
                "no_audio_reader",
                "restream_check_twitch_bitrate_2",
                "transcoder_support_error_screen",
                "transcoder_tariff_end_screen",
                "transcoder_count_flow_screen",
                "transcoder_resolution_screen",
                "stream_key_banned",
                "broadcast_change_codec",
                "broadcast_change_region",
                "video_upload_error",
                "stop_channel_error",
                "broadcast_user_action_stop"
              ],
              "type": "string"
            }
          },
          {
            "name": "channel",
            "required": false,
            "in": "query",
            "description": "Channel",
            "schema": {
              "enum": [
                "telegram",
                "cabinet",
                "mobile"
              ],
              "type": "string"
            }
          },
          {
            "name": "date_from",
            "required": false,
            "in": "query",
            "description": "Date from",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "date_to",
            "required": false,
            "in": "query",
            "description": "Date to",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "status_read",
            "required": false,
            "in": "query",
            "description": "Status read",
            "schema": {
              "enum": [
                "unread",
                "read"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "title": "PaginatedResponseOfNotifyHistorySiteResponse",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginatedResponse"
                    },
                    {
                      "properties": {
                        "results": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/NotifyHistorySiteResponse"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Get list of my notifications",
        "tags": [
          "NotifyHistory"
        ]
      }
    },
    "/method/notify_history/get_status": {
      "get": {
        "operationId": "NotifyHistory_getStatusMyV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotifyHistoryStatusUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Get my status unread message for user",
        "tags": [
          "NotifyHistory"
        ]
      }
    },
    "/method/notify_history/set_all_cabinet_read": {
      "post": {
        "operationId": "NotifyHistory_setAllCabinetReadV1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Set all notification in cabinet as read",
        "tags": [
          "NotifyHistory"
        ]
      }
    },
    "/method/notify_history/run_action": {
      "post": {
        "operationId": "NotifyHistory_runActionV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "notify_history_id",
            "required": true,
            "in": "query",
            "description": "Id of page in mongodb",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "action_name",
            "required": true,
            "in": "query",
            "description": "Action name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "group_id",
            "required": true,
            "in": "query",
            "description": "Group id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotifyHistorySiteResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Run action in my notify item",
        "tags": [
          "NotifyHistory"
        ]
      }
    },
    "/method/notify_history/read": {
      "put": {
        "operationId": "NotifyHistory_markOfReadV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SiteMarkReadHistoryRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteMarkReadHistoryResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Set notification in cabinet as read",
        "tags": [
          "NotifyHistory"
        ]
      }
    },
    "/method/channel_invite/list": {
      "get": {
        "operationId": "ProjectChannelInvite_listV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "project_id",
            "required": true,
            "in": "query",
            "description": "Project id",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "channel_id",
            "required": true,
            "in": "query",
            "description": "Channel id",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ListOfProjectChannelInviteResponse",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ListResponse"
                    },
                    {
                      "properties": {
                        "results": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ProjectChannelInviteResponse"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "List of invites for channel in project",
        "tags": [
          "ProjectChannelInvite"
        ]
      }
    },
    "/method/channel_invite/get_for_project": {
      "get": {
        "operationId": "ProjectChannelInvite_get_for_projectV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "project_id",
            "required": true,
            "in": "query",
            "description": "Current project id",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "channel_id",
            "required": true,
            "in": "query",
            "description": "Channel id",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectChannelInviteLinkResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Get invitation for channel",
        "tags": [
          "ProjectChannelInvite"
        ]
      }
    },
    "/method/channel_invite/accept_for_project": {
      "post": {
        "operationId": "ProjectChannelInvite_accept_for_projectV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "project_id",
            "required": true,
            "in": "query",
            "description": "The project to which you want to add a channel",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "channel_id",
            "required": true,
            "in": "query",
            "description": "Channel id",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Accept channel invitation for selected project",
        "tags": [
          "ProjectChannelInvite"
        ]
      }
    },
    "/method/channel_invite/decline_for_project": {
      "post": {
        "operationId": "ProjectChannelInvite_decline_for_projectV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "project_id",
            "required": true,
            "in": "query",
            "description": "Channel id",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "channel_id",
            "required": true,
            "in": "query",
            "description": "Channel id",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Decline channel invitation for selected project",
        "tags": [
          "ProjectChannelInvite"
        ]
      }
    },
    "/method/channel_invite/get_for_secret": {
      "get": {
        "operationId": "ProjectChannelInvite_get_for_secretV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "channel_id",
            "required": true,
            "in": "query",
            "description": "Channel id",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "secret",
            "required": true,
            "in": "query",
            "description": "Secret",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectChannelInviteLinkResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Get channel invitation using a secret link",
        "tags": [
          "ProjectChannelInvite"
        ]
      }
    },
    "/method/channel_invite/accept_for_secret": {
      "post": {
        "operationId": "ProjectChannelInvite_accept_for_secretV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "project_id",
            "required": true,
            "in": "query",
            "description": "The project to which you want to add a channel",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "channel_id",
            "required": true,
            "in": "query",
            "description": "Channel id",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "secret",
            "required": true,
            "in": "query",
            "description": "Secret",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Accept channel invitation using a secret link",
        "tags": [
          "ProjectChannelInvite"
        ]
      }
    },
    "/method/channel_invite/decline_for_secret": {
      "post": {
        "operationId": "ProjectChannelInvite_decline_for_secretV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "project_id",
            "required": true,
            "in": "query",
            "description": "The project to which you want to add a channel",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "channel_id",
            "required": true,
            "in": "query",
            "description": "Channel id",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "secret",
            "required": true,
            "in": "query",
            "description": "Secret",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Decline channel invitation using a secret link",
        "tags": [
          "ProjectChannelInvite"
        ]
      }
    },
    "/method/channel_invite/get": {
      "get": {
        "operationId": "ProjectChannelInvite_getV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "query",
            "description": "Channel request id",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Get channel invite item for my channel for another user",
        "tags": [
          "ProjectChannelInvite"
        ]
      }
    },
    "/method/channel_invite/add_by_id": {
      "post": {
        "operationId": "ProjectChannelInvite_add_by_idV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "project_id",
            "required": true,
            "in": "query",
            "description": "Project id",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "channel_id",
            "required": true,
            "in": "query",
            "description": "Channel id",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "access_type",
            "required": true,
            "in": "query",
            "description": "Access type",
            "schema": {
              "enum": [
                0,
                1,
                1,
                2
              ],
              "type": "number"
            }
          },
          {
            "name": "to_project_external_id",
            "required": true,
            "in": "query",
            "description": "Project for get access by external id",
            "schema": {
              "example": "Dk8fjh4",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectChannelInviteResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Add channel invite item for another user by id",
        "tags": [
          "ProjectChannelInvite"
        ]
      }
    },
    "/method/channel_invite/add_by_email": {
      "post": {
        "operationId": "ProjectChannelInvite_add_by_emailV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "project_id",
            "required": true,
            "in": "query",
            "description": "Project id",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "channel_id",
            "required": true,
            "in": "query",
            "description": "Channel id",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "email",
            "required": true,
            "in": "query",
            "description": "Email",
            "schema": {
              "format": "email",
              "type": "string"
            }
          },
          {
            "name": "access_type",
            "required": true,
            "in": "query",
            "description": "Access type",
            "schema": {
              "enum": [
                0,
                1,
                1,
                2
              ],
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectChannelInviteResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Add channel invite item for another user by email",
        "tags": [
          "ProjectChannelInvite"
        ]
      }
    },
    "/method/channel_invite/del": {
      "post": {
        "operationId": "ProjectChannelInvite_delV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "query",
            "description": "Unique id",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Del channel invite item for my channel for another user",
        "tags": [
          "ProjectChannelInvite"
        ]
      }
    },
    "/method/channel/access/list": {
      "get": {
        "operationId": "ProjectChannel_listV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "project_id",
            "required": true,
            "in": "query",
            "description": "Project id",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "channel_id",
            "required": true,
            "in": "query",
            "description": "Channel id",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ListOfProjectChannelResponse",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ListResponse"
                    },
                    {
                      "properties": {
                        "results": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ProjectChannelResponse"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Project channel list",
        "tags": [
          "ProjectChannel"
        ]
      }
    },
    "/method/channel/access/del": {
      "post": {
        "operationId": "ProjectChannel_delV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "project_id",
            "required": true,
            "in": "query",
            "description": "Project id",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "channel_id",
            "required": true,
            "in": "query",
            "description": "Channel id",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "target_project_id",
            "required": true,
            "in": "query",
            "description": "Target project id",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Remove access for project in channel",
        "tags": [
          "ProjectChannel"
        ]
      }
    },
    "/method/channel/access/change": {
      "post": {
        "operationId": "ProjectChannel_changeAccessV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "project_id",
            "required": true,
            "in": "query",
            "description": "Project id",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "channel_id",
            "required": true,
            "in": "query",
            "description": "Channel id",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "to_project_id",
            "required": true,
            "in": "query",
            "description": "Target project id",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "access_type",
            "required": true,
            "in": "query",
            "description": "Access type",
            "schema": {
              "enum": [
                0,
                1,
                1,
                2
              ],
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Change access for project in channel",
        "tags": [
          "ProjectChannel"
        ]
      }
    },
    "/method/channel/access/transfer_owner": {
      "post": {
        "operationId": "ProjectChannel_transferOwnerV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "project_id",
            "required": true,
            "in": "query",
            "description": "Project id",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "channel_id",
            "required": true,
            "in": "query",
            "description": "Channel id",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "to_project_id",
            "required": true,
            "in": "query",
            "description": "Target project id",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Transfer owner for project in channel",
        "tags": [
          "ProjectChannel"
        ]
      }
    },
    "/method/blog/tag/list": {
      "get": {
        "operationId": "BlogPageTag_listV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "s",
            "required": false,
            "in": "query",
            "description": "String for search",
            "schema": {
              "maxLength": 255,
              "default": "",
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of results",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "default": 20,
              "type": "number"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "Page offset number",
            "schema": {
              "minimum": 0,
              "default": 0,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "title": "PaginatedResponseOfSiteBlogPageTagResponse",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginatedResponse"
                    },
                    {
                      "properties": {
                        "results": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/SiteBlogPageTagResponse"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Get list of blog pages",
        "tags": [
          "BlogPageTag"
        ]
      }
    },
    "/method/rtmp_server/list_locations_unauthorized": {
      "get": {
        "operationId": "MethodRtmpServer_list_locations_unauthorizedV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ListOfRtmpServerLocationResponse",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ListResponse"
                    },
                    {
                      "properties": {
                        "results": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/RtmpServerLocationResponse"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Rtmp locations server list example for unauthorized",
        "tags": [
          "RtmpServer"
        ]
      }
    },
    "/method/rtmp_server/list": {
      "get": {
        "operationId": "RtmpServer_listV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "project_id",
            "required": true,
            "in": "query",
            "description": "Project id",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "interval",
            "required": true,
            "in": "query",
            "description": "Interval state in hours",
            "schema": {
              "default": 1,
              "example": 1,
              "enum": [
                1,
                3,
                6,
                12,
                24
              ],
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RtmpServerListResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "List rtmp servers",
        "tags": [
          "RtmpServer"
        ]
      }
    },
    "/method/rtmp_server/state": {
      "get": {
        "operationId": "RtmpServer_stateV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "interval",
            "required": true,
            "in": "query",
            "description": "Interval state in hours",
            "schema": {
              "default": 1,
              "example": 1,
              "enum": [
                1,
                3,
                6,
                12,
                24
              ],
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RtmpServerStateResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "State of rtmp servers",
        "tags": [
          "RtmpServer"
        ]
      }
    },
    "/method/rtmp_server/up": {
      "get": {
        "operationId": "RtmpServer_upV1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "State of rtmp servers",
        "tags": [
          "RtmpServer"
        ]
      }
    },
    "/method/rtmp_server/graph": {
      "get": {
        "operationId": "RtmpServer_graphV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "interval",
            "required": true,
            "in": "query",
            "description": "Interval state in hours",
            "schema": {
              "default": 1,
              "example": 1,
              "enum": [
                1,
                3,
                6,
                12,
                24
              ],
              "type": "number"
            }
          },
          {
            "name": "type",
            "required": true,
            "in": "query",
            "description": "Type graph",
            "schema": {
              "default": "network",
              "example": 1,
              "enum": [
                "performance",
                "network",
                "cpu",
                "ram",
                "deliveredPackages"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RtmpServerGraphResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Graph of rtmp servers",
        "tags": [
          "RtmpServer"
        ]
      }
    },
    "/method/pay-system/list": {
      "get": {
        "operationId": "PaySystem_listV1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ListOfPaySystemListResponse",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ListResponse"
                    },
                    {
                      "properties": {
                        "results": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/PaySystemListResponse"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "Load available pay systems",
        "tags": [
          "Pay system"
        ]
      }
    },
    "/method/pay-system/payoneer/create": {
      "get": {
        "operationId": "PaySystem_createChallengeV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "payment_id",
            "required": true,
            "in": "query",
            "description": "Payment id",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Pay system"
        ]
      }
    },
    "/method/pay-system/unitpay/create": {
      "get": {
        "operationId": "PaySystem_createUnitpayV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "payment_id",
            "required": true,
            "in": "query",
            "description": "Payment id",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Pay system"
        ]
      }
    },
    "/method/payment": {
      "post": {
        "operationId": "Payment_createV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "enum": [
                  "restream",
                  "transcoding",
                  "storage",
                  "top_up"
                ],
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PaymentCreateRequestTopUpBodyDto"
                  },
                  {
                    "$ref": "#/components/schemas/PaymentCreateRequestRestreamBodyDto"
                  },
                  {
                    "$ref": "#/components/schemas/PaymentCreateRequestStorageBodyDto"
                  },
                  {
                    "$ref": "#/components/schemas/PaymentCreateRequestTranscoderBodyDto"
                  }
                ]
              },
              "examples": {
                "top_up": {
                  "summary": "Пополнение баланса",
                  "value": {
                    "type": "topup",
                    "project_id": 1,
                    "amount": 100
                  }
                },
                "restream": {
                  "summary": "Покупка рестрим тарифа",
                  "value": {
                    "type": "restream",
                    "project_id": 1,
                    "amount": 100,
                    "plan_restream_id": 1,
                    "channels": 10,
                    "bitrate": 10000
                  }
                },
                "transcoder": {
                  "summary": "Покупка транскодинга",
                  "value": {
                    "type": "transcoding",
                    "project_id": 1,
                    "amount": 100,
                    "plan_transcoding_id": 1,
                    "flow": 1
                  }
                },
                "storage": {
                  "summary": "Покупка места в хранилище",
                  "value": {
                    "type": "storage",
                    "plan_storage_id": 1,
                    "project_id": 1,
                    "amount": 100,
                    "space": 50
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentCreateResponse"
                }
              }
            }
          }
        },
        "summary": "Create payment item for pay system",
        "tags": [
          "Payment"
        ]
      },
      "get": {
        "operationId": "Payment_getStatusV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "payId",
            "required": true,
            "in": "query",
            "description": "Pay order id",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "project_id",
            "required": true,
            "in": "query",
            "description": "Project id",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentStatusResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Payment"
        ]
      }
    },
    "/method/payment/list": {
      "get": {
        "operationId": "Payment_listV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "required": false,
            "in": "query",
            "description": "Number of results",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "default": 20,
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number",
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Payment"
        ]
      }
    },
    "/method/pay-setting": {
      "get": {
        "operationId": "PaySetting_getSetting_v3",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 3 based on method version, can be overridden)",
            "schema": {
              "example": "3",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "3"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "project_id",
            "required": true,
            "in": "query",
            "description": "Project id",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPaySettingResponse_v3"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Get pay settings for profile v3",
        "tags": [
          "Pay setting"
        ]
      },
      "post": {
        "operationId": "PaySetting_setSettingV1",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaySettingBodyDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Set pay settings for profile",
        "tags": [
          "Pay setting"
        ]
      }
    },
    "/method/pay-setting/check-country": {
      "get": {
        "operationId": "PaySetting_checkCountryV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "project_id",
            "required": true,
            "in": "query",
            "description": "Project id",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "country_id",
            "required": true,
            "in": "query",
            "description": "country id",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayCheckCountryResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Check country after update user",
        "tags": [
          "Pay setting"
        ]
      }
    },
    "/method/stream-pull-keys/check": {
      "get": {
        "operationId": "StreamPullKeysSite_checkV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "project_id",
            "required": true,
            "in": "query",
            "description": "Project id",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "key",
            "required": true,
            "in": "query",
            "description": "Key",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckPullKeyResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Check key",
        "tags": [
          "Stream pull keys"
        ]
      }
    },
    "/method/stream-pull-keys": {
      "get": {
        "operationId": "StreamPullKeysSite_getV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "project_id",
            "required": true,
            "in": "query",
            "description": "Project id",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PullKeyListResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "List keys",
        "tags": [
          "Stream pull keys"
        ]
      },
      "post": {
        "operationId": "StreamPullKeysSite_createV1",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePullKeyRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePullKeyResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Create key",
        "tags": [
          "Stream pull keys"
        ]
      },
      "put": {
        "operationId": "StreamPullKeysSite_updateV1",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePullKeyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Update key",
        "tags": [
          "Stream pull keys"
        ]
      },
      "delete": {
        "operationId": "StreamPullKeysSite_removeV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "project_id",
            "required": true,
            "in": "query",
            "description": "Project id",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "key",
            "required": true,
            "in": "query",
            "description": "Key",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Delete key",
        "tags": [
          "Stream pull keys"
        ]
      }
    },
    "/method/payout/create": {
      "post": {
        "operationId": "Payout_createV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PayoutCreateRequestBodyDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Create payout",
        "tags": [
          "Payout"
        ]
      }
    },
    "/method/payout/prepare": {
      "get": {
        "operationId": "Payout_prepareV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "project_id",
            "required": true,
            "in": "query",
            "description": "Project id",
            "schema": {
              "example": 1,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ListOfPayoutSystemAccountListItemResponse",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ListResponse"
                    },
                    {
                      "properties": {
                        "results": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/PayoutSystemAccountListItemResponse"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Get payout data for create",
        "tags": [
          "Payout"
        ]
      }
    },
    "/method/pull-servers/list": {
      "get": {
        "operationId": "PullServers_getPullServersV1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PullServerListResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Get pull servers",
        "tags": [
          "Pull servers"
        ]
      }
    },
    "/method/chat/messages": {
      "get": {
        "operationId": "MethodChatGateway_historyV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "key",
            "required": true,
            "in": "query",
            "description": "Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "broadcast_id",
            "required": true,
            "in": "query",
            "description": "broadcast id",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MethodChatHistoryResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "List history message",
        "tags": [
          "Chat gateway"
        ]
      },
      "post": {
        "operationId": "MethodChatGateway_sendV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "key",
            "required": true,
            "in": "query",
            "description": "Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "broadcast_id",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MethodChatSendMessageRequestDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Send message",
        "tags": [
          "Chat gateway"
        ]
      }
    },
    "/method/chat/messages/message": {
      "get": {
        "operationId": "MethodChatGateway_getMessageV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "key",
            "required": true,
            "in": "query",
            "description": "Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "broadcast_id",
            "required": true,
            "in": "query",
            "description": "broadcast id",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "event_id",
            "required": true,
            "in": "query",
            "description": "Event id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Get one message",
        "tags": [
          "Chat gateway"
        ]
      }
    },
    "/method/chat/messages/delete": {
      "post": {
        "operationId": "MethodChatGateway_deleteV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "key",
            "required": true,
            "in": "query",
            "description": "Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "broadcast_id",
            "required": true,
            "in": "query",
            "description": "broadcast id",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "event_id",
            "required": true,
            "in": "query",
            "description": "Event id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Remove message",
        "tags": [
          "Chat gateway"
        ]
      }
    },
    "/method/broadcast/longpoll": {
      "get": {
        "operationId": "MethodBroadcast_tokenChannelV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "key",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Channel token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MethodCurrentBroadcastResponse"
                }
              }
            }
          },
          "204": {
            "description": "No content"
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Connect channel, long polling",
        "tags": [
          "Broadcast"
        ]
      }
    },
    "/method/broadcast/restreams": {
      "get": {
        "operationId": "MethodBroadcast_restreamsV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "broadcast_id",
            "required": true,
            "in": "query",
            "description": "broadcast id",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "key",
            "required": true,
            "in": "query",
            "description": "Chat token",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MethodBroadcastRestreamsResponse"
                }
              }
            }
          }
        },
        "summary": "Get restreams",
        "tags": [
          "Broadcast"
        ]
      }
    },
    "/method/release-app": {
      "get": {
        "operationId": "ReleaseApp_cabinetV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "app",
            "required": false,
            "in": "query",
            "description": "Apps",
            "schema": {
              "default": "cabinet",
              "example": "cabinet",
              "enum": [
                "cabinet"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetVersionAppResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Get current version app",
        "tags": [
          "Release"
        ]
      }
    },
    "/method/live/restreams": {
      "get": {
        "operationId": "Controllers_restreamsV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "project_id",
            "required": true,
            "in": "query",
            "description": "Project id",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "broadcast_id",
            "required": true,
            "in": "query",
            "description": "Broadcast id",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteLiveRestreamsInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "View live info",
        "tags": [
          "Live"
        ]
      }
    },
    "/method/analytics/stream/graph/bitrate": {
      "get": {
        "operationId": "AnalyticsTs_streamBitrateV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "project_id",
            "required": true,
            "in": "query",
            "description": "Project id",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "stream_id",
            "required": true,
            "in": "query",
            "description": "stream id",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Bitrate for stream",
        "tags": [
          "Analytics"
        ]
      }
    },
    "/method/analytics/stream/graph/viewers": {
      "get": {
        "operationId": "AnalyticsTs_streamViewersV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "project_id",
            "required": true,
            "in": "query",
            "description": "Project id",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "stream_id",
            "required": true,
            "in": "query",
            "description": "stream id",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Viewers for stream",
        "tags": [
          "Analytics"
        ]
      }
    },
    "/method/analytics/stream/events": {
      "get": {
        "operationId": "AnalyticsTs_streamEventsV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "project_id",
            "required": true,
            "in": "query",
            "description": "Project id",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "stream_id",
            "required": true,
            "in": "query",
            "description": "stream id",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Events for stream",
        "tags": [
          "Analytics"
        ]
      }
    },
    "/method/promo/check": {
      "get": {
        "operationId": "Promo_checkV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "project_id",
            "required": true,
            "in": "query",
            "description": "Project id",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "code",
            "required": true,
            "in": "query",
            "description": "Code",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SitePromoCheckResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Check code",
        "tags": [
          "Promo"
        ]
      }
    },
    "/method/promo/apply": {
      "get": {
        "operationId": "Promo_applyV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "project_id",
            "required": true,
            "in": "query",
            "description": "Project id",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "code",
            "required": true,
            "in": "query",
            "description": "Code",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SitePromoApplyResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Apply code",
        "tags": [
          "Promo"
        ]
      }
    },
    "/method/policy/get": {
      "get": {
        "operationId": "PolicyPage_getItemV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "file_name",
            "required": true,
            "in": "query",
            "description": "Policy file name",
            "schema": {
              "enum": [
                "refund",
                "terms-of-use",
                "using-cookie",
                "acceptable-use",
                "privacy-notice"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Get policy page",
        "tags": [
          "PolicyPage"
        ]
      }
    },
    "/method/policy/structure": {
      "get": {
        "operationId": "PolicyPage_getStructureV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPolicyStructureDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Get policy structure",
        "tags": [
          "PolicyPage"
        ]
      }
    },
    "/method/referrals/info": {
      "get": {
        "operationId": "Referrals_totalInfoV1",
        "parameters": [
          {
            "name": "v",
            "required": false,
            "in": "query",
            "description": "Version (automatically defaults to 1 based on method version, can be overridden)",
            "schema": {
              "example": "1",
              "enum": [
                "1",
                "2",
                "3"
              ],
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Current language",
            "schema": {
              "default": "en",
              "example": "en",
              "enum": [
                "ru",
                "en",
                "cn"
              ],
              "type": "string"
            }
          },
          {
            "name": "project_id",
            "required": true,
            "in": "query",
            "description": "Project id",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteTotalInfoReferralsResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Total info",
        "tags": [
          "Referrals"
        ]
      }
    }
  },
  "info": {
    "title": "StreamVi Backend",
    "description": "API",
    "version": "3",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      },
      "X-API-KEY": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-KEY",
        "description": "API Key For External calls"
      }
    },
    "schemas": {
      "ValidationErrorDto": {
        "type": "object",
        "properties": {
          "target": {
            "type": "object",
            "description": "Object that was validated."
          },
          "property": {
            "type": "string",
            "description": "Object's property that hasn't passed validation."
          },
          "value": {
            "type": "object",
            "description": "Value that haven't pass a validation."
          },
          "constraints": {
            "type": "object",
            "description": "Constraints that failed validation with error messages. Array of object {string: string}"
          },
          "children": {
            "description": "Which value caused the error. Childrens its this class",
            "default": [],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationErrorDto"
            }
          },
          "contexts": {
            "type": "object",
            "description": "A transient set of data passed through to the validation result for response mapping"
          }
        }
      },
      "ErrorData": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Error name"
          },
          "msg": {
            "type": "string",
            "description": "Error message"
          },
          "validator_error": {
            "description": "Validator error array if name=\"I18nValidationException\"",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationErrorDto"
            }
          },
          "options": {
            "type": "object",
            "description": "Options",
            "properties": {},
            "default": {}
          },
          "data": {
            "type": "object",
            "description": "Custom object for error",
            "properties": {},
            "default": {}
          }
        },
        "required": [
          "name",
          "msg",
          "options",
          "data"
        ]
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "description": "Object with description of error",
            "allOf": [
              {
                "$ref": "#/components/schemas/ErrorData"
              }
            ]
          }
        },
        "required": [
          "error"
        ]
      },
      "UserProfileResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 0,
            "description": "User id",
            "enum": [
              0,
              1
            ]
          },
          "type": {
            "type": "number",
            "description": "Type profile"
          },
          "firstName": {
            "type": "string",
            "description": "FirstName"
          },
          "lastName": {
            "type": "string",
            "description": "LastName"
          },
          "photo": {
            "type": "string",
            "description": "Photo"
          },
          "refId": {
            "type": "string",
            "description": "RefId"
          },
          "partners": {
            "type": "number",
            "description": "Count partners"
          },
          "referralsIncome": {
            "type": "string",
            "description": "Referrals income"
          },
          "scope": {
            "type": "number",
            "description": "Scope"
          },
          "currency": {
            "enum": [
              "rub",
              "usd"
            ],
            "type": "string",
            "example": "rub",
            "description": "Currency"
          },
          "countrie_id": {
            "type": "number",
            "description": "Country"
          },
          "language": {
            "enum": [
              "ru",
              "en",
              "cn"
            ],
            "type": "string",
            "example": "ru",
            "description": "Language"
          },
          "balance": {
            "type": "number",
            "description": "Balance"
          },
          "lastProjectId": {
            "type": "number",
            "nullable": true,
            "description": "Last select project"
          }
        },
        "required": [
          "id",
          "type",
          "firstName",
          "lastName",
          "photo",
          "refId",
          "partners",
          "referralsIncome",
          "scope",
          "currency",
          "countrie_id",
          "language",
          "balance",
          "lastProjectId"
        ]
      },
      "ProfileUpdateDto": {
        "type": "object",
        "properties": {
          "v": {
            "type": "string",
            "description": "Version",
            "enum": [
              "1",
              "2",
              "3"
            ],
            "example": "3"
          },
          "language": {
            "default": "en",
            "enum": [
              "ru",
              "en",
              "cn"
            ],
            "type": "string",
            "description": "Current language",
            "example": "en"
          },
          "first_name": {
            "type": "string",
            "maxLength": 255,
            "description": "First name",
            "example": "John"
          },
          "last_name": {
            "type": "string",
            "maxLength": 255,
            "description": "Last name",
            "example": "Doe"
          },
          "avatar": {
            "type": "string",
            "description": "File for avatar upload max size 2MB, format: jpeg, jpg, png",
            "example": "/avatar.jpg",
            "format": "binary"
          }
        },
        "required": [
          "v",
          "language",
          "first_name",
          "last_name"
        ]
      },
      "SuccessResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "Response execution success"
          }
        },
        "required": [
          "success"
        ]
      },
      "PaginatedResponse": {
        "type": "object",
        "properties": {
          "total": {
            "type": "number"
          },
          "limit": {
            "type": "number"
          },
          "offset": {
            "type": "number"
          },
          "results": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "total",
          "limit",
          "offset",
          "results"
        ]
      },
      "InternalNotifyTypeActionText": {
        "type": "object",
        "properties": {
          "language": {
            "type": "string",
            "description": "Language for indexing",
            "enum": [
              "russian",
              "english",
              "none"
            ],
            "default": "russian"
          },
          "language_iso": {
            "type": "string",
            "description": "Language ISO",
            "enum": [
              "ru",
              "en",
              "cn"
            ],
            "default": "ru"
          },
          "title": {
            "type": "string",
            "description": "Title value",
            "default": ""
          },
          "complited_title": {
            "type": "string",
            "description": "Title of complited value",
            "default": ""
          }
        },
        "required": [
          "language",
          "language_iso",
          "title",
          "complited_title"
        ]
      },
      "InternalNotifyTypeAction": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Action name",
            "enum": [
              "external_link",
              "cabinet_link",
              "landing_link",
              "link",
              "accept",
              "decline",
              "accept_1",
              "accept_2",
              "accept_3"
            ]
          },
          "value": {
            "type": "string",
            "description": "Action value"
          },
          "type": {
            "type": "string",
            "description": "Type",
            "enum": [
              "primary",
              "secondary",
              "link"
            ]
          },
          "text": {
            "description": "text",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InternalNotifyTypeActionText"
            }
          },
          "icon": {
            "type": "string",
            "description": "Icon (special symbol)",
            "default": ""
          },
          "group_id": {
            "type": "string",
            "description": "Action group id"
          },
          "group_type": {
            "type": "string",
            "description": "Group actions",
            "enum": [
              "toggle",
              "select",
              "default"
            ]
          }
        },
        "required": [
          "name",
          "value",
          "type",
          "text",
          "icon",
          "group_id",
          "group_type"
        ]
      },
      "ObjectId": {
        "type": "object",
        "properties": {}
      },
      "InternalNotifyTypeText": {
        "type": "object",
        "properties": {
          "language": {
            "type": "string",
            "description": "Language for indexing",
            "enum": [
              "russian",
              "english",
              "none"
            ],
            "default": "russian"
          },
          "language_iso": {
            "type": "string",
            "description": "Language ISO",
            "enum": [
              "ru",
              "en",
              "cn"
            ],
            "default": "ru"
          },
          "title": {
            "type": "string",
            "description": "Title value",
            "default": ""
          },
          "text": {
            "type": "string",
            "description": "Text value",
            "default": ""
          }
        },
        "required": [
          "language",
          "language_iso",
          "title",
          "text"
        ]
      },
      "PlanRestreamItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1,
            "description": "Plan restream id"
          },
          "channel_max": {
            "type": "number",
            "description": "Max channels"
          },
          "bitrate_max": {
            "type": "number",
            "description": "Max bitrate"
          },
          "date_end": {
            "format": "date-time",
            "type": "string",
            "description": "Date end tariff"
          }
        },
        "required": [
          "id",
          "channel_max",
          "bitrate_max",
          "date_end"
        ]
      },
      "PlanRestreamForProject": {
        "type": "object",
        "properties": {
          "before": {
            "example": 1,
            "description": "Before tariff restream",
            "allOf": [
              {
                "$ref": "#/components/schemas/PlanRestreamItem"
              }
            ]
          },
          "current": {
            "default": {
              "id": 1,
              "channel_max": 2,
              "bitrate_max": 10000
            },
            "example": 1,
            "description": "Current tariff restream",
            "allOf": [
              {
                "$ref": "#/components/schemas/PlanRestreamItem"
              }
            ]
          },
          "next": {
            "example": 1,
            "description": "Next tariff restream",
            "allOf": [
              {
                "$ref": "#/components/schemas/PlanRestreamItem"
              }
            ]
          }
        },
        "required": [
          "before",
          "current",
          "next"
        ]
      },
      "PlanRestreamDiscountResponse": {
        "type": "object",
        "properties": {
          "month": {
            "type": "number",
            "default": 0,
            "example": 0,
            "description": "Month discount"
          },
          "year": {
            "type": "number",
            "example": 10,
            "description": "Year discount"
          }
        },
        "required": [
          "month",
          "year"
        ]
      },
      "PlanRestreamResponse": {
        "type": "object",
        "properties": {
          "plan_restream_id": {
            "type": "number",
            "description": "Unique ID"
          },
          "title": {
            "type": "string",
            "description": "Title",
            "example": "First"
          },
          "active": {
            "type": "boolean",
            "description": "Active",
            "example": true
          },
          "count_channel_min": {
            "type": "number",
            "nullable": true,
            "description": "Minimum channel count",
            "example": 1
          },
          "count_channel_max": {
            "type": "number",
            "nullable": true,
            "description": "Maximum channel count",
            "example": 1
          },
          "type": {
            "enum": [
              "free",
              "paid_fix",
              "paid_flex",
              "custom"
            ],
            "type": "string",
            "description": "Type",
            "example": "free"
          },
          "price_rub": {
            "type": "number",
            "nullable": true,
            "description": "Price (RUB)",
            "example": 0
          },
          "price_usd": {
            "type": "number",
            "nullable": true,
            "description": "Price (USD)",
            "example": 0
          },
          "bitrate_max": {
            "type": "number",
            "nullable": true,
            "description": "Maximum bitrate, kbps",
            "example": 10000
          },
          "bitrate_min": {
            "type": "number",
            "nullable": true,
            "description": "Minimum bitrate, kbps",
            "example": 10000
          },
          "resolution": {
            "enum": [
              "720p",
              "1080p",
              "2K",
              "UW",
              "4K",
              "8K"
            ],
            "type": "string",
            "description": "Resolution",
            "example": "1080p"
          },
          "fps": {
            "type": "string",
            "description": "Fps",
            "enum": [
              "30",
              "60"
            ],
            "example": "30"
          },
          "create_projects": {
            "type": "boolean",
            "description": "Create project in account",
            "example": true
          },
          "chat": {
            "type": "boolean",
            "description": "Use multichat",
            "example": true
          },
          "video": {
            "type": "boolean",
            "description": "Playing video as a broadcast",
            "example": false
          },
          "video_storage": {
            "type": "number",
            "nullable": true,
            "description": "Storage of video files, Gb",
            "example": 0
          },
          "change_subject": {
            "type": "boolean",
            "description": "Change title, description, image and other data of stream",
            "example": false
          },
          "background_chat": {
            "type": "boolean",
            "description": "Collect chat messages in the background",
            "example": false
          },
          "dedicated_server": {
            "type": "boolean",
            "description": "Dedicated server",
            "example": false
          },
          "personal_manager": {
            "type": "number",
            "nullable": true,
            "description": "Personal manager",
            "example": 0
          },
          "pull_link_limit": {
            "type": "number",
            "description": "pull links",
            "example": 0
          },
          "index": {
            "type": "number",
            "description": "Field for sort",
            "example": 0
          },
          "discount": {
            "description": "Discount",
            "allOf": [
              {
                "$ref": "#/components/schemas/PlanRestreamDiscountResponse"
              }
            ]
          }
        },
        "required": [
          "plan_restream_id",
          "title",
          "active",
          "count_channel_min",
          "count_channel_max",
          "type",
          "price_rub",
          "price_usd",
          "bitrate_max",
          "bitrate_min",
          "resolution",
          "fps",
          "create_projects",
          "chat",
          "video",
          "video_storage",
          "change_subject",
          "background_chat",
          "dedicated_server",
          "personal_manager",
          "pull_link_limit",
          "index",
          "discount"
        ]
      },
      "PlanRestreamFeatureItem": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name",
            "enum": [
              "count_channel_max",
              "bitrate_max",
              "resolution",
              "create_projects",
              "chat",
              "video",
              "video_storage",
              "change_subject",
              "background_chat",
              "dedicated_server",
              "personal_manager"
            ]
          },
          "unit": {
            "type": "string",
            "description": "Unit"
          }
        },
        "required": [
          "name"
        ]
      },
      "PlanRestreamFeatureListResponse": {
        "type": "object",
        "properties": {
          "results": {
            "description": "Array of items",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlanRestreamFeatureItem"
            }
          }
        },
        "required": [
          "results"
        ]
      },
      "PlanRestreamResponseDto": {
        "type": "object",
        "properties": {
          "results": {
            "description": "Array of items",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlanRestreamResponse"
            }
          },
          "feature": {
            "description": "Features",
            "allOf": [
              {
                "$ref": "#/components/schemas/PlanRestreamFeatureListResponse"
              }
            ]
          }
        },
        "required": [
          "results",
          "feature"
        ]
      },
      "PlanRestreamPrice": {
        "type": "object",
        "properties": {
          "month": {
            "type": "number",
            "description": "Price per month"
          },
          "year": {
            "type": "number",
            "description": "Price per year"
          }
        },
        "required": [
          "month",
          "year"
        ]
      },
      "PlanRestreamFeatureItemV2": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name"
          },
          "type": {
            "type": "string",
            "description": "Type variable",
            "example": "string",
            "enum": [
              "string",
              "number",
              "boolean"
            ]
          },
          "value": {
            "description": "Value",
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "index": {
            "type": "number",
            "description": "Field for sort",
            "example": 0
          },
          "unit": {
            "type": "string",
            "description": "Unit"
          }
        },
        "required": [
          "name",
          "type",
          "value",
          "index"
        ]
      },
      "PlanRestreamBeforeItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1,
            "description": "Plan restream id"
          },
          "channel_max": {
            "type": "number",
            "description": "Max channels"
          },
          "bitrate_max": {
            "type": "number",
            "description": "Max bitrate"
          },
          "date_end": {
            "format": "date-time",
            "type": "string",
            "description": "Date end tariff"
          }
        },
        "required": [
          "id",
          "date_end"
        ]
      },
      "PlanRestreamCurrentItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1,
            "description": "Plan restream id"
          },
          "channel_max": {
            "type": "number",
            "description": "Max channels"
          },
          "bitrate_max": {
            "type": "number",
            "description": "Max bitrate"
          },
          "date_end": {
            "format": "date-time",
            "type": "string",
            "description": "Date end tariff"
          }
        },
        "required": [
          "id",
          "date_end"
        ]
      },
      "PlanRestreamNextItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1,
            "description": "Plan restream id"
          },
          "channel_max": {
            "type": "number",
            "description": "Max channels"
          },
          "bitrate_max": {
            "type": "number",
            "description": "Max bitrate"
          },
          "date_start": {
            "format": "date-time",
            "type": "string",
            "description": "Date start tariff"
          }
        },
        "required": [
          "id",
          "date_start"
        ]
      },
      "PlanRestreamForProjectV2": {
        "type": "object",
        "properties": {
          "before": {
            "description": "Before tariff restream",
            "allOf": [
              {
                "$ref": "#/components/schemas/PlanRestreamBeforeItem"
              }
            ]
          },
          "current": {
            "default": {
              "id": 1,
              "channel_max": 2,
              "bitrate_max": 10000
            },
            "description": "Current tariff restream",
            "allOf": [
              {
                "$ref": "#/components/schemas/PlanRestreamCurrentItem"
              }
            ]
          },
          "next": {
            "description": "Next tariff restream",
            "allOf": [
              {
                "$ref": "#/components/schemas/PlanRestreamNextItem"
              }
            ]
          }
        },
        "required": [
          "current"
        ]
      },
      "PlanRestreamProjectResponse": {
        "type": "object",
        "properties": {
          "plan_restream_id": {
            "type": "number",
            "description": "Unique ID"
          },
          "title": {
            "type": "string",
            "description": "Title",
            "example": "First"
          },
          "active": {
            "type": "boolean",
            "description": "Active",
            "example": true
          },
          "count_channel_min": {
            "type": "number",
            "description": "Minimum channel count",
            "example": 1
          },
          "count_channel_max": {
            "type": "number",
            "description": "Maximum channel count",
            "example": 1
          },
          "count_channel_step": {
            "type": "number",
            "description": "Step channel",
            "example": 1
          },
          "type": {
            "enum": [
              "free",
              "paid_fix",
              "paid_flex",
              "custom"
            ],
            "type": "string",
            "description": "Type",
            "example": "free"
          },
          "bitrate_max": {
            "type": "number",
            "description": "Maximum bitrate, kbps",
            "nullable": true,
            "example": 10000
          },
          "bitrate_min": {
            "type": "number",
            "description": "Minimum bitrate, kbps",
            "example": 10000
          },
          "bitrate_step": {
            "type": "number",
            "description": "Step bitrate"
          },
          "index": {
            "type": "number",
            "description": "Field for sort",
            "example": 0
          },
          "price": {
            "description": "Price",
            "allOf": [
              {
                "$ref": "#/components/schemas/PlanRestreamPrice"
              }
            ]
          },
          "status": {
            "type": "string",
            "description": "Status",
            "enum": [
              "current",
              "upgrade",
              "downgrade"
            ]
          },
          "feature": {
            "description": "Features",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlanRestreamFeatureItemV2"
            }
          },
          "own_tariff": {
            "description": "Tariff project",
            "allOf": [
              {
                "$ref": "#/components/schemas/PlanRestreamForProjectV2"
              }
            ]
          }
        },
        "required": [
          "plan_restream_id",
          "title",
          "active",
          "count_channel_max",
          "type",
          "bitrate_max",
          "index",
          "price",
          "status",
          "feature",
          "own_tariff"
        ]
      },
      "PlanRestreamProjectResponseDto": {
        "type": "object",
        "properties": {
          "results": {
            "description": "Array of items",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlanRestreamProjectResponse"
            }
          }
        },
        "required": [
          "results"
        ]
      },
      "MoneyFlowBalanceTypeValuesResponse": {
        "type": "object",
        "properties": {
          "bonus": {
            "type": "number",
            "example": 1,
            "description": "Bonus balance"
          },
          "payment": {
            "type": "number",
            "example": 1,
            "description": "Payment balance"
          },
          "profit": {
            "type": "number",
            "example": 1,
            "description": "Profit balance"
          }
        },
        "required": [
          "bonus",
          "payment",
          "profit"
        ]
      },
      "BalanceForPayResponse": {
        "type": "object",
        "properties": {
          "balance": {
            "type": "number",
            "example": 1,
            "description": "Balance"
          },
          "currency": {
            "enum": [
              "rub",
              "usd"
            ],
            "type": "string",
            "example": "usd",
            "description": "Currency"
          },
          "balances_allow": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "bonus",
                "payment",
                "profit"
              ]
            },
            "example": [
              "payment"
            ],
            "description": "Allowed balances"
          },
          "balances_values": {
            "example": [],
            "description": "Balances values",
            "allOf": [
              {
                "$ref": "#/components/schemas/MoneyFlowBalanceTypeValuesResponse"
              }
            ]
          }
        },
        "required": [
          "balance",
          "currency",
          "balances_allow",
          "balances_values"
        ]
      },
      "PlanRefund": {
        "type": "object",
        "properties": {
          "current": {
            "type": "number",
            "default": 0,
            "example": 0,
            "description": "Refund for the current rate"
          },
          "after": {
            "type": "number",
            "default": 0,
            "example": 0,
            "description": "Refund for the next rate"
          }
        },
        "required": [
          "current",
          "after"
        ]
      },
      "PlanRestreamCheckV2Response": {
        "type": "object",
        "properties": {
          "tariff_price_month": {
            "type": "number",
            "example": 39000,
            "description": "Tariff price"
          },
          "tariff_price_year": {
            "type": "number",
            "example": 39000,
            "description": "Tariff price"
          },
          "balance": {
            "type": "number",
            "example": 100000,
            "description": "Balance for pay"
          },
          "sum": {
            "type": "number",
            "example": 39000,
            "description": "Sum for pay"
          },
          "refund_current": {
            "type": "number",
            "example": 0,
            "description": "Refund current"
          },
          "refund_after": {
            "type": "number",
            "example": 0,
            "description": "Refund after"
          },
          "refund_balance": {
            "type": "number",
            "example": 0,
            "description": "Refund balance"
          },
          "decrease_balance": {
            "type": "number",
            "example": 1,
            "description": "Decrease balance"
          },
          "total": {
            "type": "number",
            "example": 10000,
            "description": "Value for total"
          },
          "notification": {
            "type": "string",
            "example": "Выбранный тариф будет установлен ...",
            "description": "Name for button"
          },
          "notification_date": {
            "format": "date-time",
            "type": "string",
            "example": "Выбранный тариф будет установлен ...",
            "description": "Date for notification"
          },
          "button_name": {
            "type": "string",
            "example": "pay",
            "description": "Name for button"
          },
          "currency": {
            "enum": [
              "rub",
              "usd"
            ],
            "type": "string",
            "example": "rub",
            "description": "Currency"
          },
          "choose_status": {
            "type": "string",
            "description": "Status for plan",
            "enum": [
              "new",
              "prolongate",
              "upgrade",
              "downgrade"
            ]
          },
          "status": {
            "type": "string",
            "description": "Status for plan",
            "enum": [
              "new",
              "current",
              "current_upgrade",
              "current_downgrade",
              "upgrade",
              "downgrade"
            ]
          },
          "channel": {
            "type": "number",
            "description": "Current channels"
          },
          "bitrate": {
            "type": "number",
            "description": "Current bitrate"
          }
        },
        "required": [
          "tariff_price_month",
          "tariff_price_year",
          "balance",
          "button_name",
          "currency",
          "choose_status",
          "status"
        ]
      },
      "MoneyFlowDetails": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "text",
            "description": "Title"
          },
          "date_end": {
            "format": "date-time",
            "type": "string",
            "example": "2025-05-29T14:53:17.310Z",
            "description": "Date"
          }
        },
        "required": [
          "title",
          "date_end"
        ]
      },
      "MoneyFlowResponse": {
        "type": "object",
        "properties": {
          "money_flow_id": {
            "type": "number",
            "example": 1,
            "description": "id"
          },
          "amount": {
            "type": "number",
            "example": "1",
            "description": "Amount"
          },
          "currency": {
            "nullable": true,
            "enum": [
              "rub",
              "usd"
            ],
            "type": "string",
            "example": "usd",
            "description": "Currency"
          },
          "date": {
            "format": "date-time",
            "type": "string",
            "example": "2025-05-29T14:53:17.311Z",
            "description": "Date"
          },
          "type": {
            "enum": [
              "registration_bonus",
              "plan_restream_buy",
              "plan_transcoding_buy",
              "plan_storage_buy",
              "channel_story_buy",
              "channel_shop_sell",
              "referral_profit",
              "payment",
              "payment_cancel",
              "payout",
              "payout_cancel",
              "refund",
              "conversion",
              "withdrawal",
              "transferred_of_old_site",
              "accrued_admin",
              "reduced_admin",
              "promo_topup_1",
              "promo_topup_2",
              "promo_create_plan_restream_1",
              "promo_create_plan_restream_2"
            ],
            "type": "string",
            "example": "registration_bonus",
            "description": "Type"
          },
          "balance": {
            "type": "number",
            "example": 0,
            "description": "Current balance before transaction"
          },
          "details": {
            "nullable": true,
            "description": "Details",
            "allOf": [
              {
                "$ref": "#/components/schemas/MoneyFlowDetails"
              }
            ]
          }
        },
        "required": [
          "money_flow_id",
          "amount",
          "currency",
          "date",
          "type",
          "balance",
          "details"
        ]
      },
      "UserProjectGetResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Test",
            "description": "Имя"
          },
          "fename": {
            "type": "string",
            "example": "Tester",
            "description": "Фамилия"
          },
          "photo_50": {
            "type": "string",
            "example": "https://ya.ru/a.jpg",
            "description": "Аватарка"
          },
          "type": {
            "enum": [
              0,
              1
            ],
            "type": "number",
            "description": "Тип 0 - личный проект, 1 - командный проект",
            "example": 0
          },
          "external_id": {
            "type": "string",
            "example": 1,
            "description": "External id"
          },
          "internal_id": {
            "type": "number",
            "example": 1,
            "description": "Internal id"
          },
          "countrie_id": {
            "type": "number",
            "example": 1,
            "description": "Countrie id"
          },
          "balance_bonus": {
            "type": "number",
            "example": 0,
            "description": "Balance bonus"
          },
          "balance_payment": {
            "type": "number",
            "example": 0,
            "description": "Balance payment"
          },
          "balance_profit": {
            "type": "number",
            "example": 0,
            "description": "Balance profit"
          },
          "currency": {
            "enum": [
              "rub",
              "usd"
            ],
            "type": "string",
            "example": "usd",
            "description": "Currency"
          }
        },
        "required": [
          "name",
          "fename",
          "photo_50",
          "type",
          "external_id",
          "internal_id",
          "countrie_id",
          "balance_bonus",
          "balance_payment",
          "balance_profit",
          "currency"
        ]
      },
      "ListResponse": {
        "type": "object",
        "properties": {
          "results": {
            "description": "Array of items",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "results"
        ]
      },
      "UserProject2ProjectResponse": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "number",
            "example": 1,
            "description": "User id"
          },
          "project_id": {
            "type": "number",
            "example": 1,
            "description": "Project id"
          },
          "name": {
            "type": "string",
            "example": "Test",
            "description": "Имя"
          },
          "fename": {
            "type": "string",
            "example": "Tester",
            "description": "Фамилия"
          },
          "photo_50": {
            "type": "string",
            "example": "https://ya.ru/a.jpg",
            "description": "Аватарка"
          },
          "type": {
            "enum": [
              0,
              1
            ],
            "type": "number",
            "description": "Тип 0 - личный проект, 1 - командный проект",
            "example": 0
          },
          "external_id": {
            "type": "string",
            "example": 1,
            "description": "External id"
          },
          "access_type": {
            "type": "number",
            "example": 2,
            "description": "Access type",
            "enum": [
              0,
              1,
              2
            ]
          }
        },
        "required": [
          "user_id",
          "project_id",
          "name",
          "fename",
          "photo_50",
          "type",
          "external_id",
          "access_type"
        ]
      },
      "UserProjectResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1,
            "description": "Primary key"
          },
          "user_id": {
            "type": "number",
            "example": 1,
            "description": "User id"
          },
          "project_id": {
            "type": "number",
            "example": 1,
            "description": "Project id"
          },
          "access_type": {
            "enum": [
              0,
              1,
              2
            ],
            "type": "number",
            "example": 2,
            "description": "Access type"
          },
          "project": {
            "description": "Project data",
            "allOf": [
              {
                "$ref": "#/components/schemas/UserProject2ProjectResponse"
              }
            ]
          },
          "member_count": {
            "type": "number",
            "example": 1,
            "description": "Members count"
          }
        },
        "required": [
          "id",
          "user_id",
          "project_id",
          "access_type",
          "project",
          "member_count"
        ]
      },
      "ProjectInfoDataResponse": {
        "type": "object",
        "properties": {
          "project_id": {
            "type": "number",
            "description": "Project id",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "Project name",
            "example": "Test"
          },
          "fename": {
            "type": "string",
            "description": "Project fename",
            "example": "Testing"
          },
          "photo_50": {
            "type": "string",
            "description": "Project photo in 50px size",
            "example": "https://example.com/photo.jpg"
          },
          "photo_100": {
            "type": "string",
            "description": "Project photo in 100px size",
            "example": "https://example.com/photo.jpg"
          },
          "external_id": {
            "type": "string",
            "description": "External project id",
            "example": "Dkj49jfs"
          },
          "type": {
            "enum": [
              0,
              1
            ],
            "type": "number",
            "description": "Project type",
            "example": 0
          },
          "balance_bonus": {
            "type": "number",
            "description": "Bonus balance",
            "example": 0
          },
          "balance_payment": {
            "type": "number",
            "description": "Payment balance",
            "example": 0
          },
          "balance_profit": {
            "type": "number",
            "description": "Profit balance",
            "example": 0
          },
          "currency": {
            "enum": [
              "rub",
              "usd"
            ],
            "type": "number",
            "description": "Currency",
            "example": 0
          },
          "country_id": {
            "type": "number",
            "description": "Country id",
            "example": 0
          }
        },
        "required": [
          "project_id",
          "name",
          "fename",
          "photo_50",
          "photo_100",
          "external_id",
          "type",
          "balance_bonus",
          "balance_payment",
          "balance_profit",
          "currency",
          "country_id"
        ]
      },
      "PlanRestream2UserItemResponse": {
        "type": "object",
        "properties": {
          "plan_restream2user_id": {
            "type": "number",
            "example": 1,
            "description": "Plan restream id"
          },
          "plan_restream_id": {
            "type": "number",
            "example": 1,
            "description": "Plan restream id"
          },
          "date_end": {
            "format": "date-time",
            "type": "string",
            "nullable": true,
            "description": "Date end tariff",
            "example": "2025-05-29T14:53:17.279Z"
          },
          "date_start": {
            "format": "date-time",
            "type": "string",
            "nullable": true,
            "description": "Date start",
            "example": "2025-05-29T14:53:17.279Z"
          },
          "date_create": {
            "format": "date-time",
            "type": "string",
            "nullable": true,
            "description": "Date create",
            "example": "2025-05-29T14:53:17.280Z"
          },
          "period": {
            "nullable": true,
            "enum": [
              "month",
              "year"
            ],
            "type": "string",
            "description": "Plan period",
            "example": "month"
          },
          "money_flow_uuid": {
            "type": "string",
            "description": "Money flow uuid",
            "example": "5htgethge"
          },
          "period_uuid": {
            "type": "string",
            "description": "Period uuid",
            "example": "5htgethge"
          },
          "status": {
            "type": "string",
            "description": "Status",
            "example": ""
          },
          "prolongation": {
            "type": "number",
            "description": "Prolongation",
            "example": 0
          }
        },
        "required": [
          "plan_restream2user_id",
          "plan_restream_id",
          "date_end",
          "date_start",
          "date_create",
          "period",
          "money_flow_uuid",
          "period_uuid",
          "status",
          "prolongation"
        ]
      },
      "ProjectInfoRestreamResponse": {
        "type": "object",
        "properties": {
          "plan2user": {
            "description": "Plan restream to user",
            "allOf": [
              {
                "$ref": "#/components/schemas/PlanRestream2UserItemResponse"
              }
            ]
          },
          "data": {
            "description": "Plan restream data",
            "allOf": [
              {
                "$ref": "#/components/schemas/PlanRestreamResponse"
              }
            ]
          }
        },
        "required": [
          "plan2user",
          "data"
        ]
      },
      "PlanTranscoding2UserItemResponse": {
        "type": "object",
        "properties": {
          "plan_transcoding2user_id": {
            "type": "number",
            "example": 1,
            "description": "Plan transcoding id"
          },
          "count": {
            "type": "number",
            "description": "Count flows"
          },
          "date_start": {
            "format": "date-time",
            "type": "string",
            "description": "Date start tariff"
          },
          "date_end": {
            "format": "date-time",
            "type": "string",
            "description": "Date end tariff"
          },
          "date_create": {
            "format": "date-time",
            "type": "string",
            "description": "Date create tariff"
          },
          "period": {
            "nullable": true,
            "enum": [
              "month",
              "year"
            ],
            "type": "string",
            "description": "Period"
          },
          "period_uuid": {
            "type": "string",
            "description": "Period uuid"
          },
          "status": {
            "type": "string",
            "description": "Status"
          },
          "prolongation": {
            "type": "number",
            "description": "Prolongation"
          }
        },
        "required": [
          "plan_transcoding2user_id",
          "count",
          "date_start",
          "date_end",
          "date_create",
          "period",
          "period_uuid",
          "status"
        ]
      },
      "PlanTranscodingDiscountResponse": {
        "type": "object",
        "properties": {
          "month": {
            "type": "number",
            "default": 0,
            "example": 0,
            "description": "Month discount"
          },
          "year": {
            "type": "number",
            "example": 10,
            "description": "Year discount"
          }
        },
        "required": [
          "month",
          "year"
        ]
      },
      "PlanTranscodingResponse": {
        "type": "object",
        "properties": {
          "plan_transcoding_id": {
            "type": "number",
            "description": "Unique id",
            "example": 1
          },
          "title": {
            "type": "string",
            "description": "Title",
            "example": "test"
          },
          "type": {
            "enum": [
              "free",
              "paid_month",
              "paid_minute",
              "custom"
            ],
            "type": "string",
            "description": "Type",
            "example": "free"
          },
          "price_rub": {
            "type": "number",
            "description": "Price (RUB)",
            "example": 0
          },
          "price_usd": {
            "type": "number",
            "description": "Price (USD)",
            "example": 0
          },
          "resolution": {
            "enum": [
              "720p",
              "1080p",
              "2K",
              "UW",
              "4K",
              "8K"
            ],
            "type": "string",
            "description": "Maximum resolution",
            "example": "2K",
            "nullable": true
          },
          "fps": {
            "type": "string",
            "description": "Maximum fps",
            "example": "30",
            "enum": [
              "30",
              "60"
            ]
          },
          "weight": {
            "type": "number",
            "description": "Server load weight",
            "example": 0
          },
          "active": {
            "type": "boolean",
            "description": "Active",
            "example": true
          },
          "index": {
            "type": "number",
            "description": "Field for sort",
            "example": 0
          },
          "space": {
            "type": "number",
            "description": "Free spaces slot",
            "example": 0
          },
          "discount": {
            "description": "Discount",
            "allOf": [
              {
                "$ref": "#/components/schemas/PlanTranscodingDiscountResponse"
              }
            ]
          }
        },
        "required": [
          "plan_transcoding_id",
          "title",
          "type",
          "price_rub",
          "price_usd",
          "resolution",
          "fps",
          "weight",
          "active",
          "index",
          "space",
          "discount"
        ]
      },
      "ProjectInfoTranscodingResponse": {
        "type": "object",
        "properties": {
          "plan2user": {
            "description": "Plan transcoding to user",
            "allOf": [
              {
                "$ref": "#/components/schemas/PlanTranscoding2UserItemResponse"
              }
            ]
          },
          "data": {
            "description": "Plan transcoding data",
            "allOf": [
              {
                "$ref": "#/components/schemas/PlanTranscodingResponse"
              }
            ]
          }
        },
        "required": [
          "plan2user",
          "data"
        ]
      },
      "PlanStorage2UserItemResponse": {
        "type": "object",
        "properties": {
          "plan_storage2user_id": {
            "type": "number",
            "example": 1,
            "description": "Plan storage2user id"
          },
          "plan_storage_id": {
            "type": "number",
            "example": 1,
            "description": "Plan storage id"
          },
          "size": {
            "type": "number",
            "description": "Size"
          },
          "date_start": {
            "format": "date-time",
            "type": "string",
            "description": "Date start tariff"
          },
          "date_end": {
            "format": "date-time",
            "type": "string",
            "description": "Date end tariff"
          },
          "date_create": {
            "format": "date-time",
            "type": "string",
            "description": "Date create tariff"
          },
          "period": {
            "nullable": true,
            "enum": [
              "month",
              "year"
            ],
            "type": "string",
            "description": "Period"
          },
          "period_uuid": {
            "type": "string",
            "description": "Period uuid"
          },
          "status": {
            "type": "string",
            "description": "Status"
          },
          "prolongation": {
            "type": "number",
            "description": "Prolongation"
          },
          "money_flow_uuid": {
            "type": "string",
            "description": "Money flow uuid"
          }
        },
        "required": [
          "plan_storage2user_id",
          "plan_storage_id",
          "size",
          "date_start",
          "date_end",
          "date_create",
          "period",
          "period_uuid",
          "status",
          "money_flow_uuid"
        ]
      },
      "ProjectInfoStorageResponse": {
        "type": "object",
        "properties": {
          "plan2user": {
            "description": "Plan storage to user",
            "allOf": [
              {
                "$ref": "#/components/schemas/PlanStorage2UserItemResponse"
              }
            ]
          },
          "data": {
            "description": "Plan storage data",
            "allOf": [
              {
                "$ref": "#/components/schemas/PlanTranscodingResponse"
              }
            ]
          }
        },
        "required": [
          "plan2user",
          "data"
        ]
      },
      "ProjectInfoAccessResponse": {
        "type": "object",
        "properties": {
          "access_type": {
            "enum": [
              0,
              1,
              2
            ],
            "type": "number",
            "example": 2,
            "description": "Access type"
          }
        },
        "required": [
          "access_type"
        ]
      },
      "ProjectInfoResponse": {
        "type": "object",
        "properties": {
          "v": {
            "type": "string",
            "description": "Version",
            "enum": [
              "1",
              "2",
              "3"
            ],
            "example": "3"
          },
          "language": {
            "default": "en",
            "enum": [
              "ru",
              "en",
              "cn"
            ],
            "type": "string",
            "description": "Current language",
            "example": "en"
          },
          "data": {
            "description": "Project info",
            "allOf": [
              {
                "$ref": "#/components/schemas/ProjectInfoDataResponse"
              }
            ]
          },
          "restream": {
            "description": "Restream tariff",
            "allOf": [
              {
                "$ref": "#/components/schemas/ProjectInfoRestreamResponse"
              }
            ]
          },
          "transcoding": {
            "nullable": true,
            "description": "Transcoding tariff",
            "allOf": [
              {
                "$ref": "#/components/schemas/ProjectInfoTranscodingResponse"
              }
            ]
          },
          "storage": {
            "nullable": true,
            "description": "Storage tariff",
            "allOf": [
              {
                "$ref": "#/components/schemas/ProjectInfoStorageResponse"
              }
            ]
          },
          "access": {
            "description": "Project info access",
            "example": {
              "access_type": 2
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/ProjectInfoAccessResponse"
              }
            ]
          }
        },
        "required": [
          "v",
          "language",
          "data",
          "restream",
          "transcoding",
          "storage",
          "access"
        ]
      },
      "MethodProjectLiveStatusInfoRestreamData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "status": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "status"
        ]
      },
      "MethodProjectLiveStatusInfo": {
        "type": "object",
        "properties": {
          "restream_data": {
            "description": "Restream data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MethodProjectLiveStatusInfoRestreamData"
            }
          },
          "connect_id": {
            "type": "number"
          },
          "connect_id_v2": {
            "type": "string"
          },
          "fps": {
            "type": "number"
          },
          "key_frame": {
            "type": "number"
          },
          "count": {
            "type": "number"
          },
          "speed": {
            "type": "number"
          },
          "quality": {
            "type": "number"
          },
          "bitrate": {
            "type": "number"
          },
          "full_bitrate": {
            "type": "number"
          },
          "status": {
            "type": "string"
          },
          "restrims": {
            "type": "number"
          }
        },
        "required": [
          "connect_id",
          "connect_id_v2",
          "fps",
          "key_frame",
          "count",
          "speed",
          "quality",
          "bitrate",
          "full_bitrate",
          "status",
          "restrims"
        ]
      },
      "MethodProjectLiveStatusVideo": {
        "type": "object",
        "properties": {
          "task_id": {
            "type": "number"
          },
          "video_id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "duration": {
            "type": "number"
          }
        },
        "required": [
          "task_id",
          "video_id",
          "name",
          "duration"
        ]
      },
      "MethodProjectLiveStatusResponse": {
        "type": "object",
        "properties": {
          "live_groups_count": {
            "type": "number",
            "example": "1",
            "description": "Live group count"
          },
          "stream_id": {
            "type": "number",
            "example": 1,
            "description": "Stream id"
          },
          "url": {
            "type": "string",
            "example": "https://example.com/live/stream123.m3u8",
            "description": "Url live stream"
          },
          "app": {
            "type": "string",
            "example": "live",
            "description": "App name"
          },
          "date": {
            "type": "string",
            "example": "2025-05-29T14:53:17.331Z",
            "description": "Date"
          },
          "status": {
            "type": "string",
            "description": "Stream status"
          },
          "resolution": {
            "type": "string",
            "example": "1080x720",
            "description": "Stream resolution"
          },
          "broadcast_id": {
            "type": "number",
            "example": 1,
            "description": "Broadcast id"
          },
          "action": {
            "type": "string",
            "example": "active",
            "description": "Action"
          },
          "info": {
            "description": "Stream info",
            "allOf": [
              {
                "$ref": "#/components/schemas/MethodProjectLiveStatusInfo"
              }
            ]
          },
          "video": {
            "description": "Video info",
            "allOf": [
              {
                "$ref": "#/components/schemas/MethodProjectLiveStatusVideo"
              }
            ]
          }
        },
        "required": [
          "live_groups_count"
        ]
      },
      "ProjectHistoryResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1,
            "description": "Primary key"
          },
          "action": {
            "enum": [
              "project_channel_invite_add",
              "project_channel_invite_del",
              "project_channel_invite_accept",
              "project_channel_invite_decline",
              "user_project_invite_add",
              "user_project_invite_del",
              "user_project_invite_accept",
              "user_project_invite_decline",
              "user_project_add",
              "user_project_del",
              "user_project_change",
              "project_channel_add",
              "project_channel_del",
              "project_channel_change"
            ],
            "type": "string",
            "description": "Action"
          },
          "project_id": {
            "type": "number",
            "description": "Project id"
          },
          "user_id": {
            "type": "number",
            "description": "User id"
          },
          "group_id": {
            "type": "number",
            "description": "Group id"
          },
          "date": {
            "format": "date-time",
            "type": "string",
            "description": "Date",
            "default": "2025-05-29T14:53:17.407Z"
          }
        },
        "required": [
          "id",
          "action",
          "project_id",
          "user_id",
          "group_id"
        ]
      },
      "NotifyUserChannels": {
        "type": "object",
        "properties": {
          "cabinet": {
            "type": "boolean",
            "description": "Active cabinet"
          },
          "telegram": {
            "type": "boolean",
            "description": "Active telegram"
          },
          "mobile": {
            "type": "boolean",
            "description": "Active mobile"
          }
        },
        "required": [
          "cabinet",
          "telegram",
          "mobile"
        ]
      },
      "NotifyUserRelation": {
        "type": "object",
        "properties": {
          "cabinet": {
            "type": "array",
            "description": "Category of user notify in cabinet",
            "items": {
              "type": "string",
              "enum": [
                "important",
                "stream"
              ]
            }
          },
          "telegram": {
            "type": "array",
            "description": "Category of user notify in telegram",
            "items": {
              "type": "string",
              "enum": [
                "important",
                "stream"
              ]
            }
          },
          "mobile": {
            "type": "array",
            "description": "Category of user notify in mobile",
            "items": {
              "type": "string",
              "enum": [
                "important",
                "stream"
              ]
            }
          },
          "project_id": {
            "type": "number",
            "description": "Project"
          }
        },
        "required": [
          "cabinet",
          "telegram",
          "mobile",
          "project_id"
        ]
      },
      "SiteNotifyUserResponse": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "number",
            "description": "User id"
          },
          "channels": {
            "description": "Channels",
            "allOf": [
              {
                "$ref": "#/components/schemas/NotifyUserChannels"
              }
            ]
          },
          "relation": {
            "description": "Relation",
            "allOf": [
              {
                "$ref": "#/components/schemas/NotifyUserRelation"
              }
            ]
          }
        },
        "required": [
          "user_id",
          "channels",
          "relation"
        ]
      },
      "SiteSetNotifyUserRequest": {
        "type": "object",
        "properties": {
          "project_id": {
            "type": "number",
            "description": "Project id",
            "example": 1
          },
          "notify_channel": {
            "enum": [
              "telegram",
              "cabinet",
              "mobile"
            ],
            "type": "string",
            "description": "Notify channel",
            "example": "telegram"
          },
          "notify_category": {
            "enum": [
              "important",
              "stream"
            ],
            "type": "string",
            "description": "Notify category",
            "example": "important"
          },
          "status": {
            "enum": [
              "enable",
              "disable"
            ],
            "type": "string",
            "description": "Set status",
            "example": "enable"
          }
        },
        "required": [
          "project_id",
          "notify_channel",
          "notify_category",
          "status"
        ]
      },
      "SiteScreenNotifyUserResponse": {
        "type": "object",
        "properties": {
          "type": {
            "default": "info",
            "enum": [
              "debug",
              "info",
              "warning",
              "error"
            ],
            "type": "string",
            "description": "Level of notify. Default is info"
          },
          "title": {
            "type": "string",
            "description": "Title of notify"
          },
          "text": {
            "type": "string",
            "description": "Text of notify"
          },
          "actions": {
            "description": "Array of texts",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InternalNotifyTypeAction"
            }
          }
        },
        "required": [
          "type",
          "text"
        ]
      },
      "SiteAuthCentrifugeResponse": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "Access token"
          }
        },
        "required": [
          "access_token"
        ]
      },
      "GetStreamKeyResponse": {
        "type": "object",
        "properties": {
          "wait": {
            "type": "number",
            "description": "Seconds the stream guard"
          },
          "record": {
            "type": "boolean",
            "description": "Is recordable stream"
          },
          "key": {
            "type": "string",
            "description": "Key"
          }
        },
        "required": [
          "wait",
          "record",
          "key"
        ]
      },
      "SetRecordStreamRequest": {
        "type": "object",
        "properties": {
          "v": {
            "type": "string",
            "description": "Version",
            "enum": [
              "1",
              "2",
              "3"
            ],
            "example": "3"
          },
          "language": {
            "default": "en",
            "enum": [
              "ru",
              "en",
              "cn"
            ],
            "type": "string",
            "description": "Current language",
            "example": "en"
          },
          "project_id": {
            "type": "number",
            "description": "Project id"
          },
          "record": {
            "type": "boolean",
            "description": "Record status"
          }
        },
        "required": [
          "v",
          "language",
          "project_id",
          "record"
        ]
      },
      "PlanTranscodingItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1,
            "description": "Plan transcoding id"
          },
          "count": {
            "type": "number",
            "description": "Count flows"
          },
          "date_end": {
            "format": "date-time",
            "type": "string",
            "description": "Date end tariff"
          },
          "title": {
            "type": "string",
            "description": "Plan title"
          },
          "prolongation": {
            "type": "number",
            "description": "Prolongation"
          }
        },
        "required": [
          "id",
          "count",
          "date_end",
          "title"
        ]
      },
      "PlanTranscodingForProject": {
        "type": "object",
        "properties": {
          "before": {
            "example": 1,
            "description": "Before tariff transcoding",
            "allOf": [
              {
                "$ref": "#/components/schemas/PlanTranscodingItem"
              }
            ]
          },
          "current": {
            "example": 1,
            "description": "Current tariff transcoding",
            "allOf": [
              {
                "$ref": "#/components/schemas/PlanTranscodingItem"
              }
            ]
          },
          "next": {
            "example": 1,
            "description": "Next tariff transcoding",
            "allOf": [
              {
                "$ref": "#/components/schemas/PlanTranscodingItem"
              }
            ]
          }
        },
        "required": [
          "before",
          "current",
          "next"
        ]
      },
      "PlanTranscodingResponseDto": {
        "type": "object",
        "properties": {
          "results": {
            "description": "Array of items",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlanTranscodingResponse"
            }
          }
        },
        "required": [
          "results"
        ]
      },
      "PlanTranscodingCheckResponse": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "default": 0,
            "example": 1,
            "description": "Amount"
          },
          "balance": {
            "description": "Balance for pay object",
            "allOf": [
              {
                "$ref": "#/components/schemas/BalanceForPayResponse"
              }
            ]
          },
          "refund": {
            "description": "Refund for rate",
            "allOf": [
              {
                "$ref": "#/components/schemas/PlanRefund"
              }
            ]
          }
        },
        "required": [
          "amount",
          "balance",
          "refund"
        ]
      },
      "PlanStorageItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1,
            "description": "Plan restream id"
          },
          "size": {
            "type": "number",
            "description": "Size"
          },
          "period": {
            "enum": [
              "month",
              "year"
            ],
            "type": "string",
            "description": "Period"
          },
          "date_end": {
            "format": "date-time",
            "type": "string",
            "description": "Date end tariff"
          }
        },
        "required": [
          "id",
          "size",
          "period",
          "date_end"
        ]
      },
      "PlanStorageForProject": {
        "type": "object",
        "properties": {
          "before": {
            "example": 1,
            "description": "Before tariff restream",
            "allOf": [
              {
                "$ref": "#/components/schemas/PlanStorageItem"
              }
            ]
          },
          "current": {
            "example": 1,
            "description": "Current tariff restream",
            "allOf": [
              {
                "$ref": "#/components/schemas/PlanStorageItem"
              }
            ]
          },
          "next": {
            "example": 1,
            "description": "Next tariff restream",
            "allOf": [
              {
                "$ref": "#/components/schemas/PlanStorageItem"
              }
            ]
          }
        },
        "required": [
          "before",
          "current",
          "next"
        ]
      },
      "PlanStorageDiscountResponse": {
        "type": "object",
        "properties": {
          "month": {
            "type": "number",
            "default": 0,
            "example": 0,
            "description": "Month discount"
          },
          "year": {
            "type": "number",
            "example": 10,
            "description": "Year discount"
          }
        },
        "required": [
          "month",
          "year"
        ]
      },
      "PlanStorageResponse": {
        "type": "object",
        "properties": {
          "plan_storage_id": {
            "type": "number",
            "description": "Unique ID"
          },
          "title": {
            "type": "string",
            "description": "Title",
            "example": "First"
          },
          "min": {
            "type": "number",
            "description": "Minimum storage size, gb",
            "example": 1
          },
          "max": {
            "type": "number",
            "description": "Maximum storage size, gb",
            "example": 10
          },
          "price_rub": {
            "type": "number",
            "description": "Price per gb (RUB)",
            "example": 10
          },
          "price_usd": {
            "type": "number",
            "description": "Price per gb (USD)",
            "example": 10
          },
          "step": {
            "type": "number",
            "description": "Step increase in gb",
            "example": 1
          },
          "active": {
            "type": "boolean",
            "description": "Is active",
            "example": true
          },
          "discount": {
            "description": "Discount",
            "allOf": [
              {
                "$ref": "#/components/schemas/PlanStorageDiscountResponse"
              }
            ]
          }
        },
        "required": [
          "plan_storage_id",
          "title",
          "min",
          "max",
          "price_rub",
          "price_usd",
          "step",
          "active",
          "discount"
        ]
      },
      "PlanStorageResponseDto": {
        "type": "object",
        "properties": {
          "results": {
            "description": "Array of items",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlanStorageResponse"
            }
          }
        },
        "required": [
          "results"
        ]
      },
      "PlanStorageCheckResponse": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "default": 0,
            "example": 1,
            "description": "Amount"
          },
          "balance": {
            "example": 1,
            "description": "Balance for pay object",
            "allOf": [
              {
                "$ref": "#/components/schemas/BalanceForPayResponse"
              }
            ]
          },
          "refund": {
            "description": "Refund for rate",
            "allOf": [
              {
                "$ref": "#/components/schemas/PlanRefund"
              }
            ]
          }
        },
        "required": [
          "amount",
          "balance",
          "refund"
        ]
      },
      "SiteUpdateOptionsVkRequest": {
        "type": "object",
        "properties": {
          "v": {
            "type": "string",
            "description": "Version",
            "enum": [
              "1",
              "2",
              "3"
            ],
            "example": "3"
          },
          "language": {
            "default": "en",
            "enum": [
              "ru",
              "en",
              "cn"
            ],
            "type": "string",
            "description": "Current language",
            "example": "en"
          },
          "project_id": {
            "type": "number",
            "description": "Project id"
          },
          "channel_id": {
            "type": "number",
            "description": "Channel id"
          },
          "title": {
            "type": "string",
            "maxLength": 128,
            "default": "title"
          },
          "description": {
            "type": "string",
            "maxLength": 5000,
            "default": "description"
          },
          "category_id": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "/^[0-9]*$/",
            "description": "category id",
            "default": "42"
          },
          "category_name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100,
            "description": "category name",
            "default": "name"
          },
          "category_secondary_id": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "/^[0-9]*$/",
            "description": "category id",
            "default": "42"
          },
          "category_secondary_name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100,
            "description": "category name",
            "default": "name"
          },
          "playlist_id": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100,
            "description": "playlist id"
          },
          "privacy_comments": {
            "enum": [
              "all",
              "members",
              "editors",
              "nobody"
            ],
            "type": "string",
            "default": "privacy comments",
            "example": "all"
          },
          "privacy_video": {
            "enum": [
              "all",
              "members",
              "editors",
              "nobody"
            ],
            "type": "string",
            "default": "privacy video",
            "example": "all"
          },
          "wall": {
            "type": "boolean",
            "description": "Is publish stream on wall"
          }
        },
        "required": [
          "v",
          "language",
          "project_id",
          "channel_id",
          "title",
          "description",
          "category_id",
          "category_name",
          "category_secondary_id",
          "category_secondary_name",
          "playlist_id",
          "privacy_comments",
          "privacy_video",
          "wall"
        ]
      },
      "SiteUpdateOptionsYoutubeRequest": {
        "type": "object",
        "properties": {
          "v": {
            "type": "string",
            "description": "Version",
            "enum": [
              "1",
              "2",
              "3"
            ],
            "example": "3"
          },
          "language": {
            "default": "en",
            "enum": [
              "ru",
              "en",
              "cn"
            ],
            "type": "string",
            "description": "Current language",
            "example": "en"
          },
          "project_id": {
            "type": "number",
            "description": "Project id"
          },
          "channel_id": {
            "type": "number",
            "description": "Channel id"
          },
          "title": {
            "type": "string",
            "pattern": "/^[^<>]*$/",
            "maxLength": 100,
            "default": "title"
          },
          "description": {
            "type": "string",
            "pattern": "/^[^<>]*$/",
            "maxLength": 5000,
            "default": "description"
          },
          "category_id": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "/^[0-9]*$/",
            "description": "category id",
            "default": "498482"
          },
          "category_name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "description": "category name",
            "default": "name"
          },
          "playlist_id": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "description": "playlist id"
          },
          "audience": {
            "enum": [
              "mark_for_kids",
              "mark_for_nokids"
            ],
            "type": "string",
            "default": "Audience",
            "example": "mark_for_kids"
          },
          "latency": {
            "enum": [
              "normal",
              "low",
              "ultraLow"
            ],
            "type": "string",
            "default": "Latency",
            "example": "normal"
          },
          "privacy_video": {
            "enum": [
              "private",
              "public",
              "unlisted"
            ],
            "type": "string",
            "default": "privacy video",
            "example": "public"
          },
          "image": {
            "type": "string",
            "default": "image url link or base64"
          },
          "lang": {
            "enum": [
              "ru",
              "en"
            ],
            "type": "string",
            "default": "Lang",
            "example": "ru"
          },
          "tags": {
            "minItems": 1,
            "uniqueItems": true,
            "example": [
              "games"
            ],
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "/^[a-zA-Zа-яА-ЯёЁ0-9 ]*$/"
            }
          }
        },
        "required": [
          "v",
          "language",
          "project_id",
          "channel_id",
          "title",
          "description",
          "category_id",
          "category_name",
          "playlist_id",
          "audience",
          "latency",
          "privacy_video",
          "image",
          "lang",
          "tags"
        ]
      },
      "SiteUpdateOptionsTrovoRequest": {
        "type": "object",
        "properties": {
          "v": {
            "type": "string",
            "description": "Version",
            "enum": [
              "1",
              "2",
              "3"
            ],
            "example": "3"
          },
          "language": {
            "default": "en",
            "enum": [
              "ru",
              "en",
              "cn"
            ],
            "type": "string",
            "description": "Current language",
            "example": "en"
          },
          "project_id": {
            "type": "number",
            "description": "Project id"
          },
          "channel_id": {
            "type": "number",
            "description": "Channel id"
          },
          "title": {
            "type": "string",
            "maxLength": 100,
            "default": "title"
          },
          "category_id": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "/^[0-9]*$/",
            "description": "category id",
            "default": "10023"
          },
          "category_name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "description": "category name",
            "default": "name"
          },
          "audience": {
            "enum": [
              "CHANNEL_AUDIENCE_TYPE_FAMILYFRIENDLY",
              "CHANNEL_AUDIENCE_TYPE_TEEN",
              "CHANNEL_AUDIENCE_TYPE_EIGHTEENPLUS"
            ],
            "type": "string",
            "default": "Audience",
            "example": "CHANNEL_AUDIENCE_TYPE_EIGHTEENPLUS"
          },
          "lang": {
            "enum": [
              "ru",
              "en",
              "cn"
            ],
            "type": "string",
            "default": "Lang",
            "example": "ru"
          }
        },
        "required": [
          "v",
          "language",
          "project_id",
          "channel_id",
          "title",
          "category_id",
          "category_name",
          "audience",
          "lang"
        ]
      },
      "SiteUpdateOptionsTwitchRequest": {
        "type": "object",
        "properties": {
          "v": {
            "type": "string",
            "description": "Version",
            "enum": [
              "1",
              "2",
              "3"
            ],
            "example": "3"
          },
          "language": {
            "default": "en",
            "enum": [
              "ru",
              "en",
              "cn"
            ],
            "type": "string",
            "description": "Current language",
            "example": "en"
          },
          "project_id": {
            "type": "number",
            "description": "Project id"
          },
          "channel_id": {
            "type": "number",
            "description": "Channel id"
          },
          "title": {
            "type": "string",
            "maxLength": 140,
            "default": "title"
          },
          "category_id": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "/^[0-9]*$/",
            "description": "category id",
            "default": "498482"
          },
          "category_name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "description": "category name",
            "default": "name"
          },
          "lang": {
            "enum": [
              "ru",
              "en"
            ],
            "type": "string",
            "default": "Lang",
            "example": "ru"
          },
          "tags": {
            "minItems": 1,
            "uniqueItems": true,
            "maxItems": 10,
            "example": [
              "games"
            ],
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 25,
              "minLength": 1,
              "pattern": "/^[a-zA-Zа-яА-ЯёЁ0-9]*$/"
            }
          },
          "domain": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "description": "domain",
            "default": "live.twitch.tv"
          }
        },
        "required": [
          "v",
          "language",
          "project_id",
          "channel_id",
          "title",
          "category_id",
          "category_name",
          "lang",
          "tags",
          "domain"
        ]
      },
      "SiteUpdateOptionsOkRequest": {
        "type": "object",
        "properties": {
          "v": {
            "type": "string",
            "description": "Version",
            "enum": [
              "1",
              "2",
              "3"
            ],
            "example": "3"
          },
          "language": {
            "default": "en",
            "enum": [
              "ru",
              "en",
              "cn"
            ],
            "type": "string",
            "description": "Current language",
            "example": "en"
          },
          "project_id": {
            "type": "number",
            "description": "Project id"
          },
          "channel_id": {
            "type": "number",
            "description": "Channel id"
          },
          "title": {
            "type": "string",
            "maxLength": 128,
            "default": "title"
          },
          "description": {
            "type": "string",
            "maxLength": 5000,
            "default": "description"
          }
        },
        "required": [
          "v",
          "language",
          "project_id",
          "channel_id",
          "title",
          "description"
        ]
      },
      "SiteUpdateOptionsVkVideoLiveRequest": {
        "type": "object",
        "properties": {
          "v": {
            "type": "string",
            "description": "Version",
            "enum": [
              "1",
              "2",
              "3"
            ],
            "example": "3"
          },
          "language": {
            "default": "en",
            "enum": [
              "ru",
              "en",
              "cn"
            ],
            "type": "string",
            "description": "Current language",
            "example": "en"
          },
          "project_id": {
            "type": "number",
            "description": "Project id"
          },
          "channel_id": {
            "type": "number",
            "description": "Channel id"
          },
          "title": {
            "type": "string",
            "maxLength": 128,
            "default": "title"
          },
          "category_id": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "description": "category id",
            "default": "10023"
          },
          "category_name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "description": "category name",
            "default": "name"
          }
        },
        "required": [
          "v",
          "language",
          "project_id",
          "channel_id",
          "title",
          "category_id",
          "category_name"
        ]
      },
      "SiteSetPlannedRequest": {
        "type": "object",
        "properties": {
          "v": {
            "type": "string",
            "description": "Version",
            "enum": [
              "1",
              "2",
              "3"
            ],
            "example": "3"
          },
          "language": {
            "default": "en",
            "enum": [
              "ru",
              "en",
              "cn"
            ],
            "type": "string",
            "description": "Current language",
            "example": "en"
          },
          "project_id": {
            "type": "number",
            "description": "Project id"
          },
          "channel_id": {
            "type": "number",
            "description": "Channel id"
          },
          "id": {
            "type": "string",
            "default": "Planned id",
            "maxLength": 20
          }
        },
        "required": [
          "v",
          "language",
          "project_id",
          "channel_id"
        ]
      },
      "PlannedItemResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "id"
          },
          "title": {
            "type": "string",
            "description": "title"
          },
          "description": {
            "type": "string",
            "description": "description"
          },
          "date": {
            "format": "date-time",
            "type": "string",
            "description": "date"
          }
        },
        "required": [
          "id",
          "title",
          "description",
          "date"
        ]
      },
      "SitePlannedResponse": {
        "type": "object",
        "properties": {
          "planned": {
            "description": "Planned item",
            "allOf": [
              {
                "$ref": "#/components/schemas/PlannedItemResponse"
              }
            ]
          }
        }
      },
      "PlaylistItemResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "id"
          },
          "name": {
            "type": "string",
            "description": "name"
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "SiteSetNameRequest": {
        "type": "object",
        "properties": {
          "v": {
            "type": "string",
            "description": "Version",
            "enum": [
              "1",
              "2",
              "3"
            ],
            "example": "3"
          },
          "language": {
            "default": "en",
            "enum": [
              "ru",
              "en",
              "cn"
            ],
            "type": "string",
            "description": "Current language",
            "example": "en"
          },
          "project_id": {
            "type": "number",
            "description": "Project id"
          },
          "channel_id": {
            "type": "number",
            "description": "Channel id"
          },
          "name": {
            "type": "string",
            "minLength": 3,
            "maxLength": 255,
            "pattern": "/^[a-zA-Zа-яА-ЯёЁ0-9 ]*$/",
            "default": "Channel name"
          }
        },
        "required": [
          "v",
          "language",
          "project_id",
          "channel_id",
          "name"
        ]
      },
      "SiteSetUrlRequest": {
        "type": "object",
        "properties": {
          "v": {
            "type": "string",
            "description": "Version",
            "enum": [
              "1",
              "2",
              "3"
            ],
            "example": "3"
          },
          "language": {
            "default": "en",
            "enum": [
              "ru",
              "en",
              "cn"
            ],
            "type": "string",
            "description": "Current language",
            "example": "en"
          },
          "project_id": {
            "type": "number",
            "description": "Project id"
          },
          "channel_id": {
            "type": "number",
            "description": "Channel id"
          },
          "url": {
            "type": "string",
            "maxLength": 1000,
            "default": "Rtmp link"
          }
        },
        "required": [
          "v",
          "language",
          "project_id",
          "channel_id",
          "url"
        ]
      },
      "SiteSetTranscoderRequest": {
        "type": "object",
        "properties": {
          "v": {
            "type": "string",
            "description": "Version",
            "enum": [
              "1",
              "2",
              "3"
            ],
            "example": "3"
          },
          "language": {
            "default": "en",
            "enum": [
              "ru",
              "en",
              "cn"
            ],
            "type": "string",
            "description": "Current language",
            "example": "en"
          },
          "project_id": {
            "type": "number",
            "description": "Project id"
          },
          "channel_id": {
            "type": "number",
            "description": "Channel id"
          },
          "transcoder_id": {
            "type": "number",
            "description": "Transcoder id"
          }
        },
        "required": [
          "v",
          "language",
          "project_id",
          "channel_id"
        ]
      },
      "SiteChannelStatusResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true,
            "description": "message"
          }
        },
        "required": [
          "message"
        ]
      },
      "SiteUpdateChatTelegramRequest": {
        "type": "object",
        "properties": {
          "v": {
            "type": "string",
            "description": "Version",
            "enum": [
              "1",
              "2",
              "3"
            ],
            "example": "3"
          },
          "language": {
            "default": "en",
            "enum": [
              "ru",
              "en",
              "cn"
            ],
            "type": "string",
            "description": "Current language",
            "example": "en"
          },
          "project_id": {
            "type": "number",
            "description": "Project id"
          },
          "channel_id": {
            "type": "number",
            "description": "Channel id"
          },
          "link": {
            "type": "string",
            "format": "uri",
            "description": "link"
          },
          "select": {
            "type": "number",
            "minimum": 0,
            "maximum": 2,
            "description": "select"
          },
          "messageId": {
            "type": "number",
            "minimum": 0,
            "description": "messageId"
          }
        },
        "required": [
          "v",
          "language",
          "project_id",
          "channel_id"
        ]
      },
      "TelegramChatPostsItem": {
        "type": "object",
        "properties": {
          "message_id": {
            "type": "number",
            "description": "message_id"
          },
          "text": {
            "type": "string",
            "description": "text"
          },
          "attachments": {
            "type": "object",
            "description": "attachments"
          }
        },
        "required": [
          "message_id",
          "text",
          "attachments"
        ]
      },
      "TelegramChatPostsResponseDto": {
        "type": "object",
        "properties": {
          "results": {
            "description": "Array of items",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TelegramChatPostsItem"
            }
          }
        },
        "required": [
          "results"
        ]
      },
      "TelegramChatInfoResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "domain": {
            "type": "string"
          },
          "image": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "image"
        ]
      },
      "TelegramSettingsDto": {
        "type": "object",
        "properties": {
          "filter_mode": {
            "enum": [
              0,
              1,
              2,
              3
            ],
            "type": "number",
            "description": "Filter"
          },
          "chat": {
            "description": "Chat info",
            "allOf": [
              {
                "$ref": "#/components/schemas/TelegramChatInfoResponseDto"
              }
            ]
          },
          "post": {
            "description": "Post",
            "allOf": [
              {
                "$ref": "#/components/schemas/TelegramChatPostsItem"
              }
            ]
          }
        },
        "required": [
          "filter_mode",
          "chat"
        ]
      },
      "TelegramSettingsResponseDto": {
        "type": "object",
        "properties": {
          "connected": {
            "type": "boolean",
            "description": "Status connected"
          },
          "data": {
            "nullable": true,
            "description": "Payload settings for telegram",
            "allOf": [
              {
                "$ref": "#/components/schemas/TelegramSettingsDto"
              }
            ]
          }
        },
        "required": [
          "connected",
          "data"
        ]
      },
      "TelegramSetSettingsRequestDto": {
        "type": "object",
        "properties": {
          "filter_mode": {
            "enum": [
              0,
              1,
              2,
              3
            ],
            "type": "number",
            "description": "Filter mode",
            "default": 0
          },
          "message_id": {
            "type": "number",
            "description": "Message ID"
          },
          "link": {
            "type": "string",
            "format": "uri",
            "description": "Message Link"
          }
        },
        "required": [
          "filter_mode"
        ]
      },
      "TelegramInitConnectResponseDto": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Code for connect"
          }
        },
        "required": [
          "code"
        ]
      },
      "ChannelCategoryInfoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "ChannelPlayListInfoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "ChannelYoutubeInfoDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title of the channel"
          },
          "description": {
            "type": "string"
          },
          "lang": {
            "enum": [
              "ru",
              "en"
            ],
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "category": {
            "$ref": "#/components/schemas/ChannelCategoryInfoDto"
          },
          "playlist": {
            "$ref": "#/components/schemas/ChannelPlayListInfoDto"
          },
          "privacyVideo": {
            "enum": [
              "private",
              "public",
              "unlisted"
            ],
            "type": "string"
          },
          "latency": {
            "enum": [
              "normal",
              "low",
              "ultraLow"
            ],
            "type": "string"
          },
          "audience": {
            "enum": [
              "mark_for_kids",
              "mark_for_nokids"
            ],
            "type": "string"
          },
          "image": {
            "type": "string"
          }
        },
        "required": [
          "title",
          "description"
        ]
      },
      "ChannelVkCategoryInfoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "secondary": {
            "$ref": "#/components/schemas/ChannelCategoryInfoDto"
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "ChannelVkInfoDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title of the channel"
          },
          "description": {
            "type": "string"
          },
          "wall": {
            "type": "boolean"
          },
          "privacyVideo": {
            "enum": [
              "all",
              "members",
              "editors",
              "by_link",
              "donut"
            ],
            "type": "string"
          },
          "privacyComments": {
            "enum": [
              "all",
              "members",
              "editors",
              "nobody"
            ],
            "type": "string"
          },
          "playlist": {
            "$ref": "#/components/schemas/ChannelPlayListInfoDto"
          },
          "category": {
            "$ref": "#/components/schemas/ChannelVkCategoryInfoDto"
          }
        },
        "required": [
          "title",
          "description"
        ]
      },
      "ChannelTrovoInfoDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title of the channel"
          },
          "lang": {
            "enum": [
              "ru",
              "en"
            ],
            "type": "string"
          },
          "audience": {
            "enum": [
              "CHANNEL_AUDIENCE_TYPE_FAMILYFRIENDLY",
              "CHANNEL_AUDIENCE_TYPE_TEEN",
              "CHANNEL_AUDIENCE_TYPE_EIGHTEENPLUS"
            ],
            "type": "string"
          },
          "category": {
            "$ref": "#/components/schemas/ChannelCategoryInfoDto"
          }
        },
        "required": [
          "title"
        ]
      },
      "ChannelTwitchInfoDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title of the channel"
          },
          "lang": {
            "enum": [
              "ru",
              "en"
            ],
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "category": {
            "$ref": "#/components/schemas/ChannelCategoryInfoDto"
          },
          "domain": {
            "type": "string"
          }
        },
        "required": [
          "title"
        ]
      },
      "ChannelOkInfoDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title of the channel"
          },
          "description": {
            "type": "string"
          }
        },
        "required": [
          "title",
          "description"
        ]
      },
      "ChannelDefaultInfoDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title of the channel"
          }
        },
        "required": [
          "title"
        ]
      },
      "SearchChannelRtmpDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "port": {
            "type": "number",
            "nullable": true
          },
          "query": {
            "type": "string",
            "nullable": true
          },
          "domain": {
            "type": "string"
          },
          "protocol": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "domain",
          "protocol"
        ]
      },
      "SearchChannelCredentialsDto": {
        "type": "object",
        "properties": {
          "cid": {
            "type": "number"
          },
          "id": {
            "type": "string"
          },
          "status": {
            "type": "number"
          },
          "role": {
            "type": "number"
          },
          "personal": {
            "type": "boolean"
          },
          "update": {
            "type": "boolean"
          }
        },
        "required": [
          "cid",
          "id",
          "status",
          "role",
          "personal",
          "update"
        ]
      },
      "SearchChannelTokensDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status of tokens",
            "enum": [
              "unused",
              "invalid",
              "deprecated",
              "valid"
            ],
            "example": "unused",
            "default": "unused"
          }
        },
        "required": [
          "status"
        ]
      },
      "SearchChannelCredentialDto": {
        "type": "object",
        "properties": {
          "account": {
            "description": "Account status of credentials",
            "allOf": [
              {
                "$ref": "#/components/schemas/SearchChannelTokensDto"
              }
            ]
          },
          "group": {
            "description": "Groups status of credentials",
            "allOf": [
              {
                "$ref": "#/components/schemas/SearchChannelTokensDto"
              }
            ]
          }
        },
        "required": [
          "account",
          "group"
        ]
      },
      "SearchChannelLiveUserDto": {
        "type": "object",
        "properties": {
          "restreamId": {
            "type": "number"
          },
          "userId": {
            "type": "number"
          },
          "video": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "photo": {
            "type": "string"
          }
        },
        "required": [
          "restreamId",
          "userId",
          "name",
          "photo"
        ]
      },
      "SearchChannelPlatformDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title",
            "example": "Youtube"
          },
          "type": {
            "type": "string",
            "description": "Type platform",
            "example": "youtube"
          },
          "url": {
            "type": "string",
            "description": "Url",
            "example": "https://vk.com"
          },
          "extension": {
            "enum": [
              "png",
              "svg"
            ],
            "type": "string",
            "description": "extension",
            "example": "svg"
          },
          "edit_name": {
            "type": "number",
            "description": "Is edit name"
          }
        },
        "required": [
          "title",
          "type",
          "url",
          "extension",
          "edit_name"
        ]
      },
      "SearchChannelItem": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "name"
          },
          "id": {
            "type": "string",
            "description": "name"
          },
          "transcoderId": {
            "type": "number",
            "description": "Transcoder id"
          },
          "group_id": {
            "type": "number",
            "description": "group_id"
          },
          "type": {
            "type": "string",
            "description": "type"
          },
          "photo_default": {
            "type": "string",
            "description": "photo_default"
          },
          "sell": {
            "type": "boolean",
            "description": "sell"
          },
          "price": {
            "type": "number",
            "description": "price"
          },
          "live": {
            "type": "boolean",
            "description": "live"
          },
          "status": {
            "type": "string",
            "description": "status",
            "enum": [
              "init",
              "pending",
              "error",
              "live",
              "offline",
              "busy"
            ],
            "example": "offline"
          },
          "user_id": {
            "type": "number",
            "description": "user_id"
          },
          "active": {
            "type": "boolean",
            "description": "active"
          },
          "guestsNum": {
            "type": "number",
            "description": "guestsNum"
          },
          "guestRights": {
            "type": "number",
            "nullable": true,
            "description": "guestRights"
          },
          "usageType": {
            "type": "number",
            "description": "usageType"
          },
          "companyRole": {
            "type": "number",
            "nullable": true,
            "description": "companyRole"
          },
          "threads": {
            "type": "number",
            "description": "threads"
          },
          "streamInfo": {
            "description": "streamInfo",
            "oneOf": [
              {
                "$ref": "#/components/schemas/ChannelYoutubeInfoDto"
              },
              {
                "$ref": "#/components/schemas/ChannelVkInfoDto"
              },
              {
                "$ref": "#/components/schemas/ChannelTrovoInfoDto"
              },
              {
                "$ref": "#/components/schemas/ChannelTwitchInfoDto"
              },
              {
                "$ref": "#/components/schemas/ChannelOkInfoDto"
              },
              {
                "$ref": "#/components/schemas/ChannelDefaultInfoDto"
              }
            ]
          },
          "rtmp": {
            "nullable": true,
            "description": "rtmp",
            "allOf": [
              {
                "$ref": "#/components/schemas/SearchChannelRtmpDto"
              }
            ]
          },
          "credentials": {
            "nullable": true,
            "description": "credentials",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchChannelCredentialsDto"
            }
          },
          "tokens": {
            "description": "Tokens",
            "allOf": [
              {
                "$ref": "#/components/schemas/SearchChannelCredentialDto"
              }
            ]
          },
          "live_users": {
            "description": "live_users",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchChannelLiveUserDto"
            }
          },
          "platform": {
            "description": "Platform",
            "allOf": [
              {
                "$ref": "#/components/schemas/SearchChannelPlatformDto"
              }
            ]
          }
        },
        "required": [
          "name",
          "id",
          "group_id",
          "type",
          "photo_default",
          "sell",
          "price",
          "live",
          "status",
          "user_id",
          "active",
          "guestsNum",
          "guestRights",
          "usageType",
          "companyRole",
          "threads",
          "streamInfo",
          "rtmp",
          "credentials",
          "tokens",
          "platform"
        ]
      },
      "SearchChannelPlatformsDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Id"
          },
          "type": {
            "type": "string",
            "description": "Type"
          },
          "title": {
            "type": "string",
            "description": "Title"
          },
          "edit_name": {
            "type": "number",
            "description": "Is edit name"
          }
        },
        "required": [
          "id",
          "type",
          "title",
          "edit_name"
        ]
      },
      "SiteSearchChannelResponse": {
        "type": "object",
        "properties": {
          "results": {
            "description": "Array of items",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchChannelItem"
            }
          },
          "platforms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchChannelPlatformsDto"
            }
          },
          "limit": {
            "type": "number"
          },
          "offset": {
            "type": "number"
          },
          "total": {
            "type": "number"
          }
        },
        "required": [
          "results",
          "platforms",
          "limit",
          "offset",
          "total"
        ]
      },
      "GetShortChannelItem": {
        "type": "object",
        "properties": {
          "channel_id": {
            "type": "number",
            "description": "channel_id"
          },
          "type": {
            "type": "string",
            "description": "type"
          },
          "name": {
            "type": "string",
            "description": "name"
          },
          "photo_default": {
            "type": "string",
            "nullable": true,
            "description": "photo_default"
          }
        },
        "required": [
          "channel_id",
          "type",
          "name",
          "photo_default"
        ]
      },
      "SiteGetShortChannelResponse": {
        "type": "object",
        "properties": {
          "results": {
            "description": "Array of items",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetShortChannelItem"
            }
          }
        },
        "required": [
          "results"
        ]
      },
      "MethodSetStatusChannelRequest": {
        "type": "object",
        "properties": {
          "v": {
            "type": "string",
            "description": "Version",
            "enum": [
              "1"
            ],
            "example": "1"
          },
          "language": {
            "default": "en",
            "enum": [
              "ru",
              "en",
              "cn"
            ],
            "type": "string",
            "description": "Current language"
          },
          "channel_id": {
            "type": "number",
            "description": "Channel id"
          },
          "status": {
            "type": "boolean",
            "description": "Status channel status"
          }
        },
        "required": [
          "v",
          "channel_id",
          "status"
        ]
      },
      "TranscoderChannelItem": {
        "type": "object",
        "properties": {
          "group_id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "photo_default": {
            "type": "string"
          },
          "live": {
            "type": "number"
          },
          "status": {
            "type": "string"
          },
          "user_id": {
            "type": "number"
          },
          "transcoderId": {
            "type": "number"
          }
        },
        "required": [
          "group_id",
          "name",
          "type",
          "active",
          "photo_default",
          "live",
          "status",
          "user_id",
          "transcoderId"
        ]
      },
      "TranscoderListItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Id"
          },
          "name": {
            "type": "string",
            "description": "Name"
          },
          "createdAt": {
            "type": "string",
            "description": "createdAt"
          },
          "fps": {
            "type": "number",
            "description": "fps"
          },
          "vBitrate": {
            "type": "number",
            "description": "video bitrate"
          },
          "aBitrate": {
            "type": "number",
            "description": "audio bitrate"
          },
          "width": {
            "type": "number",
            "description": "width"
          },
          "height": {
            "type": "number",
            "description": "height"
          },
          "rotation": {
            "type": "number",
            "description": "rotation"
          },
          "bFrames": {
            "type": "number",
            "description": "B-Frames"
          },
          "status": {
            "enum": [
              "active",
              "inactive"
            ],
            "type": "string",
            "description": "Status"
          },
          "videoCodec": {
            "type": "string",
            "description": "Video codec",
            "enum": [
              "h264",
              "hevc"
            ]
          },
          "channels": {
            "description": "B-Frames",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TranscoderChannelItem"
            }
          }
        },
        "required": [
          "id",
          "name",
          "createdAt",
          "status",
          "videoCodec",
          "channels"
        ]
      },
      "SiteTranscoderListResponse": {
        "type": "object",
        "properties": {
          "results": {
            "description": "Array of items",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TranscoderListItem"
            }
          }
        },
        "required": [
          "results"
        ]
      },
      "TranscoderCreateDto": {
        "type": "object",
        "properties": {
          "v": {
            "type": "string",
            "description": "Version",
            "enum": [
              "1",
              "2",
              "3"
            ],
            "example": "3"
          },
          "language": {
            "default": "en",
            "enum": [
              "ru",
              "en",
              "cn"
            ],
            "type": "string",
            "description": "Current language",
            "example": "en"
          },
          "project_id": {
            "type": "number",
            "description": "Project id"
          },
          "width": {
            "type": "number",
            "minimum": 100,
            "maximum": 4000,
            "description": "Width"
          },
          "height": {
            "type": "number",
            "minimum": 100,
            "maximum": 4000,
            "description": "Height"
          },
          "fps": {
            "type": "number",
            "minimum": 5,
            "maximum": 60,
            "description": "Fps"
          },
          "vBitrate": {
            "type": "number",
            "minimum": 1000,
            "maximum": 100000,
            "description": "Video bitrate, kbps"
          },
          "aBitrate": {
            "type": "number",
            "minimum": 60,
            "maximum": 1000,
            "description": "Audio bitrate, kbps"
          },
          "name": {
            "type": "string",
            "minLength": 0,
            "maxLength": 100,
            "description": "Name"
          },
          "rotation": {
            "type": "number",
            "minimum": 1,
            "maximum": 2,
            "description": "Rotation"
          },
          "bFrames": {
            "type": "number",
            "minimum": 0,
            "maximum": 3,
            "description": "Rotation"
          },
          "channelIds": {
            "type": "number",
            "description": "ChannelIds"
          },
          "videoCodecId": {
            "type": "number",
            "description": "Video codec id"
          }
        },
        "required": [
          "v",
          "language",
          "project_id",
          "name",
          "videoCodecId"
        ]
      },
      "TranscoderUpdateDto": {
        "type": "object",
        "properties": {
          "v": {
            "type": "string",
            "description": "Version",
            "enum": [
              "1",
              "2",
              "3"
            ],
            "example": "3"
          },
          "language": {
            "default": "en",
            "enum": [
              "ru",
              "en",
              "cn"
            ],
            "type": "string",
            "description": "Current language",
            "example": "en"
          },
          "project_id": {
            "type": "number",
            "description": "Project id"
          },
          "transcoder_id": {
            "type": "number",
            "description": "Transcoder id"
          },
          "width": {
            "type": "number",
            "minimum": 100,
            "maximum": 4000,
            "description": "Width"
          },
          "height": {
            "type": "number",
            "minimum": 100,
            "maximum": 4000,
            "description": "Height"
          },
          "fps": {
            "type": "number",
            "minimum": 5,
            "maximum": 60,
            "description": "Fps"
          },
          "vBitrate": {
            "type": "number",
            "minimum": 1000,
            "maximum": 100000,
            "description": "Video bitrate, kbps"
          },
          "aBitrate": {
            "type": "number",
            "minimum": 60,
            "maximum": 1000,
            "description": "Audio bitrate, kbps"
          },
          "name": {
            "type": "string",
            "minLength": 0,
            "maxLength": 100,
            "description": "Name"
          },
          "rotation": {
            "type": "number",
            "minimum": 1,
            "maximum": 2,
            "description": "Rotation"
          },
          "bFrames": {
            "type": "number",
            "minimum": 0,
            "maximum": 3,
            "description": "Rotation"
          },
          "channelIds": {
            "type": "number",
            "description": "ChannelIds"
          },
          "videoCodecId": {
            "type": "number",
            "description": "Video codec id"
          }
        },
        "required": [
          "v",
          "language",
          "project_id",
          "transcoder_id",
          "videoCodecId"
        ]
      },
      "TranscoderItemDto": {
        "type": "object",
        "properties": {
          "v": {
            "type": "string",
            "description": "Version",
            "enum": [
              "1",
              "2",
              "3"
            ],
            "example": "3"
          },
          "language": {
            "default": "en",
            "enum": [
              "ru",
              "en",
              "cn"
            ],
            "type": "string",
            "description": "Current language",
            "example": "en"
          },
          "project_id": {
            "type": "number",
            "description": "Project id"
          },
          "transcoder_id": {
            "type": "number",
            "description": "Transcoder id"
          }
        },
        "required": [
          "v",
          "language",
          "project_id",
          "transcoder_id"
        ]
      },
      "CategorySubListItemResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "id"
          },
          "name": {
            "type": "string",
            "description": "name"
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "CategoryItemResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "id"
          },
          "name": {
            "type": "string",
            "description": "name"
          },
          "image": {
            "type": "string",
            "description": "image"
          },
          "subList": {
            "description": "sublist",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategorySubListItemResponse"
            }
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "PlatformsSupportedItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "id",
            "example": 1
          },
          "is_adding": {
            "type": "number",
            "description": "The possibility of adding a platform",
            "example": 1
          },
          "title": {
            "type": "string",
            "description": "title",
            "example": "YouTube"
          },
          "extension": {
            "enum": [
              "png",
              "svg"
            ],
            "type": "string",
            "description": "Extension",
            "example": "svg"
          },
          "url": {
            "type": "string",
            "description": "url",
            "example": "https://www.youtube.com"
          },
          "type": {
            "type": "string",
            "description": "type",
            "example": "youtube"
          },
          "oauth": {
            "type": "number",
            "description": "oauth",
            "example": 0
          },
          "read_chat": {
            "type": "number",
            "description": "read_chat",
            "example": 0
          },
          "write_chat": {
            "type": "number",
            "description": "write_chat",
            "example": 0
          },
          "edit_name": {
            "type": "number",
            "description": "edit_name",
            "example": 0
          },
          "set_title": {
            "type": "number",
            "description": "set_title",
            "example": 0
          },
          "set_description": {
            "type": "number",
            "description": "set_description",
            "example": 0
          },
          "created_stream": {
            "type": "number",
            "description": "created_stream",
            "example": 0
          },
          "rtmp_url": {
            "type": "number",
            "description": "rtmp_url",
            "example": 0
          },
          "rtmp_key": {
            "type": "number",
            "description": "rtmp_key",
            "example": 0
          },
          "planned": {
            "type": "number",
            "description": "planned",
            "example": 0
          },
          "options": {
            "type": "number",
            "description": "options",
            "example": 0
          },
          "url_stream": {
            "type": "number",
            "description": "url_stream",
            "example": 0
          },
          "viewers": {
            "type": "number",
            "description": "viewers",
            "example": 0
          },
          "messages": {
            "type": "number",
            "description": "messages",
            "example": 0
          },
          "like": {
            "type": "number",
            "description": "like",
            "example": 0
          }
        },
        "required": [
          "id",
          "is_adding",
          "title",
          "extension",
          "url",
          "type",
          "oauth",
          "read_chat",
          "write_chat",
          "edit_name",
          "set_title",
          "set_description",
          "created_stream",
          "rtmp_url",
          "rtmp_key",
          "planned",
          "options",
          "url_stream",
          "viewers",
          "messages",
          "like"
        ]
      },
      "SitePlatformsSupportedResponse": {
        "type": "object",
        "properties": {
          "results": {
            "description": "Array of items",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlatformsSupportedItem"
            }
          }
        },
        "required": [
          "results"
        ]
      },
      "SiteRefreshAuthBodyRequest": {
        "type": "object",
        "properties": {
          "v": {
            "type": "string",
            "description": "Version",
            "enum": [
              "1",
              "2",
              "3"
            ],
            "example": "3"
          },
          "language": {
            "default": "en",
            "enum": [
              "ru",
              "en",
              "cn"
            ],
            "type": "string",
            "description": "Current language",
            "example": "en"
          },
          "app": {
            "enum": [
              "site",
              "admin",
              "mobile",
              "desktop"
            ],
            "type": "string",
            "description": "App oauth",
            "default": "site",
            "example": "site"
          },
          "refresh": {
            "type": "string",
            "description": "Refresh token"
          },
          "fingerprint": {
            "type": "string",
            "default": "",
            "description": "Fingerprint"
          }
        },
        "required": [
          "v",
          "language",
          "app",
          "refresh"
        ]
      },
      "RefreshAuthResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "description": "Access token"
          },
          "refreshToken": {
            "type": "string",
            "description": "Refresh token"
          }
        },
        "required": [
          "accessToken",
          "refreshToken"
        ]
      },
      "SiteLogoutAuthRequest": {
        "type": "object",
        "properties": {
          "app": {
            "enum": [
              "site",
              "admin",
              "mobile",
              "desktop"
            ],
            "type": "string",
            "description": "App oauth",
            "default": "site",
            "example": "site"
          },
          "refresh": {
            "type": "string",
            "description": "Refresh token"
          }
        },
        "required": [
          "app",
          "refresh"
        ]
      },
      "CodeAppAuthResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Code for auth in app"
          }
        },
        "required": [
          "code"
        ]
      },
      "SiteAuthExchangeRequest": {
        "type": "object",
        "properties": {
          "v": {
            "type": "string",
            "description": "Version",
            "enum": [
              "1",
              "2",
              "3"
            ],
            "example": "3"
          },
          "language": {
            "default": "en",
            "enum": [
              "ru",
              "en",
              "cn"
            ],
            "type": "string",
            "description": "Current language",
            "example": "en"
          },
          "code": {
            "type": "string",
            "description": "Auth code for exchange of token"
          },
          "userAgent": {
            "type": "string",
            "description": "userAgent"
          },
          "fingerprint": {
            "type": "string",
            "default": "",
            "description": "Fingerprint"
          },
          "app": {
            "enum": [
              "site",
              "admin",
              "mobile",
              "desktop"
            ],
            "type": "string",
            "description": "App oauth",
            "default": "site",
            "example": "site"
          }
        },
        "required": [
          "v",
          "language",
          "code",
          "userAgent",
          "app"
        ]
      },
      "TransactionResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "user_id": {
            "type": "number"
          },
          "payout_id": {
            "type": "number",
            "nullable": true
          },
          "type": {
            "type": "string"
          },
          "sum": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "code": {
            "type": "object"
          },
          "referral_id": {
            "type": "number",
            "nullable": true
          },
          "date": {
            "format": "date-time",
            "type": "string"
          },
          "paymentId": {
            "type": "number",
            "nullable": true
          },
          "payoutId": {
            "type": "number",
            "nullable": true
          }
        },
        "required": [
          "id",
          "user_id",
          "payout_id",
          "type",
          "sum",
          "description",
          "code",
          "referral_id",
          "date",
          "paymentId",
          "payoutId"
        ]
      },
      "BlogPageTagContent": {
        "type": "object",
        "properties": {}
      },
      "BlogPageSiteResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/ObjectId"
              }
            },
            "required": [
              "type"
            ]
          },
          "url": {
            "type": "string",
            "description": "Url of page"
          },
          "status": {
            "type": "string",
            "enum": [
              "None",
              "Backlog",
              "Drafting",
              "Reviewing",
              "Done",
              "Published"
            ],
            "default": "Backlog",
            "description": "Page status"
          },
          "date_update": {
            "format": "date-time",
            "type": "string",
            "description": "Date of last update"
          },
          "date_publish": {
            "format": "date-time",
            "type": "string",
            "description": "Date of publish for sort"
          },
          "tags": {
            "description": "Tags",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BlogPageTagContent"
            }
          },
          "language": {
            "enum": [
              "russian",
              "english",
              "none"
            ],
            "type": "string",
            "description": "Language for indexing",
            "default": "russian"
          },
          "language_iso": {
            "enum": [
              "ru",
              "en",
              "cn"
            ],
            "type": "string",
            "description": "Language ISO",
            "default": "russian"
          },
          "title": {
            "type": "string",
            "description": "Subject"
          },
          "image": {
            "type": "string",
            "description": "Url of main image"
          },
          "short_text": {
            "type": "string",
            "description": "Short text"
          },
          "text": {
            "type": "string",
            "description": "Text"
          },
          "alt_languages": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "ru",
                "en",
                "cn"
              ]
            },
            "description": "Alternative language (Array of Language ISO)",
            "default": []
          }
        },
        "required": [
          "_id",
          "url",
          "status",
          "date_update",
          "date_publish",
          "tags",
          "language",
          "language_iso",
          "title",
          "image",
          "short_text",
          "text",
          "alt_languages"
        ]
      },
      "HelpPageIcon": {
        "type": "object",
        "properties": {}
      },
      "HelpPageResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/ObjectId"
              }
            },
            "required": [
              "type"
            ]
          },
          "url": {
            "type": "string",
            "description": "url"
          },
          "url_inherit": {
            "type": "string",
            "description": "Generated url from root path"
          },
          "notion_parent_id": {
            "type": "string",
            "description": "Notion parent id"
          },
          "status": {
            "enum": [
              "None",
              "Backlog",
              "Drafting",
              "Reviewing",
              "Done",
              "Published"
            ],
            "type": "string",
            "default": "Backlog",
            "description": "Page status"
          },
          "date_update": {
            "format": "date-time",
            "type": "string",
            "description": "Date last update"
          },
          "date_create": {
            "format": "date-time",
            "type": "string",
            "description": "Date create"
          },
          "icon": {
            "nullable": true,
            "description": "Page icon",
            "allOf": [
              {
                "$ref": "#/components/schemas/HelpPageIcon"
              }
            ]
          },
          "title": {
            "type": "string",
            "description": "Subject"
          },
          "language": {
            "enum": [
              "russian",
              "english",
              "none"
            ],
            "type": "string",
            "description": "Language for indexing",
            "default": "russian"
          },
          "language_iso": {
            "enum": [
              "ru",
              "en",
              "cn"
            ],
            "type": "string",
            "description": "Language ISO",
            "default": "ru"
          },
          "text": {
            "type": "string",
            "description": "Text"
          },
          "alt_languages": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "ru",
                "en",
                "cn"
              ]
            },
            "description": "Alternative language (Array of Language ISO)",
            "default": []
          }
        },
        "required": [
          "_id",
          "url",
          "url_inherit",
          "notion_parent_id",
          "status",
          "date_update",
          "date_create",
          "icon",
          "title",
          "language",
          "language_iso",
          "text",
          "alt_languages"
        ]
      },
      "GetHelpPageResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "Response execution success"
          },
          "result": {
            "description": "Page data",
            "allOf": [
              {
                "$ref": "#/components/schemas/HelpPageResponse"
              }
            ]
          }
        },
        "required": [
          "success",
          "result"
        ]
      },
      "StructureHelpPageConnectionsItemLang": {
        "type": "object",
        "properties": {
          "language": {
            "enum": [
              "russian",
              "english",
              "none"
            ],
            "type": "string",
            "description": "Full language name"
          },
          "language_iso": {
            "enum": [
              "ru",
              "en",
              "cn"
            ],
            "type": "string",
            "description": "Short language name"
          },
          "value": {
            "type": "string",
            "description": "Help menu article title"
          }
        },
        "required": [
          "language",
          "language_iso",
          "value"
        ]
      },
      "StructureHelpPageConnectionsItemFinal": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/ObjectId"
              }
            },
            "required": [
              "type"
            ]
          },
          "notion_id": {
            "type": "string",
            "description": "Notion id"
          },
          "notion_parent_id": {
            "type": "string",
            "description": "Notion parent id"
          },
          "url": {
            "type": "string",
            "description": "url"
          },
          "url_inherit": {
            "type": "string",
            "description": "Generated url from root path"
          },
          "status": {
            "enum": [
              "None",
              "Backlog",
              "Drafting",
              "Reviewing",
              "Done",
              "Published"
            ],
            "type": "string",
            "default": "Backlog",
            "description": "Page status"
          },
          "title": {
            "description": "Subject",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StructureHelpPageConnectionsItemLang"
            }
          },
          "icon": {
            "nullable": true,
            "description": "Page icon",
            "allOf": [
              {
                "$ref": "#/components/schemas/HelpPageIcon"
              }
            ]
          },
          "priority": {
            "type": "number",
            "description": "Priority for sorting"
          }
        },
        "required": [
          "_id",
          "notion_id",
          "notion_parent_id",
          "url",
          "url_inherit",
          "status",
          "title",
          "icon",
          "priority"
        ]
      },
      "StructureHelpPageItemResponse3": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/ObjectId"
              }
            },
            "required": [
              "type"
            ]
          },
          "notion_id": {
            "type": "string",
            "description": "Notion id"
          },
          "notion_parent_id": {
            "type": "string",
            "description": "Notion parent id"
          },
          "url": {
            "type": "string",
            "description": "url"
          },
          "url_inherit": {
            "type": "string",
            "description": "Generated url from root path"
          },
          "status": {
            "enum": [
              "None",
              "Backlog",
              "Drafting",
              "Reviewing",
              "Done",
              "Published"
            ],
            "type": "string",
            "default": "Backlog",
            "description": "Page status"
          },
          "title": {
            "description": "Subject",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StructureHelpPageConnectionsItemLang"
            }
          },
          "icon": {
            "nullable": true,
            "description": "Page icon",
            "allOf": [
              {
                "$ref": "#/components/schemas/HelpPageIcon"
              }
            ]
          },
          "priority": {
            "type": "number",
            "description": "Priority for sorting"
          },
          "connections": {
            "description": "Structure of child pages same as this array of class StructureHelpPageItemResponse, maximum 4",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StructureHelpPageConnectionsItemFinal"
            }
          }
        },
        "required": [
          "_id",
          "notion_id",
          "notion_parent_id",
          "url",
          "url_inherit",
          "status",
          "title",
          "icon",
          "priority",
          "connections"
        ]
      },
      "StructureHelpPageItemResponse2": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/ObjectId"
              }
            },
            "required": [
              "type"
            ]
          },
          "notion_id": {
            "type": "string",
            "description": "Notion id"
          },
          "notion_parent_id": {
            "type": "string",
            "description": "Notion parent id"
          },
          "url": {
            "type": "string",
            "description": "url"
          },
          "url_inherit": {
            "type": "string",
            "description": "Generated url from root path"
          },
          "status": {
            "enum": [
              "None",
              "Backlog",
              "Drafting",
              "Reviewing",
              "Done",
              "Published"
            ],
            "type": "string",
            "default": "Backlog",
            "description": "Page status"
          },
          "title": {
            "description": "Subject",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StructureHelpPageConnectionsItemLang"
            }
          },
          "icon": {
            "nullable": true,
            "description": "Page icon",
            "allOf": [
              {
                "$ref": "#/components/schemas/HelpPageIcon"
              }
            ]
          },
          "priority": {
            "type": "number",
            "description": "Priority for sorting"
          },
          "connections": {
            "description": "Structure of child pages same as this array of class StructureHelpPageItemResponse, maximum 4",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StructureHelpPageItemResponse3"
            }
          }
        },
        "required": [
          "_id",
          "notion_id",
          "notion_parent_id",
          "url",
          "url_inherit",
          "status",
          "title",
          "icon",
          "priority",
          "connections"
        ]
      },
      "StructureHelpPageItemResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/ObjectId"
              }
            },
            "required": [
              "type"
            ]
          },
          "notion_id": {
            "type": "string",
            "description": "Notion id"
          },
          "notion_parent_id": {
            "type": "string",
            "description": "Notion parent id"
          },
          "url": {
            "type": "string",
            "description": "url"
          },
          "url_inherit": {
            "type": "string",
            "description": "Generated url from root path"
          },
          "status": {
            "enum": [
              "None",
              "Backlog",
              "Drafting",
              "Reviewing",
              "Done",
              "Published"
            ],
            "type": "string",
            "default": "Backlog",
            "description": "Page status"
          },
          "title": {
            "description": "Subject",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StructureHelpPageConnectionsItemLang"
            }
          },
          "icon": {
            "nullable": true,
            "description": "Page icon",
            "allOf": [
              {
                "$ref": "#/components/schemas/HelpPageIcon"
              }
            ]
          },
          "priority": {
            "type": "number",
            "description": "Priority for sorting"
          },
          "connections": {
            "description": "Structure of child pages same as this array of class StructureHelpPageItemResponse, maximum 4",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StructureHelpPageItemResponse2"
            }
          }
        },
        "required": [
          "_id",
          "notion_id",
          "notion_parent_id",
          "url",
          "url_inherit",
          "status",
          "title",
          "icon",
          "priority",
          "connections"
        ]
      },
      "StructureHelpPageResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "Response execution success"
          },
          "result": {
            "description": "Structure of help page",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StructureHelpPageItemResponse"
            }
          }
        },
        "required": [
          "success",
          "result"
        ]
      },
      "NotifyHistorySiteResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id of page in mongodb"
          },
          "project_id": {
            "type": "number",
            "description": "Project id"
          },
          "date_create": {
            "format": "date-time",
            "type": "string",
            "description": "Date create"
          },
          "actions": {
            "type": "object",
            "description": "Actions"
          },
          "channel": {
            "enum": [
              "telegram",
              "cabinet",
              "mobile"
            ],
            "type": "string",
            "description": "Channel"
          },
          "text": {
            "description": "Array of texts",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InternalNotifyTypeText"
            }
          },
          "status_read": {
            "type": "boolean",
            "description": "Status read"
          },
          "category": {
            "enum": [
              "important",
              "stream"
            ],
            "type": "string",
            "description": "Category of user notify"
          }
        },
        "required": [
          "id",
          "project_id",
          "date_create",
          "actions",
          "channel",
          "text",
          "status_read",
          "category"
        ]
      },
      "NotifyHistoryStatusUserResponse": {
        "type": "object",
        "properties": {
          "count_unread": {
            "type": "number",
            "description": "Count unread"
          }
        },
        "required": [
          "count_unread"
        ]
      },
      "SiteMarkReadHistoryRequest": {
        "type": "object",
        "properties": {
          "notify_history_ids": {
            "description": "Id of page in mongodb",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "notify_history_ids"
        ]
      },
      "SiteMarkReadHistoryResponse": {
        "type": "object",
        "properties": {
          "count": {
            "type": "number",
            "description": "Count read"
          }
        },
        "required": [
          "count"
        ]
      },
      "ProjectChannelInviteProjectResponse": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "number",
            "example": 1,
            "description": "Unique id"
          },
          "name": {
            "type": "string",
            "example": "Alon",
            "description": "First name"
          },
          "fename": {
            "type": "string",
            "example": "Walker",
            "description": "Last name"
          },
          "photo_50": {
            "type": "string",
            "example": "https://example.com/photo.jpg",
            "description": "Link to avatar 50*50px"
          },
          "ref_id": {
            "type": "string",
            "example": "asdfaD9",
            "description": "Unique symbol id of user"
          }
        },
        "required": [
          "user_id",
          "name",
          "fename",
          "photo_50",
          "ref_id"
        ]
      },
      "ProjectChannelInviteResponse": {
        "type": "object",
        "properties": {
          "project_channel_invite_id": {
            "type": "number",
            "example": 1,
            "description": "Unique id"
          },
          "channel_id": {
            "type": "number",
            "example": 1,
            "description": "Channel id"
          },
          "to_project_id": {
            "type": "number",
            "nullable": true,
            "example": 1,
            "description": "Project id (user)"
          },
          "access_type": {
            "type": "number",
            "example": 1,
            "description": "Access type"
          },
          "date": {
            "format": "date-time",
            "type": "string",
            "example": "2025-05-29T14:53:19.320Z",
            "description": "Date create"
          },
          "secret": {
            "type": "string",
            "description": "Secret key for link"
          },
          "email": {
            "type": "string",
            "nullable": true,
            "description": "Email"
          },
          "reject": {
            "type": "boolean",
            "nullable": true,
            "description": "If rejected request then true"
          },
          "from_user_id": {
            "type": "number",
            "nullable": true,
            "description": "The user who granted access"
          },
          "from_project_id": {
            "type": "number",
            "nullable": true,
            "description": "from_project_id"
          },
          "to_project_": {
            "description": "User info",
            "example": {
              "user_id": 1,
              "name": "Alon",
              "fename": "Walker",
              "photo_50": "https://example.com/photo.jpg",
              "ref_id": "asdfaD9"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/ProjectChannelInviteProjectResponse"
              }
            ]
          }
        },
        "required": [
          "project_channel_invite_id",
          "channel_id",
          "to_project_id",
          "access_type",
          "date",
          "secret",
          "email",
          "reject",
          "from_user_id",
          "from_project_id"
        ]
      },
      "ProjectChannelInviteChannelLinkResponse": {
        "type": "object",
        "properties": {
          "channel_id": {
            "type": "number",
            "example": 1,
            "description": "Unique id"
          },
          "name": {
            "type": "string",
            "example": "Alon",
            "description": "First name"
          },
          "photo_50": {
            "type": "string",
            "example": "https://example.com/photo.jpg",
            "description": "Link to avatar 50*50px"
          }
        },
        "required": [
          "channel_id",
          "name",
          "photo_50"
        ]
      },
      "ProjectChannelInviteLinkResponse": {
        "type": "object",
        "properties": {
          "project_channel_invite_id": {
            "type": "number",
            "example": 1,
            "description": "Unique id"
          },
          "channel_id": {
            "type": "number",
            "example": 1,
            "description": "Channel id"
          },
          "to_project_id": {
            "type": "number",
            "nullable": true,
            "example": 1,
            "description": "Project id (in invite for project id)"
          },
          "access_type": {
            "type": "number",
            "example": 1,
            "description": "Access type"
          },
          "date": {
            "format": "date-time",
            "type": "string",
            "example": 1,
            "description": "Date create"
          },
          "secret": {
            "type": "string",
            "example": 1,
            "description": "Secret key for link"
          },
          "email": {
            "type": "string",
            "nullable": true,
            "example": 1,
            "description": "Email"
          },
          "reject": {
            "type": "boolean",
            "nullable": true,
            "example": 1,
            "description": "If rejected then true"
          },
          "from_user_id": {
            "type": "number",
            "nullable": true,
            "example": 1,
            "description": "The user who granted access"
          },
          "channel_": {
            "description": "Project info",
            "example": {
              "user_id": 1,
              "name": "Alon",
              "fename": "Walker",
              "photo_50": "https://example.com/photo.jpg",
              "ref_id": "asdfaD9"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/ProjectChannelInviteChannelLinkResponse"
              }
            ]
          }
        },
        "required": [
          "project_channel_invite_id",
          "channel_id",
          "to_project_id",
          "access_type",
          "date",
          "secret",
          "email",
          "reject",
          "from_user_id"
        ]
      },
      "ProjectChannelResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1,
            "description": "Primary key"
          },
          "project_id": {
            "type": "number",
            "example": 1,
            "description": "User id"
          },
          "channel_id": {
            "type": "number",
            "example": 1,
            "description": "Channel id"
          },
          "owner_id": {
            "type": "number",
            "example": 1,
            "description": "Owner id"
          },
          "usageType": {
            "type": "number",
            "example": 1,
            "description": "usageType"
          }
        },
        "required": [
          "id",
          "project_id",
          "channel_id",
          "owner_id",
          "usageType"
        ]
      },
      "SiteBlogPageTagResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/ObjectId"
              }
            },
            "required": [
              "type"
            ]
          },
          "language": {
            "enum": [
              "russian",
              "english",
              "none"
            ],
            "type": "string",
            "description": "Language for indexing",
            "default": "russian",
            "example": "russian"
          },
          "language_iso": {
            "enum": [
              "ru",
              "en",
              "cn"
            ],
            "type": "string",
            "description": "Language ISO",
            "default": "ru",
            "example": "ru"
          },
          "title": {
            "type": "string",
            "description": "Title",
            "example": "Update"
          },
          "count_use": {
            "type": "number",
            "description": "Count of user",
            "example": 1
          }
        },
        "required": [
          "_id",
          "language",
          "language_iso",
          "title",
          "count_use"
        ]
      },
      "RtmpServerLocationResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Location name"
          },
          "host": {
            "type": "string",
            "description": "Host"
          },
          "url": {
            "type": "string",
            "description": "Url for connect"
          }
        },
        "required": [
          "name",
          "host",
          "url"
        ]
      },
      "CountryItem": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Country name"
          },
          "code": {
            "type": "string",
            "description": "Country code"
          },
          "id": {
            "type": "number",
            "description": "Id of the country"
          }
        },
        "required": [
          "name",
          "code",
          "id"
        ]
      },
      "RtmpServerLoading": {
        "type": "object",
        "properties": {
          "avg": {
            "type": "number",
            "description": "Average"
          },
          "max": {
            "type": "number",
            "description": "Max"
          }
        },
        "required": [
          "avg",
          "max"
        ]
      },
      "RtmpServerPlatformQuality": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Platform id"
          },
          "quality": {
            "type": "number",
            "description": "Quality connection"
          },
          "title": {
            "type": "string",
            "description": "Title of platform"
          },
          "status": {
            "type": "string",
            "enum": [
              "good",
              "problem",
              "bad"
            ],
            "example": "good",
            "description": "Quality in string format"
          },
          "reconnect": {
            "type": "number",
            "description": "Reconnect"
          }
        },
        "required": [
          "id",
          "quality",
          "title",
          "status",
          "reconnect"
        ]
      },
      "RtmpServerListItem": {
        "type": "object",
        "properties": {
          "city": {
            "type": "string",
            "example": "Moscow",
            "description": "City"
          },
          "url": {
            "type": "string",
            "example": "live.streamvi.io",
            "description": "Rtmp url"
          },
          "country": {
            "description": "Country",
            "allOf": [
              {
                "$ref": "#/components/schemas/CountryItem"
              }
            ]
          },
          "network": {
            "description": "Network load of the selected time",
            "allOf": [
              {
                "$ref": "#/components/schemas/RtmpServerLoading"
              }
            ]
          },
          "cpu": {
            "description": "CPU load of the selected time",
            "allOf": [
              {
                "$ref": "#/components/schemas/RtmpServerLoading"
              }
            ]
          },
          "ram": {
            "description": "RAM load of the selected time",
            "allOf": [
              {
                "$ref": "#/components/schemas/RtmpServerLoading"
              }
            ]
          },
          "quality": {
            "type": "number",
            "example": 0,
            "description": "Quality connection of pool"
          },
          "index": {
            "type": "number",
            "example": 0,
            "description": "Sort index"
          },
          "serverStatus": {
            "type": "string",
            "enum": [
              "good",
              "problem",
              "bad"
            ],
            "example": "good",
            "description": "Quality in string format"
          },
          "platforms": {
            "description": "Quality array",
            "example": [
              {
                "platform_id": 1,
                "quality": 99,
                "serverStatus": "good"
              },
              {
                "platform_id": 2,
                "quality": 99,
                "serverStatus": "good"
              }
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RtmpServerPlatformQuality"
            }
          }
        },
        "required": [
          "city",
          "url",
          "country",
          "network",
          "cpu",
          "ram",
          "quality",
          "index",
          "serverStatus",
          "platforms"
        ]
      },
      "RtmpServerListResponse": {
        "type": "object",
        "properties": {
          "results": {
            "description": "Array of items",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RtmpServerListItem"
            }
          }
        },
        "required": [
          "results"
        ]
      },
      "RtmpServerStateItem": {
        "type": "object",
        "properties": {
          "city": {
            "type": "string",
            "example": "Moscow",
            "description": "City"
          },
          "country": {
            "description": "Country",
            "allOf": [
              {
                "$ref": "#/components/schemas/CountryItem"
              }
            ]
          },
          "lat": {
            "type": "number",
            "example": "55.752220",
            "description": "Latitude"
          },
          "long": {
            "type": "number",
            "example": "37.615560",
            "description": "Longitude"
          },
          "network": {
            "description": "Network load of the selected time",
            "allOf": [
              {
                "$ref": "#/components/schemas/RtmpServerLoading"
              }
            ]
          },
          "cpu": {
            "description": "CPU load of the selected time",
            "allOf": [
              {
                "$ref": "#/components/schemas/RtmpServerLoading"
              }
            ]
          },
          "ram": {
            "description": "RAM load of the selected time",
            "allOf": [
              {
                "$ref": "#/components/schemas/RtmpServerLoading"
              }
            ]
          },
          "quality": {
            "type": "number",
            "example": 0,
            "description": "Quality connection of pool"
          },
          "serverStatus": {
            "type": "string",
            "enum": [
              "good",
              "problem",
              "bad"
            ],
            "example": "good",
            "description": "Quality in string format"
          },
          "platforms": {
            "description": "Quality array",
            "example": [
              {
                "platform_id": 1,
                "quality": 99,
                "serverStatus": "good"
              },
              {
                "platform_id": 2,
                "quality": 99,
                "serverStatus": "good"
              }
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RtmpServerPlatformQuality"
            }
          }
        },
        "required": [
          "city",
          "country",
          "lat",
          "long",
          "network",
          "cpu",
          "ram",
          "quality",
          "serverStatus",
          "platforms"
        ]
      },
      "RtmpServerStateResponse": {
        "type": "object",
        "properties": {
          "results": {
            "description": "Array of items",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RtmpServerStateItem"
            }
          }
        },
        "required": [
          "results"
        ]
      },
      "TCityChartData": {
        "type": "object",
        "properties": {
          "chartData": {
            "description": "Points for chart [0-100%]",
            "example": [
              95,
              10,
              45
            ],
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "cityName": {
            "type": "string",
            "example": "Moscow",
            "description": "cityName"
          }
        },
        "required": [
          "chartData",
          "cityName"
        ]
      },
      "TCountryChartData": {
        "type": "object",
        "properties": {
          "countryName": {
            "type": "string",
            "example": "Russia",
            "description": "countryName"
          },
          "cities": {
            "description": "Array of cities data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TCityChartData"
            }
          }
        },
        "required": [
          "countryName",
          "cities"
        ]
      },
      "RtmpServerGraphResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "performance",
              "network",
              "cpu",
              "ram",
              "deliveredPackages"
            ],
            "example": "network",
            "description": "Type of graph to display"
          },
          "timeLine": {
            "example": [
              1740738996,
              1740738996,
              1740738996
            ],
            "description": "Time line for graph [timestamp]",
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "countries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TCountryChartData"
            }
          }
        },
        "required": [
          "type",
          "timeLine",
          "countries"
        ]
      },
      "PaySystemListResponse": {
        "type": "object",
        "properties": {
          "pay_system_id": {
            "type": "number",
            "description": "Id"
          },
          "name": {
            "type": "string",
            "description": "Name"
          },
          "min_amount": {
            "type": "number",
            "example": 10,
            "description": "Min amount"
          },
          "max_amount": {
            "type": "number",
            "example": 1000,
            "description": "Max amount"
          },
          "currency": {
            "enum": [
              "rub",
              "usd"
            ],
            "type": "string",
            "example": "rub",
            "description": "Currency"
          },
          "annual": {
            "type": "number",
            "example": 0,
            "description": "The possibility of annual replenishment"
          },
          "topup": {
            "type": "number",
            "example": 0,
            "description": "The ability to replenish the balance"
          },
          "recurrent": {
            "type": "number",
            "example": 0,
            "description": "The possibility of recurrent payment"
          },
          "description": {
            "type": "string",
            "description": "Description"
          }
        },
        "required": [
          "pay_system_id",
          "name",
          "min_amount",
          "max_amount",
          "currency",
          "annual",
          "topup",
          "recurrent",
          "description"
        ]
      },
      "PaymentCreateRequestTopUpBodyDto": {
        "type": "object",
        "properties": {
          "v": {
            "type": "string",
            "description": "Version",
            "enum": [
              "1",
              "2",
              "3"
            ],
            "example": "3"
          },
          "language": {
            "default": "en",
            "enum": [
              "ru",
              "en",
              "cn"
            ],
            "type": "string",
            "description": "Current language",
            "example": "en"
          },
          "project_id": {
            "type": "number",
            "description": "Project id"
          },
          "type": {
            "enum": [
              "restream",
              "transcoding",
              "storage",
              "topup"
            ],
            "type": "string",
            "description": "Code"
          },
          "amount": {
            "type": "number",
            "description": "Amount"
          }
        },
        "required": [
          "v",
          "language",
          "project_id",
          "type",
          "amount"
        ]
      },
      "PaymentCreateRequestRestreamBodyDto": {
        "type": "object",
        "properties": {
          "v": {
            "type": "string",
            "description": "Version",
            "enum": [
              "1",
              "2",
              "3"
            ],
            "example": "3"
          },
          "language": {
            "default": "en",
            "enum": [
              "ru",
              "en",
              "cn"
            ],
            "type": "string",
            "description": "Current language",
            "example": "en"
          },
          "project_id": {
            "type": "number",
            "description": "Project id"
          },
          "type": {
            "enum": [
              "restream",
              "transcoding",
              "storage",
              "topup"
            ],
            "type": "string",
            "description": "Code"
          },
          "amount": {
            "type": "number",
            "description": "Amount"
          },
          "plan_period": {
            "enum": [
              "month",
              "year"
            ],
            "type": "string",
            "description": "Period"
          },
          "plan_restream_id": {
            "type": "number",
            "description": "Restream plan id"
          },
          "plan_restream_count_channel": {
            "type": "number",
            "description": "Channels count"
          },
          "plan_restream_bitrate": {
            "type": "number",
            "description": "Bitrate"
          }
        },
        "required": [
          "v",
          "language",
          "project_id",
          "type",
          "amount",
          "plan_period",
          "plan_restream_id",
          "plan_restream_count_channel",
          "plan_restream_bitrate"
        ]
      },
      "PaymentCreateRequestStorageBodyDto": {
        "type": "object",
        "properties": {
          "v": {
            "type": "string",
            "description": "Version",
            "enum": [
              "1",
              "2",
              "3"
            ],
            "example": "3"
          },
          "language": {
            "default": "en",
            "enum": [
              "ru",
              "en",
              "cn"
            ],
            "type": "string",
            "description": "Current language",
            "example": "en"
          },
          "project_id": {
            "type": "number",
            "description": "Project id"
          },
          "type": {
            "enum": [
              "restream",
              "transcoding",
              "storage",
              "topup"
            ],
            "type": "string",
            "description": "Code"
          },
          "amount": {
            "type": "number",
            "description": "Amount"
          },
          "plan_period": {
            "enum": [
              "month",
              "year"
            ],
            "type": "string",
            "description": "Period"
          },
          "plan_storage_id": {
            "type": "number",
            "description": "Storage plan id"
          },
          "plan_storage_value": {
            "type": "number",
            "description": "Space GB"
          }
        },
        "required": [
          "v",
          "language",
          "project_id",
          "type",
          "amount",
          "plan_period",
          "plan_storage_id",
          "plan_storage_value"
        ]
      },
      "PaymentCreateRequestTranscoderBodyDto": {
        "type": "object",
        "properties": {
          "v": {
            "type": "string",
            "description": "Version",
            "enum": [
              "1",
              "2",
              "3"
            ],
            "example": "3"
          },
          "language": {
            "default": "en",
            "enum": [
              "ru",
              "en",
              "cn"
            ],
            "type": "string",
            "description": "Current language",
            "example": "en"
          },
          "project_id": {
            "type": "number",
            "description": "Project id"
          },
          "type": {
            "enum": [
              "restream",
              "transcoding",
              "storage",
              "topup"
            ],
            "type": "string",
            "description": "Code"
          },
          "amount": {
            "type": "number",
            "description": "Amount"
          },
          "plan_period": {
            "enum": [
              "month",
              "year"
            ],
            "type": "string",
            "description": "Period"
          },
          "plan_transcoding_id": {
            "type": "number",
            "description": "Transcoding plan id"
          },
          "plan_transcoding_count_flow": {
            "type": "number",
            "description": "Count flow"
          }
        },
        "required": [
          "v",
          "language",
          "project_id",
          "type",
          "amount",
          "plan_period",
          "plan_transcoding_id",
          "plan_transcoding_count_flow"
        ]
      },
      "PaymentCreateResponse": {
        "type": "object",
        "properties": {
          "payment_id": {
            "type": "number",
            "description": "Payment Id"
          },
          "pay_name": {
            "type": "string",
            "description": "Pay system name"
          },
          "pay_id": {
            "type": "string",
            "description": "Pay system id"
          },
          "pay_key": {
            "type": "string",
            "description": "Pay system key"
          }
        },
        "required": [
          "payment_id",
          "pay_name"
        ]
      },
      "PaymentStatusResponse": {
        "type": "object",
        "properties": {
          "payment_id": {
            "type": "number",
            "description": "Payment Id"
          },
          "amount": {
            "type": "number",
            "example": "1",
            "description": "Amount"
          },
          "currency": {
            "enum": [
              "rub",
              "usd"
            ],
            "type": "string",
            "example": "usd",
            "description": "Currency"
          },
          "plan_period": {
            "type": "string",
            "description": "Period",
            "enum": [
              "month",
              "year"
            ]
          },
          "status": {
            "type": "string",
            "description": "Status"
          },
          "type": {
            "type": "string",
            "description": "Tariff type"
          },
          "title": {
            "type": "string",
            "description": "Tariff title"
          }
        },
        "required": [
          "payment_id",
          "amount",
          "currency",
          "plan_period",
          "status",
          "type"
        ]
      },
      "PaySettingResponse_v3": {
        "type": "object",
        "properties": {
          "project_id": {
            "type": "number",
            "description": "Project id"
          },
          "currency": {
            "enum": [
              "rub",
              "usd"
            ],
            "type": "string",
            "description": "Currency"
          },
          "countrie_id": {
            "type": "number",
            "description": "Country"
          },
          "organization_id": {
            "type": "number",
            "nullable": true,
            "description": "Organiztion"
          },
          "pay_system_id": {
            "type": "number",
            "description": "Pay system id"
          },
          "email": {
            "type": "string",
            "description": "E-mail"
          },
          "street": {
            "type": "string",
            "nullable": true,
            "description": "Street"
          },
          "house_number": {
            "type": "string",
            "nullable": true,
            "description": "House number"
          },
          "zip": {
            "type": "string",
            "nullable": true,
            "description": "Postal code"
          },
          "city": {
            "type": "string",
            "nullable": true,
            "description": "City"
          },
          "state": {
            "type": "string",
            "nullable": true,
            "description": "State ot region"
          },
          "company_name": {
            "type": "string",
            "nullable": true,
            "description": "Company name"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "Additional information about the payment"
          }
        },
        "required": [
          "project_id",
          "currency",
          "countrie_id",
          "organization_id",
          "pay_system_id",
          "email"
        ]
      },
      "GetPaySettingResponse_v3": {
        "type": "object",
        "properties": {
          "result": {
            "nullable": true,
            "description": "Pay settings data data",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaySettingResponse_v3"
              }
            ]
          }
        },
        "required": [
          "result"
        ]
      },
      "PaySettingBodyDto": {
        "type": "object",
        "properties": {
          "v": {
            "type": "string",
            "description": "Version",
            "enum": [
              "1",
              "2",
              "3"
            ],
            "example": "3"
          },
          "language": {
            "default": "en",
            "enum": [
              "ru",
              "en",
              "cn"
            ],
            "type": "string",
            "description": "Current language",
            "example": "en"
          },
          "project_id": {
            "type": "number",
            "description": "Project id"
          },
          "countrie_id": {
            "type": "number",
            "description": "Countrie id"
          },
          "organization_id": {
            "type": "number",
            "nullable": true,
            "default": null,
            "description": "Organization"
          },
          "pay_system_id": {
            "type": "number",
            "description": "Pay system id"
          },
          "email": {
            "type": "string",
            "format": "email",
            "minLength": 5,
            "maxLength": 255,
            "description": "E-mail"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "default": null,
            "minLength": 10,
            "maxLength": 1000,
            "description": "Additional information about the payment"
          }
        },
        "required": [
          "v",
          "language",
          "project_id",
          "countrie_id",
          "pay_system_id",
          "email"
        ]
      },
      "PayCheckCountryResponse": {
        "type": "object",
        "properties": {
          "confirm": {
            "type": "boolean",
            "description": "Is show modal confirmation"
          },
          "exchange": {
            "type": "number",
            "description": "Exchange rate"
          },
          "currency": {
            "enum": [
              "rub",
              "usd"
            ],
            "type": "string",
            "example": "rub",
            "description": "Currency"
          },
          "country": {
            "type": "object",
            "description": "Country"
          },
          "balance": {
            "type": "object",
            "description": "Balance"
          }
        },
        "required": [
          "confirm",
          "exchange",
          "currency",
          "country",
          "balance"
        ]
      },
      "CheckPullKeyResponse": {
        "type": "object",
        "properties": {
          "transport": {
            "enum": [
              "rtmp",
              "srt",
              "hls"
            ],
            "type": "string",
            "description": "Transport"
          },
          "status": {
            "enum": [
              "active",
              "inactive",
              "error"
            ],
            "type": "string",
            "description": "Pull status"
          },
          "key": {
            "type": "string",
            "description": "Key"
          }
        },
        "required": [
          "transport",
          "status",
          "key"
        ]
      },
      "PullKeyItemResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1,
            "description": "Primary key"
          },
          "uuid": {
            "type": "string",
            "description": "Uuid key"
          },
          "transport": {
            "enum": [
              "rtmp",
              "srt",
              "hls"
            ],
            "type": "string",
            "description": "Transport"
          },
          "name": {
            "type": "string",
            "description": "Name"
          },
          "shareUrl": {
            "type": "string",
            "description": "Share url"
          },
          "status": {
            "enum": [
              "active",
              "inactive",
              "error"
            ],
            "type": "string",
            "description": "Pull status"
          }
        },
        "required": [
          "id",
          "uuid",
          "transport",
          "name",
          "shareUrl",
          "status"
        ]
      },
      "PullKeyListResponse": {
        "type": "object",
        "properties": {
          "results": {
            "description": "Array of items",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PullKeyItemResponse"
            }
          }
        },
        "required": [
          "results"
        ]
      },
      "CreatePullKeyRequest": {
        "type": "object",
        "properties": {
          "v": {
            "type": "string",
            "description": "Version",
            "enum": [
              "1",
              "2",
              "3"
            ],
            "example": "3"
          },
          "language": {
            "default": "en",
            "enum": [
              "ru",
              "en",
              "cn"
            ],
            "type": "string",
            "description": "Current language",
            "example": "en"
          },
          "project_id": {
            "type": "number",
            "description": "Project id"
          },
          "transport": {
            "enum": [
              "rtmp",
              "srt",
              "hls"
            ],
            "type": "string",
            "description": "Provider oauth",
            "example": "rtmp"
          },
          "name": {
            "type": "string",
            "minLength": 0,
            "maxLength": 255,
            "description": "Name"
          }
        },
        "required": [
          "v",
          "language",
          "project_id",
          "transport"
        ]
      },
      "CreatePullKeyResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Key ID"
          }
        },
        "required": [
          "id"
        ]
      },
      "UpdatePullKeyRequest": {
        "type": "object",
        "properties": {
          "v": {
            "type": "string",
            "description": "Version",
            "enum": [
              "1",
              "2",
              "3"
            ],
            "example": "3"
          },
          "language": {
            "default": "en",
            "enum": [
              "ru",
              "en",
              "cn"
            ],
            "type": "string",
            "description": "Current language",
            "example": "en"
          },
          "project_id": {
            "type": "number",
            "description": "Project id"
          },
          "key": {
            "type": "string",
            "description": "Key"
          },
          "region": {
            "type": "string",
            "description": "Region for link"
          }
        },
        "required": [
          "v",
          "language",
          "project_id",
          "key",
          "region"
        ]
      },
      "PayoutCreateRequestBodyDto": {
        "type": "object",
        "properties": {
          "v": {
            "type": "string",
            "description": "Version",
            "enum": [
              "1",
              "2",
              "3"
            ],
            "example": "3"
          },
          "language": {
            "default": "en",
            "enum": [
              "ru",
              "en",
              "cn"
            ],
            "type": "string",
            "description": "Current language",
            "example": "en"
          },
          "payout_system_account_id": {
            "type": "number",
            "description": "Payout system account",
            "example": 1
          },
          "project_id": {
            "type": "number",
            "description": "Project id",
            "example": 1
          },
          "amount": {
            "type": "number",
            "description": "Amount",
            "example": 100
          },
          "wallet_value": {
            "type": "string",
            "description": "Wallet value",
            "example": "1234-1234-1234-1234"
          }
        },
        "required": [
          "v",
          "language",
          "payout_system_account_id",
          "project_id",
          "amount",
          "wallet_value"
        ]
      },
      "PayoutSystemAccountListItemResponse": {
        "type": "object",
        "properties": {
          "payout_system_account_id": {
            "type": "number",
            "description": "Payout system account id",
            "example": 1
          },
          "payout_system_id": {
            "type": "number",
            "description": "Payout system id",
            "example": 1
          },
          "description": {
            "type": "string",
            "description": "Description",
            "example": "Description text"
          },
          "commission": {
            "type": "number",
            "description": "Payout system id",
            "example": 1
          },
          "commission_type": {
            "type": "string",
            "enum": [
              "percent",
              "fix"
            ],
            "description": "Payout system account unique id",
            "example": "fix"
          },
          "title": {
            "type": "string",
            "description": "Title",
            "example": "Title"
          },
          "active": {
            "type": "boolean",
            "description": "Active",
            "example": true
          },
          "currency": {
            "type": "string",
            "enum": [
              "rub",
              "usd"
            ],
            "description": "Currency",
            "example": "usd"
          },
          "min_amount": {
            "type": "number",
            "description": "Minimum amount",
            "example": 1
          },
          "max_amount": {
            "type": "number",
            "description": "Maximum amount",
            "example": 1
          }
        },
        "required": [
          "payout_system_account_id",
          "payout_system_id",
          "description",
          "commission",
          "commission_type",
          "title",
          "active",
          "currency",
          "min_amount",
          "max_amount"
        ]
      },
      "PullServerTransports": {
        "type": "object",
        "properties": {
          "rtmp": {
            "type": "string",
            "example": "rtmp://live.streamvi.io:1935/live/{{key}}",
            "description": "Rtmp url"
          },
          "srt": {
            "type": "string",
            "example": "srt://live.streamvi.io:8093?streamid={{key}}",
            "description": "Srt url"
          },
          "hls": {
            "type": "string",
            "example": "http://live.streamvi.io:8080/live/{{key}}/index.m3u8",
            "description": "Hls url"
          }
        },
        "required": [
          "rtmp",
          "srt",
          "hls"
        ]
      },
      "PullServerListItem": {
        "type": "object",
        "properties": {
          "city": {
            "type": "string",
            "example": "Moscow",
            "description": "City"
          },
          "pingHost": {
            "type": "string",
            "example": "ping.streamvi.io",
            "description": "Ping host"
          },
          "url": {
            "description": "Transports",
            "allOf": [
              {
                "$ref": "#/components/schemas/PullServerTransports"
              }
            ]
          },
          "country": {
            "description": "Country",
            "allOf": [
              {
                "$ref": "#/components/schemas/CountryItem"
              }
            ]
          }
        },
        "required": [
          "city",
          "pingHost",
          "url",
          "country"
        ]
      },
      "PullServerListResponse": {
        "type": "object",
        "properties": {
          "results": {
            "description": "Array of items",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PullServerListItem"
            }
          }
        },
        "required": [
          "results"
        ]
      },
      "MessageRestreamResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "event_id": {
            "type": "string"
          },
          "restream_id": {
            "type": "number"
          },
          "platform": {
            "type": "string"
          },
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "error": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "restream_id",
          "platform",
          "created_at"
        ]
      },
      "MessageResponseDto": {
        "type": "object",
        "properties": {
          "event_id": {
            "type": "string"
          },
          "restreams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MessageRestreamResponseDto"
            }
          },
          "entities": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "text": {
            "type": "string"
          },
          "sender": {
            "type": "object"
          },
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "broadcast_id": {
            "type": "number"
          },
          "is_outgoing": {
            "type": "boolean"
          }
        },
        "required": [
          "event_id",
          "restreams",
          "entities",
          "text",
          "sender",
          "created_at",
          "broadcast_id",
          "is_outgoing"
        ]
      },
      "MethodChatHistoryResponse": {
        "type": "object",
        "properties": {
          "total": {
            "type": "number"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MessageResponseDto"
            }
          }
        },
        "required": [
          "total",
          "items"
        ]
      },
      "MethodChatSendMessageRequestDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "text": {
            "type": "string",
            "minLength": 1,
            "maxLength": 300
          }
        },
        "required": [
          "id",
          "text"
        ]
      },
      "MethodCurrentBroadcastResponse": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "Access token"
          },
          "broadcast_id": {
            "type": "number",
            "description": "Broadcast Id"
          }
        },
        "required": [
          "access_token",
          "broadcast_id"
        ]
      },
      "MethodBroadcastRestreamItemResponse": {
        "type": "object",
        "properties": {
          "restream_id": {
            "type": "number",
            "description": "Restream Id",
            "example": 222
          },
          "channel_id": {
            "type": "number",
            "description": "Channel Id",
            "example": 111
          },
          "name": {
            "type": "string",
            "description": "Platform name",
            "example": "Name"
          },
          "image": {
            "type": "string",
            "description": "Platform image",
            "example": "https://example.com/image.jpg"
          },
          "platform": {
            "type": "string",
            "description": "Platform type",
            "example": "twitch"
          },
          "viewers": {
            "type": "number",
            "nullable": true,
            "description": "Viewer count",
            "example": 1000
          }
        },
        "required": [
          "restream_id",
          "channel_id",
          "name",
          "image",
          "platform",
          "viewers"
        ]
      },
      "MethodBroadcastRestreamsResponse": {
        "type": "object",
        "properties": {
          "results": {
            "description": "Array of items",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MethodBroadcastRestreamItemResponse"
            }
          }
        },
        "required": [
          "results"
        ]
      },
      "GetVersionAppResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "release name"
          },
          "version": {
            "type": "string",
            "description": "release version"
          },
          "date": {
            "format": "date-time",
            "type": "string",
            "description": "date"
          }
        },
        "required": [
          "name",
          "version",
          "date"
        ]
      },
      "LiveRestreamCentrifugeItemV2": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "Token for authentication channel"
          },
          "channel": {
            "type": "string",
            "description": "Channel for subscription"
          }
        },
        "required": [
          "token",
          "channel"
        ]
      },
      "SiteLiveRestreamCentrifugeResponse": {
        "type": "object",
        "properties": {
          "update_url_channel": {
            "description": "Event for restream update url",
            "allOf": [
              {
                "$ref": "#/components/schemas/LiveRestreamCentrifugeItemV2"
              }
            ]
          },
          "update_stats_channel": {
            "description": "Event for restream update viewers",
            "allOf": [
              {
                "$ref": "#/components/schemas/LiveRestreamCentrifugeItemV2"
              }
            ]
          }
        },
        "required": [
          "update_url_channel",
          "update_stats_channel"
        ]
      },
      "LiveRestreamInfoItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1,
            "description": "Restream id"
          },
          "channel_id": {
            "type": "number",
            "example": 1,
            "description": "Channel id"
          },
          "channel_name": {
            "type": "string",
            "example": "my channel",
            "description": "Channel name"
          },
          "channel_type": {
            "type": "string",
            "example": "youtube",
            "description": "Channel type"
          },
          "url": {
            "type": "string",
            "example": "https://example.com/stream",
            "description": "Stream url"
          },
          "viewer": {
            "type": "number",
            "example": 23,
            "description": "Count of viewers"
          },
          "message": {
            "type": "number",
            "example": 12,
            "description": "Count of message"
          },
          "like": {
            "type": "number",
            "example": 15,
            "description": "Count of like"
          }
        },
        "required": [
          "id",
          "channel_id",
          "channel_name",
          "channel_type"
        ]
      },
      "SiteLiveRestreamsInfoResponse": {
        "type": "object",
        "properties": {
          "results": {
            "description": "Array of items",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LiveRestreamInfoItem"
            }
          },
          "centrifuge": {
            "$ref": "#/components/schemas/SiteLiveRestreamCentrifugeResponse"
          }
        },
        "required": [
          "results",
          "centrifuge"
        ]
      },
      "SitePromoCheckResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Code for auth in app"
          },
          "id": {
            "type": "number",
            "description": "Id entity of type"
          },
          "type": {
            "type": "string",
            "description": "Type promo code",
            "default": "restream"
          }
        },
        "required": [
          "name",
          "id",
          "type"
        ]
      },
      "SitePromoApplyResponse": {
        "type": "object",
        "properties": {
          "result": {
            "type": "string",
            "description": "Result apply code",
            "enum": [
              "top_up",
              "tariff"
            ]
          }
        },
        "required": [
          "result"
        ]
      },
      "GetPolicyStructure": {
        "type": "object",
        "properties": {
          "results": {
            "enum": [
              "refund",
              "terms-of-use",
              "using-cookie",
              "acceptable-use",
              "privacy-notice"
            ],
            "type": "string",
            "description": "Policy page key word"
          }
        },
        "required": [
          "results"
        ]
      },
      "GetPolicyStructureDto": {
        "type": "object",
        "properties": {
          "results": {
            "description": "Array of policy pages",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetPolicyStructure"
            }
          }
        },
        "required": [
          "results"
        ]
      },
      "AmountItem": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "example": 100,
            "description": "Amount of money"
          },
          "currency": {
            "enum": [
              "rub",
              "usd"
            ],
            "type": "string",
            "example": "rub",
            "description": "Currency"
          }
        },
        "required": [
          "amount",
          "currency"
        ]
      },
      "SiteTotalInfoReferralsResponse": {
        "type": "object",
        "properties": {
          "profit": {
            "description": "Amount of referrals",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AmountItem"
            }
          },
          "members": {
            "type": "number",
            "description": "Members of referral"
          }
        },
        "required": [
          "profit",
          "members"
        ]
      }
    }
  }
}